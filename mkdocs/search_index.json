{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-mkdocs", 
            "text": "For full documentation visit  mkdocs.org .", 
            "title": "Welcome to MkDocs"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/amazon/", 
            "text": "Dicas para o AWSCLI\n\n\nConjunto de dicas interessantes para se pegar informa\u00e7\u00f5es das m\u00e1quinas que est\u00e3o na Amazon.\n\n\nPega todas as vari\u00e1veis de ambiente de um ambiente, de uma aplica\u00e7\u00e3o:\n\n\napplication=\nsafeguard\n\nenvironment=\nsafeguard-staging5\n\naws elasticbeanstalk describe-configuration-settings --application-name $application --environment-name $environment --query \nConfigurationSettings[].OptionSettings[?OptionName=='EnvironmentVariables']\n\n\n\n\n\nPega o nome de uma ou mais inst\u00e2ncias\n\n\ninstances=\ni-12345678 i-09876543\n\naws ec2 describe-instances --instance-ids $instances --query \nReservations[].Instances[].Tags[?Key=='Name'].Value\n --output=text\n\n\n\n\nPega informa\u00e7\u00f5es de qual AMI foi utilizada para se gerar as inst\u00e2ncias:\n\n\naws ec2 describe-instances --query \nReservations[].Instances[*].[ImageId,Tags[?Key=='Name']]\n\n\n\n\n\nS3\n\n\nDiscovering how much disk space a bucket is using\n\n\nFrom \nthis answer in StackOverflow\n:\n\n\naws s3 ls s3://\nbucketname\n --recursive  | grep -v -E \"(Bucket: |Prefix: |LastWriteTime|^$|--)\" | awk 'BEGIN {total=0}{total+=$3}END{print total/1024/1024\" MB\"}'\n\n\n\nCopying the content between buckets\n\n\nFirst step, see what it will do:\n\n\naws s3 sync s3://source-bucket s3://destination-bucket --dryrun\n\n\n\nIf everything looks fine, execute it:\n\n\naws s3 sync s3://source-bucket s3://destination-bucket", 
            "title": "Amazon"
        }, 
        {
            "location": "/amazon/#dicas-para-o-awscli", 
            "text": "Conjunto de dicas interessantes para se pegar informa\u00e7\u00f5es das m\u00e1quinas que est\u00e3o na Amazon.", 
            "title": "Dicas para o AWSCLI"
        }, 
        {
            "location": "/amazon/#pega-todas-as-variaveis-de-ambiente-de-um-ambiente-de-uma-aplicacao", 
            "text": "application= safeguard \nenvironment= safeguard-staging5 \naws elasticbeanstalk describe-configuration-settings --application-name $application --environment-name $environment --query  ConfigurationSettings[].OptionSettings[?OptionName=='EnvironmentVariables']", 
            "title": "Pega todas as vari\u00e1veis de ambiente de um ambiente, de uma aplica\u00e7\u00e3o:"
        }, 
        {
            "location": "/amazon/#pega-o-nome-de-uma-ou-mais-instancias", 
            "text": "instances= i-12345678 i-09876543 \naws ec2 describe-instances --instance-ids $instances --query  Reservations[].Instances[].Tags[?Key=='Name'].Value  --output=text", 
            "title": "Pega o nome de uma ou mais inst\u00e2ncias"
        }, 
        {
            "location": "/amazon/#pega-informacoes-de-qual-ami-foi-utilizada-para-se-gerar-as-instancias", 
            "text": "aws ec2 describe-instances --query  Reservations[].Instances[*].[ImageId,Tags[?Key=='Name']]", 
            "title": "Pega informa\u00e7\u00f5es de qual AMI foi utilizada para se gerar as inst\u00e2ncias:"
        }, 
        {
            "location": "/amazon/#s3", 
            "text": "", 
            "title": "S3"
        }, 
        {
            "location": "/amazon/#discovering-how-much-disk-space-a-bucket-is-using", 
            "text": "From  this answer in StackOverflow :  aws s3 ls s3:// bucketname  --recursive  | grep -v -E \"(Bucket: |Prefix: |LastWriteTime|^$|--)\" | awk 'BEGIN {total=0}{total+=$3}END{print total/1024/1024\" MB\"}'", 
            "title": "Discovering how much disk space a bucket is using"
        }, 
        {
            "location": "/amazon/#copying-the-content-between-buckets", 
            "text": "First step, see what it will do:  aws s3 sync s3://source-bucket s3://destination-bucket --dryrun  If everything looks fine, execute it:  aws s3 sync s3://source-bucket s3://destination-bucket", 
            "title": "Copying the content between buckets"
        }, 
        {
            "location": "/banco_de_dados/", 
            "text": "Anota\u00e7\u00f5es referentes a Bancos de Dados\n\n\nMySQL\n\n\nPrimeiramente temos que ter o pacote \nmysql-client\n instalado.\n\n\nTirando o dump\n\n\nmysqldump -u root --host=\nHOST DO BANCO\n --user='\nusername\n' --password='\nsenha do banco\n' database_name \n /tmp/dump.sql\n\n\n\nRestaurando para uma base de dados rails\n\n\nrails db -p \n dump.sql\n\n\n\nPostgreSQL + Amazon RDS\n\n\nTirando um dump de um banco que est\u00e1 na Amazon RDS\n\n\nPara se facilitar o processo de se tirar o dump precisamos ter uma inst\u00e2ncia EC2 em p\u00e9, que servir\u00e1 apenas para se tirar o dump.\n\n\n\n\nPrecisamos instalar os pacotes que cont\u00eam o \npg_dump\n:\n\n\n\n\nsudo apt-get install -y postgresql-client-9.3 postgresql-client-common\n\n\n\n\n\n\nDepois, temos que configurar a vari\u00e1vel de ambiente que tem a senha do banco de dados:\n\n\n\n\nexport PGPASSWORD=\nsenha do banco\n\n\n\n\n\n\n\nFinalmente, come\u00e7amos a tirar o dump:\n\n\n\n\npg_dump -Fc -h host_para_o_banco -U usuario nome_do_banco | gzip -9 \n dump.sql.gz\n\n\n\n\nRestaurando o banco\n\n\nAo final do processo acima temos um arquivo comprimido. Para restaurar o banco a partir deste arquivo podemos fazer algo como o seguinte:\n\n\ngunzip -c dump.sql.gz | pg_restore -U usuario -d nome_da_base", 
            "title": "Banco de dados"
        }, 
        {
            "location": "/banco_de_dados/#anotacoes-referentes-a-bancos-de-dados", 
            "text": "", 
            "title": "Anota\u00e7\u00f5es referentes a Bancos de Dados"
        }, 
        {
            "location": "/banco_de_dados/#mysql", 
            "text": "Primeiramente temos que ter o pacote  mysql-client  instalado.", 
            "title": "MySQL"
        }, 
        {
            "location": "/banco_de_dados/#tirando-o-dump", 
            "text": "mysqldump -u root --host= HOST DO BANCO  --user=' username ' --password=' senha do banco ' database_name   /tmp/dump.sql", 
            "title": "Tirando o dump"
        }, 
        {
            "location": "/banco_de_dados/#restaurando-para-uma-base-de-dados-rails", 
            "text": "rails db -p   dump.sql", 
            "title": "Restaurando para uma base de dados rails"
        }, 
        {
            "location": "/banco_de_dados/#postgresql-amazon-rds", 
            "text": "", 
            "title": "PostgreSQL + Amazon RDS"
        }, 
        {
            "location": "/banco_de_dados/#tirando-um-dump-de-um-banco-que-esta-na-amazon-rds", 
            "text": "Para se facilitar o processo de se tirar o dump precisamos ter uma inst\u00e2ncia EC2 em p\u00e9, que servir\u00e1 apenas para se tirar o dump.   Precisamos instalar os pacotes que cont\u00eam o  pg_dump :   sudo apt-get install -y postgresql-client-9.3 postgresql-client-common   Depois, temos que configurar a vari\u00e1vel de ambiente que tem a senha do banco de dados:   export PGPASSWORD= senha do banco    Finalmente, come\u00e7amos a tirar o dump:   pg_dump -Fc -h host_para_o_banco -U usuario nome_do_banco | gzip -9   dump.sql.gz", 
            "title": "Tirando um dump de um banco que est\u00e1 na Amazon RDS"
        }, 
        {
            "location": "/banco_de_dados/#restaurando-o-banco", 
            "text": "Ao final do processo acima temos um arquivo comprimido. Para restaurar o banco a partir deste arquivo podemos fazer algo como o seguinte:  gunzip -c dump.sql.gz | pg_restore -U usuario -d nome_da_base", 
            "title": "Restaurando o banco"
        }, 
        {
            "location": "/benchmarks/", 
            "text": "Utilizando o Apache Benchmark\n\n\nO \nab\n ou \nApache HTTP server benchmarking tool\n \n\"is a tool for benchmarking your Apache Hypertext Transfer Protocol (HTTP) server. It is designed to give you an impression of how your current Apache installation performs. This especially shows you how many requests per second your Apache installation is capable of serving\"\n.\n\n\nPara se instalar o \nab\n basta executar um\n\n\nsudo apt-get install apache2-utils\n\n\n\n\nExemplos\n\n\n\n\nPara se fazer 10000 requisi\u00e7\u00f5es, de 100 em 100 dizendo ser o firefox:\n\n\n\n\nab -n 10000 -c 100 -H \nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0\n http://45.55.95.61:3000/\n\n\n\n\nPara saber todos os par\u00e2metros e op\u00e7\u00f5es pode-se ver a \ndocumenta\u00e7\u00e3o\n.", 
            "title": "Benchmarks"
        }, 
        {
            "location": "/benchmarks/#utilizando-o-apache-benchmark", 
            "text": "O  ab  ou  Apache HTTP server benchmarking tool   \"is a tool for benchmarking your Apache Hypertext Transfer Protocol (HTTP) server. It is designed to give you an impression of how your current Apache installation performs. This especially shows you how many requests per second your Apache installation is capable of serving\" .  Para se instalar o  ab  basta executar um  sudo apt-get install apache2-utils", 
            "title": "Utilizando o Apache Benchmark"
        }, 
        {
            "location": "/benchmarks/#exemplos", 
            "text": "Para se fazer 10000 requisi\u00e7\u00f5es, de 100 em 100 dizendo ser o firefox:   ab -n 10000 -c 100 -H  User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0  http://45.55.95.61:3000/  Para saber todos os par\u00e2metros e op\u00e7\u00f5es pode-se ver a  documenta\u00e7\u00e3o .", 
            "title": "Exemplos"
        }, 
        {
            "location": "/bash/", 
            "text": "Pegando nome e extens\u00e3o de um arquivo\n\n\nPara se pegar o nome de um arquivo:\n\n\n${name%.*}\n\n\n\n\nPara se pegar a extens\u00e3o de um arquivo:\n\n\n${name##*.}\n\n\n\n\nExemplo:\n\n\n\n\nRenomear v\u00e1rios arquivos deixando-os com 3 digitos:\n\n\n\n\nfor name in *.jpg; do\n  echo mv $name $(printf %03d.%s ${name%.*} ${name##*.})\ndone\n\n\n\n\nConvertendo tabs para espa\u00e7os\n\n\nMisturando algumas \nrespostas do StackOverflow\n conseguimos converter todos os tabs (iniciais) em espa\u00e7os:\n\n\nfind . -type f -not -iwholename '*.git*' -exec bash -c 'expand -t 2 \"$0\" \n /tmp/e \n mv /tmp/e \"$0\"' {} \\;\n\n\n\nIgnorando um diret\u00f3rio:\n\n\nfind . -type f -iname \"*.rb\" -not -path \"*/vendor/*\" -exec bash -c 'expand -t 2 \"$0\" \n /tmp/e \n mv /tmp/e \"$0\"' {} \\;\n\n\n\nSe estivermos em um reposit\u00f3rio git podemos garantir que n\u00e3o alteramos nada de\nverdade executando um:\n\n\ngit diff --ignore-all-space\n\n\n\nConverting spaces in filenames to underlines\n\n\nfor file in *pdf; do mv $file $(echo $file | tr -s ' ' '_'); done\n\nor\n\nfor file in *pdf; do rename 's/ /_/g' $file; done\n\n\n\nGetting the exit status of a command even when using tee\n\n\nEven when using \ntee\n you can use the \n${PIPESTATUS}\n variable to see what was\nthe exit code of the executed command.\nIt can be used to check if the status was \n0\n so you can continue your command\nchain:\n\n\n./my_command.sh | tee -a /tmp/output.log ; test ${PIPESTATUS[0]} -eq 0 \n ...", 
            "title": "Bash"
        }, 
        {
            "location": "/bash/#pegando-nome-e-extensao-de-um-arquivo", 
            "text": "Para se pegar o nome de um arquivo:  ${name%.*}  Para se pegar a extens\u00e3o de um arquivo:  ${name##*.}  Exemplo:   Renomear v\u00e1rios arquivos deixando-os com 3 digitos:   for name in *.jpg; do\n  echo mv $name $(printf %03d.%s ${name%.*} ${name##*.})\ndone", 
            "title": "Pegando nome e extens\u00e3o de um arquivo"
        }, 
        {
            "location": "/bash/#convertendo-tabs-para-espacos", 
            "text": "Misturando algumas  respostas do StackOverflow  conseguimos converter todos os tabs (iniciais) em espa\u00e7os:  find . -type f -not -iwholename '*.git*' -exec bash -c 'expand -t 2 \"$0\"   /tmp/e   mv /tmp/e \"$0\"' {} \\;  Ignorando um diret\u00f3rio:  find . -type f -iname \"*.rb\" -not -path \"*/vendor/*\" -exec bash -c 'expand -t 2 \"$0\"   /tmp/e   mv /tmp/e \"$0\"' {} \\;  Se estivermos em um reposit\u00f3rio git podemos garantir que n\u00e3o alteramos nada de\nverdade executando um:  git diff --ignore-all-space", 
            "title": "Convertendo tabs para espa\u00e7os"
        }, 
        {
            "location": "/bash/#converting-spaces-in-filenames-to-underlines", 
            "text": "for file in *pdf; do mv $file $(echo $file | tr -s ' ' '_'); done\n\nor\n\nfor file in *pdf; do rename 's/ /_/g' $file; done", 
            "title": "Converting spaces in filenames to underlines"
        }, 
        {
            "location": "/bash/#getting-the-exit-status-of-a-command-even-when-using-tee", 
            "text": "Even when using  tee  you can use the  ${PIPESTATUS}  variable to see what was\nthe exit code of the executed command.\nIt can be used to check if the status was  0  so you can continue your command\nchain:  ./my_command.sh | tee -a /tmp/output.log ; test ${PIPESTATUS[0]} -eq 0   ...", 
            "title": "Getting the exit status of a command even when using tee"
        }, 
        {
            "location": "/docker/", 
            "text": "Dicas interessantes para docker\n\n\nExposing a port on a live container\n\n\nFrom this \nStack Overflow hint\n:\n\n\n\n\n\n\nDiscover the IP of the machine:\n\n\ndocker inspect container_name | grep -i IPAddress\n\n\n\n\n\n\nCreate an IPTables rule (with root permissions):\n\n\niptables -t nat -A  DOCKER -p tcp --dport 8001 -j DNAT --to-destination container-ip:8000\n\n\n\n\n\n\nNow you can access the container contents through the hostsIP:port\n\n\n\n\n\n\nLimpando o lixo deixado para tr\u00e1s\n\n\nFrom \nthis site\n:\n\n\nMake sure that exited containers are deleted.\n\n\ndocker rm -v $(docker ps -a -q -f status=exited)\n\n\n\n\nRemove unwanted \u2018dangling\u2019 images.\n\n\ndocker rmi $(docker images -f \ndangling=true\n -q)\n\n\n\n\nStill not enough space? What is this \u2018vfs\u2019 directory?\n\n\ndocker run -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker:/var/lib/docker --rm martin/docker-cleanup-volumes\n\n\n\n\nAcessing the container to use debugging tools\n\n\nIn rails development sometimes we have to use \npry\n via \nbinding.pry\n to debug our code.\n\n\nAs we need to be on the same terminal that is running the process we need to start our server manually:\n\n\ndocker-compose run --service-ports \ncontainer-name-defined-in-the-docker-compose-file\n /bin/bash\nrails s\n\n\n\nAnd then, when we hit the breakpoint (\nbinding.pry\n) we can \nuse pry\n normally.", 
            "title": "Docker"
        }, 
        {
            "location": "/docker/#exposing-a-port-on-a-live-container", 
            "text": "From this  Stack Overflow hint :    Discover the IP of the machine:  docker inspect container_name | grep -i IPAddress    Create an IPTables rule (with root permissions):  iptables -t nat -A  DOCKER -p tcp --dport 8001 -j DNAT --to-destination container-ip:8000    Now you can access the container contents through the hostsIP:port", 
            "title": "Exposing a port on a live container"
        }, 
        {
            "location": "/docker/#limpando-o-lixo-deixado-para-tras", 
            "text": "From  this site :  Make sure that exited containers are deleted.  docker rm -v $(docker ps -a -q -f status=exited)  Remove unwanted \u2018dangling\u2019 images.  docker rmi $(docker images -f  dangling=true  -q)  Still not enough space? What is this \u2018vfs\u2019 directory?  docker run -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker:/var/lib/docker --rm martin/docker-cleanup-volumes", 
            "title": "Limpando o lixo deixado para tr\u00e1s"
        }, 
        {
            "location": "/docker/#acessing-the-container-to-use-debugging-tools", 
            "text": "In rails development sometimes we have to use  pry  via  binding.pry  to debug our code.  As we need to be on the same terminal that is running the process we need to start our server manually:  docker-compose run --service-ports  container-name-defined-in-the-docker-compose-file  /bin/bash\nrails s  And then, when we hit the breakpoint ( binding.pry ) we can  use pry  normally.", 
            "title": "Acessing the container to use debugging tools"
        }, 
        {
            "location": "/git/git/", 
            "text": "\ufeffDicas gerais sobre o git.\n\n\nHow can I determine the url that a local git repo was originally cloned from?\n\n\nFrom \nHow can I determine the url that a local git repo was originally cloned from?\n :\n\n\n# If referential integrity has been broken:\ngit config --get remote.origin.url\n# If referential integrity is intact:\ngit remote show origin\n\n\n\n\nProblema ao se fazer push para um reposit\u00f3rio \"non-bare\"\n\n\n$ git push\nCounting objects: 20, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (17/17), done.\nWriting objects: 100% (18/18), 2.69 KiB | 0 bytes/s, done.\nTotal 18 (delta 9), reused 0 (delta 0)\nremote: error: refusing to update checked out branch: refs/heads/master\nremote: error: By default, updating the current branch in a non-bare repository\nremote: error: is denied, because it will make the index and work tree inconsistent\nremote: error: with what you pushed, and will require 'git reset --hard' to match\nremote: error: the work tree to HEAD.\nremote: error:\nremote: error: You can set 'receive.denyCurrentBranch' configuration variable to\nremote: error: 'ignore' or 'warn' in the remote repository to allow pushing into\nremote: error: its current branch; however, this is not recommended unless you\nremote: error: arranged to update its work tree to match what you pushed in some\nremote: error: other way.\nremote: error:\nremote: error: To squelch this message and still keep the default behaviour, set\nremote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.\nTo /home/hugo/Dropbox/workplace/eve_grabber\n ! [remote rejected] master -\n master (branch is currently checked out)\nerror: failed to push some refs to '/home/hugo/Dropbox/workplace/eve_grabber'\n\n\n\n\nCom a ajuda do \nstack overflow\n:\n\n\nAt the remote repo:\n\n\ngit config --bool core.bare true\n\n\n\n\nThen delete all the files except .git in that folder. And then you will be able to perform git push to the remote repository without any errors.\n\n\nGerando Patches\n\n\nDica do \nHow to create and apply a patch with Git\n:\n\n\nPara se gerar o patch:\n\n\ngit format-patch against_branch_name --stdout \n name_of.patch\n\n\n\n\nOutra forma de se gerar o patch \u00e9 com \ngit diff\n:\n\n\ngit diff sha1..sha2 \n name_of.patch\n\n\n\n\nPara se aplicar o patch:\n\n\ngit apply --stat name_of.patch\n\n\n\n\nAssim, ele s\u00f3 ir\u00e1 mostrar como ser\u00e1 a aplica\u00e7\u00e3o do patch, n\u00e3o aplicar\u00e1 de verdade.\n\n\nPara realmente se aplicar o patch devemos chamar\n\n\ngit am name_of.patch\n\n\n\n\nSubmodules\n\n\nAtualizando todos os submodules:\n\n\ngit submodule update --init --recursive\n\n\n\n\nHow to grep (search) committed code in the git history?\n\n\ngit grep [regexp] $(git rev-list --all)\n\n\n\n\nAdd only non-whitespace changes\n\n\nSuponha que o seu editor tenha feito mudan\u00e7as nos whitespaces/tabs, para apenas adicionar ao staging as mudan\u00e7as de verdade:\n\n\ngit diff -w --no-color \narquivo\n | git apply --cached --ignore-whitespace\n\n\n\nTemporarily stop watching a file\n\n\ngit update-index --assume-unchanged \nfile\n\n\n\n\nNow the file, even if modified, will not appear in a git status.\n\n\nTo undo it:\n\n\ngit update-index --no-assume-unchanged \nfile\n\n\n\n\nTo list all the files that are \"hidden\" in this way:\n\n\ngit ls-files -v | grep '^h'\n\n\n\nWith the help of \nStackOverflow\n\n\nDiscovering when text was modified in a file\n\n\nWith the help of \nStackOverflow\n:\n\n\ngit log -c -S'missingtext' /path/to/file", 
            "title": "Geral"
        }, 
        {
            "location": "/git/git/#how-can-i-determine-the-url-that-a-local-git-repo-was-originally-cloned-from", 
            "text": "From  How can I determine the url that a local git repo was originally cloned from?  :  # If referential integrity has been broken:\ngit config --get remote.origin.url\n# If referential integrity is intact:\ngit remote show origin", 
            "title": "How can I determine the url that a local git repo was originally cloned from?"
        }, 
        {
            "location": "/git/git/#problema-ao-se-fazer-push-para-um-repositorio-non-bare", 
            "text": "$ git push\nCounting objects: 20, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (17/17), done.\nWriting objects: 100% (18/18), 2.69 KiB | 0 bytes/s, done.\nTotal 18 (delta 9), reused 0 (delta 0)\nremote: error: refusing to update checked out branch: refs/heads/master\nremote: error: By default, updating the current branch in a non-bare repository\nremote: error: is denied, because it will make the index and work tree inconsistent\nremote: error: with what you pushed, and will require 'git reset --hard' to match\nremote: error: the work tree to HEAD.\nremote: error:\nremote: error: You can set 'receive.denyCurrentBranch' configuration variable to\nremote: error: 'ignore' or 'warn' in the remote repository to allow pushing into\nremote: error: its current branch; however, this is not recommended unless you\nremote: error: arranged to update its work tree to match what you pushed in some\nremote: error: other way.\nremote: error:\nremote: error: To squelch this message and still keep the default behaviour, set\nremote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.\nTo /home/hugo/Dropbox/workplace/eve_grabber\n ! [remote rejected] master -  master (branch is currently checked out)\nerror: failed to push some refs to '/home/hugo/Dropbox/workplace/eve_grabber'  Com a ajuda do  stack overflow :  At the remote repo:  git config --bool core.bare true  Then delete all the files except .git in that folder. And then you will be able to perform git push to the remote repository without any errors.", 
            "title": "Problema ao se fazer push para um reposit\u00f3rio \"non-bare\""
        }, 
        {
            "location": "/git/git/#gerando-patches", 
            "text": "Dica do  How to create and apply a patch with Git :", 
            "title": "Gerando Patches"
        }, 
        {
            "location": "/git/git/#para-se-gerar-o-patch", 
            "text": "git format-patch against_branch_name --stdout   name_of.patch  Outra forma de se gerar o patch \u00e9 com  git diff :  git diff sha1..sha2   name_of.patch", 
            "title": "Para se gerar o patch:"
        }, 
        {
            "location": "/git/git/#para-se-aplicar-o-patch", 
            "text": "git apply --stat name_of.patch  Assim, ele s\u00f3 ir\u00e1 mostrar como ser\u00e1 a aplica\u00e7\u00e3o do patch, n\u00e3o aplicar\u00e1 de verdade.  Para realmente se aplicar o patch devemos chamar  git am name_of.patch", 
            "title": "Para se aplicar o patch:"
        }, 
        {
            "location": "/git/git/#submodules", 
            "text": "Atualizando todos os submodules:  git submodule update --init --recursive", 
            "title": "Submodules"
        }, 
        {
            "location": "/git/git/#how-to-grep-search-committed-code-in-the-git-history", 
            "text": "git grep [regexp] $(git rev-list --all)", 
            "title": "How to grep (search) committed code in the git history?"
        }, 
        {
            "location": "/git/git/#add-only-non-whitespace-changes", 
            "text": "Suponha que o seu editor tenha feito mudan\u00e7as nos whitespaces/tabs, para apenas adicionar ao staging as mudan\u00e7as de verdade:  git diff -w --no-color  arquivo  | git apply --cached --ignore-whitespace", 
            "title": "Add only non-whitespace changes"
        }, 
        {
            "location": "/git/git/#temporarily-stop-watching-a-file", 
            "text": "git update-index --assume-unchanged  file   Now the file, even if modified, will not appear in a git status.  To undo it:  git update-index --no-assume-unchanged  file   To list all the files that are \"hidden\" in this way:  git ls-files -v | grep '^h'  With the help of  StackOverflow", 
            "title": "Temporarily stop watching a file"
        }, 
        {
            "location": "/git/git/#discovering-when-text-was-modified-in-a-file", 
            "text": "With the help of  StackOverflow :  git log -c -S'missingtext' /path/to/file", 
            "title": "Discovering when text was modified in a file"
        }, 
        {
            "location": "/git/branches/", 
            "text": "Dicas de como se utilizar branches no git.\n\n\nShowing which files have changed between git branches\n\n\nFrom \nShowing which files have changed between git branches\n :\n\n\ngit diff --name-status master..branchName\n\n\n\n\nGit rename local git branch\n\n\nFrom \nGit rename local git branch\n :\n\n\ngit branch -m \noldname\n \nnewname\n\n# or, if you want to rename the current branch:\ngit branch -m \nnewname\n\n\n\n\n\nPushing local branch to origin\n\n\ngit push origin \nbranchName\n\n\n\n\n\nRemove remote branches\n\n\nFrom \nRemove remote branches\n :\n\n\ngit push origin --delete \nbranchName\n # or\ngit push origin :\nbranchName\n\n\n\n\n\nVisualization\n\n\nBranches Hierarchy\n\n\ngit log --oneline --decorate --color --graph --all --simplify-by-decoration\n# ou\ngit log --graph --simplify-by-decoration --pretty=format:'%d' --all\n\n\n\n\nGit log all branches\n\n\nFrom \nGit log all branches\n :\n\n\ngit log --oneline --graph --decorate --all\n\n\n\n\nMoving\n\n\nMove commits from one branch to another\n\n\nFrom \nMove commits from one branch to another\n :\n\n\n# This will move commits from master to the new branch\ngit checkout -b some-feature\ngit checkout master\ngit reset --hard HEAD^\ngit checkout some-feature\n\n\n\n\nMovendo conte\u00fado de uma branch para outra\n\n\nDe vez em quando n\u00e3o podemos simplesmente mergear uma branch com a outra, pois isso pode trazer algumas modifica\u00e7\u00f5es indesejadas.\nUma coisa que podemos fazer \u00e9 crirar um conjunto de patches e transport\u00e1-los para a branch onde queremos aplicar as mudan\u00e7as que foram feitas na outra branch.\n\n\nGerando os patches:\n\n\ngit checkout \nSHA-1 do commit que voc\u00ea quer considerar como \u00faltimo\n\ngit format-patch \nSHA-1 do commit que voc\u00ea quer utilizar como primeiro\n\n# Ser\u00e3o gerados v\u00e1rios arquivos .patch\n\n\n\n\nAplicando os patches:\n\n\n# Primeiramente, mude seu workspace para a branch onde voc\u00ea quer aplicar as mudan\u00e7as\n# e.g.: git checkout production\n\ngit am *.patch\n# No caso que enfrentei tinha alguns problemas de espa\u00e7o, final de linha, etc. ent\u00e3o utilizei:\ngit am -3 --ignore-whitespace *.patch\n\n\n\n\nCaso algum dos patches falhe na sua aplica\u00e7\u00e3o basta editar o arquivo, adicion\u00e1-lo com \ngit add\n e dar um \ngit am --continue\n\n\nMove the most recent commit\n\n\nFrom \nMove the most recent commit(s) to a new branch with Git\n :\n\n\ngit branch newbranch\ngit reset --hard HEAD~3 # Go back 3 commits. You *will* lose uncommitted work.\ngit checkout newbranch\n\n\n\n\nMovendo um diret\u00f3rio de um reposit\u00f3rio para outro, preservando o hist\u00f3rico!\n\n\nQuem nunca come\u00e7ou a mexer em um diret\u00f3rio e depois percebeu que ele precisava ficar em outro reposit\u00f3rio, ou at\u00e9 ser um reposit\u00f3rio separado (uma biblioteca, por exemplo)? Seus problemas se acabaram-se!! \ngit filter-branch\n ao resgate!\n\n\nPara esta receita de bolo queremos:\n\n\n\n\nMover um diret\u00f3rio de um reposit\u00f3rio A para um reposit\u00f3rio B\n\n\n\n\nE temos as seguintes condi\u00e7\u00f5es:\n\n\n\n\nO reposit\u00f3rio A cont\u00e9m outras coisas al\u00e9m do diret\u00f3rio que queremos mover\n\n\nQueremos preservar todo o hist\u00f3rico de commits que envolvam o diret\u00f3rio em quest\u00e3o\n\n\n\n\n(depois de fazer um backup do seu reposit\u00f3rio, utilizando sua forma favorita)\n\n\nNa raiz do \"reposit\u00f3rio A\":\n\n\ngit filter-branch --subdirectory-filter [oDitoCujoDoDiretorioQueQueremosSeparar] -- --all\n\n\n\n\nEste lindo comando far\u00e1, segundo a documenta\u00e7\u00e3o, como se o reposit\u00f3rio fosse a ra\u00edz do reposit\u00f3rio e todo o resto, desconhecido.\n\n\nJ\u00e1 no seu \"reposit\u00f3rio B\":\n\n\ngit checkout -b new_branch\ngit remote add branchA [caminhoParaORepositorioA]\ngit pull branchA master # Ao inv\u00e9s de master voc\u00ea pode colocar a branch que estava sendo utilizada no reposit\u00f3rio A\ngit remote rm branchA\ngit checkout master\ngit merge --no-ff new_branch\ngit branch -d new_branch\n\n\n\n\nPronto! Agora em seu \"reposit\u00f3rio B\" voc\u00ea ter\u00e1 todo o conte\u00fado do diret\u00f3rio que estava no \"reposit\u00f3rio A\", e com o hist\u00f3rico preservado!\nE isto tudo s\u00f3 foi poss\u00edvel devido \u00e0s dicas \ndeste site\n!\n\n\nHow do you squash commits into one patch with git format-patch?\n\n\nWith the help of \nStackOverflow\n.\n\n\n[(master)]$ git checkout -b tmpsquash\nSwitched to a new branch \ntmpsquash\n\n\n[(tmpsquash)]$ git merge --squash newlines\nUpdating 4d2de39..b6768b2\nFast forward\nSquash commit -- not updating HEAD\n test.txt |    2 ++\n 1 files changed, 2 insertions(+), 0 deletions(-)\n\n[(tmpsquash)]$ git commit -a -m \nMy squashed commits\n\n[tmpsquash]: created 75b0a89: \nMy squashed commits\n\n 1 files changed, 2 insertions(+), 0 deletions(-)\n\n[(tmpsquash)]$ git format-patch master\n0001-My-squashed-commits.patch\n\n\n\n\nMoving branch pointer without checkout\n\n\nAs stated \nhere\n we can use:\n\n\ngit branch -f branch-name new-tip-commit", 
            "title": "Branches"
        }, 
        {
            "location": "/git/branches/#showing-which-files-have-changed-between-git-branches", 
            "text": "From  Showing which files have changed between git branches  :  git diff --name-status master..branchName", 
            "title": "Showing which files have changed between git branches"
        }, 
        {
            "location": "/git/branches/#git-rename-local-git-branch", 
            "text": "From  Git rename local git branch  :  git branch -m  oldname   newname \n# or, if you want to rename the current branch:\ngit branch -m  newname", 
            "title": "Git rename local git branch"
        }, 
        {
            "location": "/git/branches/#pushing-local-branch-to-origin", 
            "text": "git push origin  branchName", 
            "title": "Pushing local branch to origin"
        }, 
        {
            "location": "/git/branches/#remove-remote-branches", 
            "text": "From  Remove remote branches  :  git push origin --delete  branchName  # or\ngit push origin : branchName", 
            "title": "Remove remote branches"
        }, 
        {
            "location": "/git/branches/#visualization", 
            "text": "", 
            "title": "Visualization"
        }, 
        {
            "location": "/git/branches/#branches-hierarchy", 
            "text": "git log --oneline --decorate --color --graph --all --simplify-by-decoration\n# ou\ngit log --graph --simplify-by-decoration --pretty=format:'%d' --all", 
            "title": "Branches Hierarchy"
        }, 
        {
            "location": "/git/branches/#git-log-all-branches", 
            "text": "From  Git log all branches  :  git log --oneline --graph --decorate --all", 
            "title": "Git log all branches"
        }, 
        {
            "location": "/git/branches/#moving", 
            "text": "", 
            "title": "Moving"
        }, 
        {
            "location": "/git/branches/#move-commits-from-one-branch-to-another", 
            "text": "From  Move commits from one branch to another  :  # This will move commits from master to the new branch\ngit checkout -b some-feature\ngit checkout master\ngit reset --hard HEAD^\ngit checkout some-feature", 
            "title": "Move commits from one branch to another"
        }, 
        {
            "location": "/git/branches/#movendo-conteudo-de-uma-branch-para-outra", 
            "text": "De vez em quando n\u00e3o podemos simplesmente mergear uma branch com a outra, pois isso pode trazer algumas modifica\u00e7\u00f5es indesejadas.\nUma coisa que podemos fazer \u00e9 crirar um conjunto de patches e transport\u00e1-los para a branch onde queremos aplicar as mudan\u00e7as que foram feitas na outra branch.  Gerando os patches:  git checkout  SHA-1 do commit que voc\u00ea quer considerar como \u00faltimo \ngit format-patch  SHA-1 do commit que voc\u00ea quer utilizar como primeiro \n# Ser\u00e3o gerados v\u00e1rios arquivos .patch  Aplicando os patches:  # Primeiramente, mude seu workspace para a branch onde voc\u00ea quer aplicar as mudan\u00e7as\n# e.g.: git checkout production\n\ngit am *.patch\n# No caso que enfrentei tinha alguns problemas de espa\u00e7o, final de linha, etc. ent\u00e3o utilizei:\ngit am -3 --ignore-whitespace *.patch  Caso algum dos patches falhe na sua aplica\u00e7\u00e3o basta editar o arquivo, adicion\u00e1-lo com  git add  e dar um  git am --continue", 
            "title": "Movendo conte\u00fado de uma branch para outra"
        }, 
        {
            "location": "/git/branches/#move-the-most-recent-commit", 
            "text": "From  Move the most recent commit(s) to a new branch with Git  :  git branch newbranch\ngit reset --hard HEAD~3 # Go back 3 commits. You *will* lose uncommitted work.\ngit checkout newbranch", 
            "title": "Move the most recent commit"
        }, 
        {
            "location": "/git/branches/#movendo-um-diretorio-de-um-repositorio-para-outro-preservando-o-historico", 
            "text": "Quem nunca come\u00e7ou a mexer em um diret\u00f3rio e depois percebeu que ele precisava ficar em outro reposit\u00f3rio, ou at\u00e9 ser um reposit\u00f3rio separado (uma biblioteca, por exemplo)? Seus problemas se acabaram-se!!  git filter-branch  ao resgate!  Para esta receita de bolo queremos:   Mover um diret\u00f3rio de um reposit\u00f3rio A para um reposit\u00f3rio B   E temos as seguintes condi\u00e7\u00f5es:   O reposit\u00f3rio A cont\u00e9m outras coisas al\u00e9m do diret\u00f3rio que queremos mover  Queremos preservar todo o hist\u00f3rico de commits que envolvam o diret\u00f3rio em quest\u00e3o   (depois de fazer um backup do seu reposit\u00f3rio, utilizando sua forma favorita)  Na raiz do \"reposit\u00f3rio A\":  git filter-branch --subdirectory-filter [oDitoCujoDoDiretorioQueQueremosSeparar] -- --all  Este lindo comando far\u00e1, segundo a documenta\u00e7\u00e3o, como se o reposit\u00f3rio fosse a ra\u00edz do reposit\u00f3rio e todo o resto, desconhecido.  J\u00e1 no seu \"reposit\u00f3rio B\":  git checkout -b new_branch\ngit remote add branchA [caminhoParaORepositorioA]\ngit pull branchA master # Ao inv\u00e9s de master voc\u00ea pode colocar a branch que estava sendo utilizada no reposit\u00f3rio A\ngit remote rm branchA\ngit checkout master\ngit merge --no-ff new_branch\ngit branch -d new_branch  Pronto! Agora em seu \"reposit\u00f3rio B\" voc\u00ea ter\u00e1 todo o conte\u00fado do diret\u00f3rio que estava no \"reposit\u00f3rio A\", e com o hist\u00f3rico preservado!\nE isto tudo s\u00f3 foi poss\u00edvel devido \u00e0s dicas  deste site !", 
            "title": "Movendo um diret\u00f3rio de um reposit\u00f3rio para outro, preservando o hist\u00f3rico!"
        }, 
        {
            "location": "/git/branches/#how-do-you-squash-commits-into-one-patch-with-git-format-patch", 
            "text": "With the help of  StackOverflow .  [(master)]$ git checkout -b tmpsquash\nSwitched to a new branch  tmpsquash \n\n[(tmpsquash)]$ git merge --squash newlines\nUpdating 4d2de39..b6768b2\nFast forward\nSquash commit -- not updating HEAD\n test.txt |    2 ++\n 1 files changed, 2 insertions(+), 0 deletions(-)\n\n[(tmpsquash)]$ git commit -a -m  My squashed commits \n[tmpsquash]: created 75b0a89:  My squashed commits \n 1 files changed, 2 insertions(+), 0 deletions(-)\n\n[(tmpsquash)]$ git format-patch master\n0001-My-squashed-commits.patch", 
            "title": "How do you squash commits into one patch with git format-patch?"
        }, 
        {
            "location": "/git/branches/#moving-branch-pointer-without-checkout", 
            "text": "As stated  here  we can use:  git branch -f branch-name new-tip-commit", 
            "title": "Moving branch pointer without checkout"
        }, 
        {
            "location": "/git/history/", 
            "text": "Analisando a hist\u00f3ria\n\n\nMudan\u00e7as entre dois changests\n\n\nApenas os arquivos que foram mudados:\n\n\ngit diff --name-only sha1..sha2\n# ou\ngit diff --name-only HEAD~10..HEAD~5\n\n\n\n\nO conte\u00fado do que foi mudado:\n\n\ngit diff sha1..sha2\n# ou\ngit diff HEAD~10..HEAD~5\n\n\n\n\nBranches and commits between two commits\n\n\n\n\n\n\nAll commits between two commits (only the direct path)\n\n\ngit log --ancestry-path \n..\n\n\n\n\n\n\nCurrent branches that are children of another\n\n\ngit branch --contains \n\n\n\n\n\n\nRevert a commit alredy pushed to a remote repository\n\n\nFrom \nthis blog entry\n there are two good ways:\n\n\ngit push origin +commit_sha^:master\n\n\n\n\nor (The one I used):\n\n\ngit reset HEAD^ --hard\ngit push origin -f\n\n\n\n\nMaking git \u201cforget\u201d about a file that was tracked but is now in .gitignore\n\n\n.gitignore will prevent untracked files from being added (without an add -f) to the set of files tracked by git, however git will continue to track any files that are already being tracked.\n\n\nTo stop tracking a file you need to remove it from the index. This can be achieved with this command.\n\n\ngit rm --cached \nfile\n\n\n\n\n\nThe removal of the file from the head revision will happen on the next commit.\n\n\nEdit an incorrect commit message in Git\n\n\nWith hints from \nStackOverflow\n:\n\n\n\n\n\n\nIf the commit you want to fix isn\u2019t the most recent one:\n\n\nIf you want to fix several flawed commits, pass the parent of the oldest one of them.\n\ngit rebase --interactive $parent_of_flawed_commit\n\n\n\n\n\n\nAn editor will come up, with a list of all commits since the one you gave.\n\n\n\n\nChange \npick\n to \nreword\n (or on old versions of Git, to \nedit\n) in front of any commits you want to fix.\n\n\nOnce you save, Git will replay the listed commits.\n\n\n\n\n\n\n\n\nFor each commit you want to \nreword\n, Git will drop you back into your editor. For each commit you want to edit, Git drops you into the shell. If you\u2019re in the shell:\n\n\n\n\nChange the commit in any way you like.\n\n\ngit commit --amend\n\n\ngit rebase --continue\n\n\n\n\n\n\n\n\nMost of this sequence will be explained to you by the output of the various commands as you go. It\u2019s very easy, you don\u2019t need to memorise it \u2013 just remember that \ngit rebase --interactive\n lets you correct commits no matter how long ago they were.", 
            "title": "History"
        }, 
        {
            "location": "/git/history/#analisando-a-historia", 
            "text": "", 
            "title": "Analisando a hist\u00f3ria"
        }, 
        {
            "location": "/git/history/#mudancas-entre-dois-changests", 
            "text": "Apenas os arquivos que foram mudados:  git diff --name-only sha1..sha2\n# ou\ngit diff --name-only HEAD~10..HEAD~5  O conte\u00fado do que foi mudado:  git diff sha1..sha2\n# ou\ngit diff HEAD~10..HEAD~5", 
            "title": "Mudan\u00e7as entre dois changests"
        }, 
        {
            "location": "/git/history/#branches-and-commits-between-two-commits", 
            "text": "All commits between two commits (only the direct path)  git log --ancestry-path  ..    Current branches that are children of another  git branch --contains", 
            "title": "Branches and commits between two commits"
        }, 
        {
            "location": "/git/history/#revert-a-commit-alredy-pushed-to-a-remote-repository", 
            "text": "From  this blog entry  there are two good ways:  git push origin +commit_sha^:master  or (The one I used):  git reset HEAD^ --hard\ngit push origin -f", 
            "title": "Revert a commit alredy pushed to a remote repository"
        }, 
        {
            "location": "/git/history/#making-git-forget-about-a-file-that-was-tracked-but-is-now-in-gitignore", 
            "text": ".gitignore will prevent untracked files from being added (without an add -f) to the set of files tracked by git, however git will continue to track any files that are already being tracked.  To stop tracking a file you need to remove it from the index. This can be achieved with this command.  git rm --cached  file   The removal of the file from the head revision will happen on the next commit.", 
            "title": "Making git \u201cforget\u201d about a file that was tracked but is now in .gitignore"
        }, 
        {
            "location": "/git/history/#edit-an-incorrect-commit-message-in-git", 
            "text": "With hints from  StackOverflow :    If the commit you want to fix isn\u2019t the most recent one:  If you want to fix several flawed commits, pass the parent of the oldest one of them. git rebase --interactive $parent_of_flawed_commit    An editor will come up, with a list of all commits since the one you gave.   Change  pick  to  reword  (or on old versions of Git, to  edit ) in front of any commits you want to fix.  Once you save, Git will replay the listed commits.     For each commit you want to  reword , Git will drop you back into your editor. For each commit you want to edit, Git drops you into the shell. If you\u2019re in the shell:   Change the commit in any way you like.  git commit --amend  git rebase --continue     Most of this sequence will be explained to you by the output of the various commands as you go. It\u2019s very easy, you don\u2019t need to memorise it \u2013 just remember that  git rebase --interactive  lets you correct commits no matter how long ago they were.", 
            "title": "Edit an incorrect commit message in Git"
        }, 
        {
            "location": "/git/undoing/", 
            "text": "Undoing mistakes\n\n\nFind and restore a deleted file\n\n\nWith the help of \nStackOverflow\n:\n\n\nFind the last commit that affected the given path. As the file isn't in the HEAD commit, this commit must have deleted it.\n\n\ngit rev-list -n 1 HEAD -- \nfile_path\n\n\n\n\n\nThen checkout the version at the commit before, using the caret (^) symbol:\n\n\ngit checkout \ndeleting_commit\n^ -- \nfile_path\n\n\n\n\n\nOr in one command, if \n$file\n is the file in question.\n\n\ngit checkout $(git rev-list -n 1 HEAD -- \n$file\n)^ -- \n$file\n\n\n\n\n\nHINT:\n Use \ngit log --diff-filter=D --summary\n to get all the commits which have deleted files and the files deleted;\n\n\nHINT 2:\n \nfrom here\n How to search the contents of deleted files\n\n\nLets say I don\u2019t remember the filename of that file I deleted in a fit of cleanup passion. I do remember the name of one of the functions in it though. Here is how to deal with that. Search the contents of all files that have ever existed in git for a string:\n\n\ngit log --summary -S\nstring\n [\npath/to/file\n] [--since=2009.1.1] [--until=2010.1.1]\n\n\n\n\nAnother way to do this:\n\n\ngit rev-list --all | xargs git grep 'string'\n\n\n\n\nUndoing a git rebase\n\n\nSometimes we want to undo a bad \ngit rebase\n, hints from \nStackOverflow\n :\n\n\n\n\nFirst, we have to discover where is the head commit of the branch as it was immediately before the rebase started in the reflog:\n\n\n\n\ngit reflog\n\n\n\n\nor\n\n\ngit log -g\n\n\n\n\n\n\nThen, reset the current branch to it (with the usual caveats about being absolutely sure before reseting with the --hard option):\n\n\n\n\n# Suppose the old commit was HEAD@{5} in the ref log\ngit reset --hard HEAD@{5}\n\n\n\n\nHINT:\n Just in case, make a backup first: \ngit tag BACKUP\n. You can return to it if something goes wrong: \ngit reset --hard BACKUP\n\n\nDesfazendo o \u00faltimo commit\n\n\ngit reset --soft HEAD~1\n\n\n\n\nDesfazendo o primeiro commit de um reposit\u00f3rio\n\n\ngit update-ref -d HEAD\n\n\n\n\nUndo a git merge\n\n\nFrom \nUndo a git merge\n :\n\n\ngit reset --hard commit_sha\n# ou\ngit reset --hard HEAD~5 #will get you back 5 commits.\n# ou\ngit reset --merge ORIG_HEAD\n\n\n\n\nHow to revert a merge that is already pushed to remote?\n\n\nFrom this \nStackOverflow hint\n:\n\n\ngit revert merge_sha -m [1,2]\n\n\n\nTo discover if you have to use 1 or 2 do a \ngit log\n on the merge_sha, then 1 will represent the left SHA and 2 the right SHA that appear in the 'Merge' line.\n\n\nRemoving sensitive files from old commits\n\n\nFrom \nRemove sensitive data - User Documentation\n:\n\n\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA' --prune-empty --tag-name-filter cat -- --all\n\n\n\nThen, to remove the newly generated 'refs/original' reference and clear the reflog and do a garbage collect:\n\n\ngit for-each-ref --format='delete %(refname)' refs/original | git update-ref --stdin\ngit reflog expire --expire=now --all\ngit gc --prune=now", 
            "title": "Undoing Mistakes"
        }, 
        {
            "location": "/git/undoing/#find-and-restore-a-deleted-file", 
            "text": "With the help of  StackOverflow :  Find the last commit that affected the given path. As the file isn't in the HEAD commit, this commit must have deleted it.  git rev-list -n 1 HEAD --  file_path   Then checkout the version at the commit before, using the caret (^) symbol:  git checkout  deleting_commit ^ --  file_path   Or in one command, if  $file  is the file in question.  git checkout $(git rev-list -n 1 HEAD --  $file )^ --  $file   HINT:  Use  git log --diff-filter=D --summary  to get all the commits which have deleted files and the files deleted;  HINT 2:   from here  How to search the contents of deleted files  Lets say I don\u2019t remember the filename of that file I deleted in a fit of cleanup passion. I do remember the name of one of the functions in it though. Here is how to deal with that. Search the contents of all files that have ever existed in git for a string:  git log --summary -S string  [ path/to/file ] [--since=2009.1.1] [--until=2010.1.1]  Another way to do this:  git rev-list --all | xargs git grep 'string'", 
            "title": "Find and restore a deleted file"
        }, 
        {
            "location": "/git/undoing/#undoing-a-git-rebase", 
            "text": "Sometimes we want to undo a bad  git rebase , hints from  StackOverflow  :   First, we have to discover where is the head commit of the branch as it was immediately before the rebase started in the reflog:   git reflog  or  git log -g   Then, reset the current branch to it (with the usual caveats about being absolutely sure before reseting with the --hard option):   # Suppose the old commit was HEAD@{5} in the ref log\ngit reset --hard HEAD@{5}  HINT:  Just in case, make a backup first:  git tag BACKUP . You can return to it if something goes wrong:  git reset --hard BACKUP", 
            "title": "Undoing a git rebase"
        }, 
        {
            "location": "/git/undoing/#desfazendo-o-ultimo-commit", 
            "text": "git reset --soft HEAD~1", 
            "title": "Desfazendo o \u00faltimo commit"
        }, 
        {
            "location": "/git/undoing/#desfazendo-o-primeiro-commit-de-um-repositorio", 
            "text": "git update-ref -d HEAD", 
            "title": "Desfazendo o primeiro commit de um reposit\u00f3rio"
        }, 
        {
            "location": "/git/undoing/#undo-a-git-merge", 
            "text": "From  Undo a git merge  :  git reset --hard commit_sha\n# ou\ngit reset --hard HEAD~5 #will get you back 5 commits.\n# ou\ngit reset --merge ORIG_HEAD", 
            "title": "Undo a git merge"
        }, 
        {
            "location": "/git/undoing/#how-to-revert-a-merge-that-is-already-pushed-to-remote", 
            "text": "From this  StackOverflow hint :  git revert merge_sha -m [1,2]  To discover if you have to use 1 or 2 do a  git log  on the merge_sha, then 1 will represent the left SHA and 2 the right SHA that appear in the 'Merge' line.", 
            "title": "How to revert a merge that is already pushed to remote?"
        }, 
        {
            "location": "/git/undoing/#removing-sensitive-files-from-old-commits", 
            "text": "From  Remove sensitive data - User Documentation :  git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA' --prune-empty --tag-name-filter cat -- --all  Then, to remove the newly generated 'refs/original' reference and clear the reflog and do a garbage collect:  git for-each-ref --format='delete %(refname)' refs/original | git update-ref --stdin\ngit reflog expire --expire=now --all\ngit gc --prune=now", 
            "title": "Removing sensitive files from old commits"
        }, 
        {
            "location": "/latex/", 
            "text": "\ufeff\n\n\nLaTeX\n\n\nApresenta\u00e7\u00e3o em Beamer estilo Lousa\n\n\nApresenta\u00e7\u00e3o em Beamer estilo Lousa\n\n\n[Como adicionar cores no LaTeX]\n\n\nComo adicionar cores no LaTeX", 
            "title": "Latex"
        }, 
        {
            "location": "/latex/#latex", 
            "text": "", 
            "title": "LaTeX"
        }, 
        {
            "location": "/latex/#apresentacao-em-beamer-estilo-lousa", 
            "text": "Apresenta\u00e7\u00e3o em Beamer estilo Lousa", 
            "title": "Apresenta\u00e7\u00e3o em Beamer estilo Lousa"
        }, 
        {
            "location": "/latex/#como-adicionar-cores-no-latex", 
            "text": "Como adicionar cores no LaTeX", 
            "title": "[Como adicionar cores no LaTeX]"
        }, 
        {
            "location": "/linux/", 
            "text": "\ufeff\n\n\nDicas Linux\n\n\nHow do I list all cron jobs for all users?\n\n\nFrom \nHow do I list all cron jobs for all users?\n :\n\n\n# As root:\nfor user in $(cut -f1 -d: /etc/passwd); do echo $user; crontab -u $user -l; done\n\n\n\n\nHow to create a CPU spike with a bash command\n\n\nFrom \nHow to create a CPU spike with a bash command\n :\n\n\ndd if=/dev/zero of=/dev/null\n\n\n\n\nTo run more of those to put load on more cores, try to fork it:\n\n\nfulload() { dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null \n }; fulload; read; killall dd\n\n\n\n\nRepeat the command in the curly brackets as many times as the number of threads you want to produce (here 4 threads). Simple enter hit will stop it (just make sure no other dd is running on this user or you kill it too).\n\n\nRsync\n\n\nPegando e enviando arquivos para a Amazon\n\n\nrsync -avz --progress -e \nssh -i chave.pem\n ubuntu@ip:arquivo .\n\n\n\n\nApenas arquivos novos\n\n\nDicas \naqui\n\n\nrsync --update -raz --progress \norigem\n \ndestino\n\n\n\n\n\nHow to gzip a directory, transfer via scp, and decompress in one command?\n\n\nrsync -az --progress source_dir/* remote_host:/destination_dir # Show progress bar\n#or:\ntar -zc path/to/source | ssh user@remote tar -zxC path/to/destination # Doesn't show progress bar\n\n\n\n\nEncontrando arquivos com setuid ativado\n\n\nCom \najuda\n, conseguimos encontrar todos os arquivos que est\u00e3o com setuid ativado. Isso foi \u00fatil para resolver um problema que estava dando no SAS devido ao fato dos bin n\u00e3o estarem setados com ele:\n\n\nfind . -xdev \\( -perm -4000 \\) -type f -print0 | xargs -0 ls -l\n\n\n\n\nPara se setar o setuid basta se adicionar qual bit ser\u00e1 ser\u00e1 setado como steuid (u,g,o):\n\n\nchmod 4444 arquivo\n# ou\nchmod 2444 arquivo\n# ou\nchmod 1444 arquivo\n\n\n\n\nMouse\n\n\nQuando o touchpad parar de funcionar basta executar estes dois comandos:\n\n\n# Como root:\nmodprobe -r psmouse\nmodprobe psmouse\n\n\n\n\nSort\n\n\nSort com delimitador diferente de espa\u00e7os\n\n\nsort -t: myFile\n\n\n\n\nSort n-\u00e9sima coluna\n\n\nsort -k3,3 myFile\n\n\n\n\nSort com ordena\u00e7\u00e3o num\u00e9rica de verdade ( 9 \n 100 )\n\n\nsort -n myFile\n\n\n\n\nAtivando swap\n\n\nAtivando swap, seguindo o \ntutorial da DigitalOcean\n:\n\n\n#!/usr/bin/env bash\nif [ $(id -u) -ne 0 ]; then echo \nRun as root\n; exit 1; fi\nfree -m\nfallocate -l 4G /swapfile\nchmod 600 /swapfile\nmkswap /swapfile\nswapon /swapfile\nswapon -s\nfree -m\n\n\n\n\nLoop com arquivos que t\u00eam espa\u00e7os no nome\n\n\nDicas extra\u00eddas \ndaqui\n e \ndaqui\n.\n\n\nfind . -print0 | while read -d $'\\0' file; do cp -v \n$file\n /tmp; done\n\n\n\n\nfind . -type f -name '*.*' -printf '%p\\0' | tar --null -uf archive.tar -T -\n\n\n\n\nDescobrindo a placa de v\u00eddeo\n\n\nPara se decobrir qual placa de v\u00eddeo estamos usando podemos utilizar o \nlspci\n como descrito \naqui\n e \naqui\n:\n\n\nlspci -v\n\n\n\n\nCopying\n\n\nAvoid copy if files exist in destination\n\n\ncp -R -u -p /source /destination\n\n\n\nDue to these options:\n\n\n-p                           same as --preserve=mode,ownership,timestamps\n    --preserve[=ATTR_LIST]   preserve the specified attributes (default:\n                            mode,ownership,timestamps), if possible\n                            additional attributes: context, links, xattr,\n                            all\n-R, -r, --recursive          copy directories recursively\n    --reflink[=WHEN]         control clone/CoW copies. See below\n    --remove-destination     remove each existing destination file before\n                            attempting to open it (contrast with --force)\n    --sparse=WHEN            control creation of sparse files. See below\n    --strip-trailing-slashes  remove any trailing slashes from each SOURCE\n                            argument\n-u, --update                 copy only when the SOURCE file is newer\n                            than the destination file or when the\n                            destination file is missing\n\n\n\nDisplaying Today\u2019s Files Only\n\n\nfind -maxdepth 1 -type f -mtime -1\n\n\n\nHow to zip files that are listed in a text file\n\n\ncat input.txt | zip filename.zip -@\n\n\n\nDesabilitando um usu\u00e1rio, mas sem apag\u00e1-lo\n\n\nusermod --expiredate 1 [LOGIN]\n\npasswd -l [LOGIN]\n\n\n\nIPTables (Firewall)\n\n\nAlgumas dicas interessantes:\n\n\n\n\nApagando uma regra do firewall por linha\n\n\nUm bom tutorial explicando como funciona\n\n\nUm tutorial simples\n\n\n\n\nListando as regras, com portas e n\u00famero das linhas:\n\n\niptables -L -n --line-numbers\n\n\n\nApagando uma linha espec\u00edfica:\n\n\niptables -D INPUT [num]\n\n\n\nAdicionando regra para novas conex\u00f5es:\n\n\niptables -A INPUT -m state --state NEW -p tcp --dport [porta] -j ACCEPT\n\n\n\nRegra para se rejeitar demais conex\u00f5es:\n\n\niptables -A INPUT -j REJECT --reject-with icmp-host-prohibited\niptables -A INPUT -j DROP\n\n\n\nBloqueando acesso de sa\u00edda (upload) de um IP:\n\n\niptables -A OUTPUT -d [ip-address] -j DROP\n\n\n\nBloqueando sa\u00edda por porta:\n\n\niptables -A OUTPUT -p tcp --dport [port] -j DROP\n\n\n\nTo block tcp port for an IP address:\n\n\niptables -A OUTPUT -p tcp -d [ip address] --dport [port] -j DROP\n\n\n\nHow to run multiple simultaneous X Window sessions\n\n\nFrom \nLinux Commando\n\n\n\n\nSwitch to a virtual terminal\n\n\nBy default, six virtual text terminals are available to you (Ctrl+Alt+F1 to F6)\n\n\nPress Control+Alt+F1 to go to virtual terminal 1\n\n\n\n\n\n\nLogin as her\n\n\nExecute the following command\n    \nstartx -- :1\n\n\nThis starts another X session using the first free graphical console.\n\n\nBy default, 6 X consoles are available (Ctrl+Alt+F7 to F12)\n\n\nYour own existing X session is Ctrl+Alt+F7\n\n\nThe next free X console is therefore Ctrl+Alt+F8\n\n\n\n\n\n\nTo switch from her X session to yours, and vice versa, press Ctrl+Alt+F7 and Ctrl+Alt+F8 respectively.\n\n\n\n\nYou may use the above procedure to create up to 5 additional X sessions (Ctrl+Alt+F8 to Ctrl+Alt+F12).\nFor each additional X session, increment the console number in both step 1 and 3.\nFor instance, switch to virtual terminal 2 (Control+Alt+F2) to execute the command \nstartx -- :2\n.\n\n\nCreate another SSH server\n\n\nSometimes you need to debug your SSH connection, for those times you can open another SSH server and watch what is happening inside it.\n\n\n/usr/sbin/sshd -d -p 2222\n\n\n\nAnd when (from other machine) need to connect to it:\n\n\nssh -p 2222 user@machine\n\n\n\nNo wired connection after suspend\n\n\n(Not tested yet)\n\n\nFrom \nthis Ubuntu Forum thread\n:\n\n\n\n\nGet the Kernel module with \nlspci -k | grep -iA3 NETWORK\n or \nlspci -k | grep -iA3 ethernet\n\n\nEdit \n/etc/pm/config.d/modules\n\n\nAdd \nSUSPEND_MODULES=\"\nthe_kernel_module_for_your_network_card\n\"\n\n\n\n\n\n\n\n\nOr in one shot:\n\n\nlspci -k | grep -iA3 ethernet | grep -i \"Kernel driver\" | awk '{print $NF}'\n\n\n\nKnowing that your Kernel module is 8139:\n\n\n\n\n\n\nUnload 8139:\n\n\nsudo modprobe -r 8139\n\n\n\n\n\n\nSuspend:\n\n\nsudo pm-suspend\n\n\n\n\n\n\nResume the computer from suspend\n\n\n\n\n\n\nReload the module:\n\n\nsudo modprobe 8139\n\n\n\n\n\n\nTest the network connection.\n\n\n\n\n\n\nValidating RSA public keys\n\n\nssh-keygen -l -f key.pub\n\n\n\nMore info on \nHow do I validate a RSA ssh public key file (id_rsa.pub)? - Server Fault\n\n\nGetting you own key from the command line\n\n\nTo get your fingerprint\n\n\nssh-add -l\n\n\n\nTo get your public key\n\n\nssh-add -L\n\n\n\nThis is useful when you are inside a Docker container that has your keys forwarded to it using:\n\n\n-v $(dirname $SSH_AUTH_SOCK):$(dirname $SSH_AUTH_SOCK)\n-e SSH_AUTH_SOCK=$SSH_AUTH_SOCK\n\n\n\nGetting home directory by username\n\n\neval echo ~$USER\n\n\n\nReduce size of PDF files\n\n\n\n\ncompression - How can I reduce the file size of a scanned PDF file? - Ask Ubuntu\n\n\ncompression - How to reduce the size of a pdf file? - Ask Ubuntu\n\n\nReducing PDF file-size in Linux | The Road to Elysium\n\n\nBash Shell: Ignore Aliases and Functions When Running A Command\n\n\n\n\nLow quality options:\n\n\ngs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -sOutputFile=new_file.pdf original_file.pdf\ngs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -sOutputFile=new_file.pdf original_file.pdf\n\n\n\nThe best balance was found in:\n\n\ngs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -sOutputFile=new_file.pdf original_file.pdf\n\n\n\nNote:\n You may need to issue the command with a backslash in front of it if you use 'gs' as an alias:\n\n\n\\gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -sOutputFile=new_file.pdf original_file.pdf\n\n\n\nHow do I find out which process is eating up my bandwidth\n\n\nFrom \nnetworking - How do I find out which process is eating up my bandwidth? - Ask Ubuntu\n:\n\n\nsudo apt-get install -y nethogs\nsudo nethogs eth0\n\n\n\nAnother way:\n\n\n\n\nRun \nsudo iftop\n\n\nPush \nS\n or \nD\n to display Source and Destination ports\n\n\nThen use \nnetstat -tup\n to discover the process\n\n\n\n\nSplitting and merging PDF files\n\n\nWith hints from:\n\n\n\n\nLinux Commando: Splitting up is easy for a PDF file\n\n\nLinux Commando: How to split up PDF files - part 2\n\n\n\n\nLinux Commando: How to merge or split pdf files using convert\n\n\nsudo apt-get update \n sudo apt-get install -y pdftk\n\n\n\n\n\n\nSplitting\n\n\nYou can specify page ranges like this:\n\n\npdftk myoldfile.pdf cat 1-2 4-5 output mynewfile.pdf\n\n\n\npdftk has a few more tricks in its back pocket. For example, you can specify a burst operation to split each page in the input file into a separate output file.\n\n\npdftk myoldfile.pdf burst\n\n\n\nBy default, the output files are named pg_0001.pdf, pg_0002.pdf, etc.\n\n\nMerging\n\n\npdftk is also capable of merging multiple pdf files into one pdf.\n\n\npdftk pg_0001.pdf pg_0002.pdf pg_0004.pdf pg_0005.pdf output mynewfile.pdf\n\n\n\nThat would merge the files corresponding to the first, second, fourth and fifth pages into a single output pdf.\n\n\nDiscovering available versions of a package to install\n\n\nDiscover which versions are available using one of the following commands:\n\n\napt-cache policy \npackage-name\n\napt-cache madison \npackage-name\n\n\n\n\nThen, to install the chosen version:\n\n\nsudo apt-get install package=version\n\n\n\nCopying text from the command line\n\n\nxclip -sel clip \n ~/.ssh/id_rsa.pub", 
            "title": "General"
        }, 
        {
            "location": "/linux/#dicas-linux", 
            "text": "", 
            "title": "Dicas Linux"
        }, 
        {
            "location": "/linux/#how-do-i-list-all-cron-jobs-for-all-users", 
            "text": "From  How do I list all cron jobs for all users?  :  # As root:\nfor user in $(cut -f1 -d: /etc/passwd); do echo $user; crontab -u $user -l; done", 
            "title": "How do I list all cron jobs for all users?"
        }, 
        {
            "location": "/linux/#how-to-create-a-cpu-spike-with-a-bash-command", 
            "text": "From  How to create a CPU spike with a bash command  :  dd if=/dev/zero of=/dev/null  To run more of those to put load on more cores, try to fork it:  fulload() { dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null   }; fulload; read; killall dd  Repeat the command in the curly brackets as many times as the number of threads you want to produce (here 4 threads). Simple enter hit will stop it (just make sure no other dd is running on this user or you kill it too).", 
            "title": "How to create a CPU spike with a bash command"
        }, 
        {
            "location": "/linux/#rsync", 
            "text": "", 
            "title": "Rsync"
        }, 
        {
            "location": "/linux/#pegando-e-enviando-arquivos-para-a-amazon", 
            "text": "rsync -avz --progress -e  ssh -i chave.pem  ubuntu@ip:arquivo .", 
            "title": "Pegando e enviando arquivos para a Amazon"
        }, 
        {
            "location": "/linux/#apenas-arquivos-novos", 
            "text": "Dicas  aqui  rsync --update -raz --progress  origem   destino", 
            "title": "Apenas arquivos novos"
        }, 
        {
            "location": "/linux/#how-to-gzip-a-directory-transfer-via-scp-and-decompress-in-one-command", 
            "text": "rsync -az --progress source_dir/* remote_host:/destination_dir # Show progress bar\n#or:\ntar -zc path/to/source | ssh user@remote tar -zxC path/to/destination # Doesn't show progress bar", 
            "title": "How to gzip a directory, transfer via scp, and decompress in one command?"
        }, 
        {
            "location": "/linux/#encontrando-arquivos-com-setuid-ativado", 
            "text": "Com  ajuda , conseguimos encontrar todos os arquivos que est\u00e3o com setuid ativado. Isso foi \u00fatil para resolver um problema que estava dando no SAS devido ao fato dos bin n\u00e3o estarem setados com ele:  find . -xdev \\( -perm -4000 \\) -type f -print0 | xargs -0 ls -l  Para se setar o setuid basta se adicionar qual bit ser\u00e1 ser\u00e1 setado como steuid (u,g,o):  chmod 4444 arquivo\n# ou\nchmod 2444 arquivo\n# ou\nchmod 1444 arquivo", 
            "title": "Encontrando arquivos com setuid ativado"
        }, 
        {
            "location": "/linux/#mouse", 
            "text": "Quando o touchpad parar de funcionar basta executar estes dois comandos:  # Como root:\nmodprobe -r psmouse\nmodprobe psmouse", 
            "title": "Mouse"
        }, 
        {
            "location": "/linux/#sort", 
            "text": "", 
            "title": "Sort"
        }, 
        {
            "location": "/linux/#sort-com-delimitador-diferente-de-espacos", 
            "text": "sort -t: myFile", 
            "title": "Sort com delimitador diferente de espa\u00e7os"
        }, 
        {
            "location": "/linux/#sort-n-esima-coluna", 
            "text": "sort -k3,3 myFile", 
            "title": "Sort n-\u00e9sima coluna"
        }, 
        {
            "location": "/linux/#sort-com-ordenacao-numerica-de-verdade-9-100", 
            "text": "sort -n myFile", 
            "title": "Sort com ordena\u00e7\u00e3o num\u00e9rica de verdade ( 9 &lt; 100 )"
        }, 
        {
            "location": "/linux/#ativando-swap", 
            "text": "Ativando swap, seguindo o  tutorial da DigitalOcean :  #!/usr/bin/env bash\nif [ $(id -u) -ne 0 ]; then echo  Run as root ; exit 1; fi\nfree -m\nfallocate -l 4G /swapfile\nchmod 600 /swapfile\nmkswap /swapfile\nswapon /swapfile\nswapon -s\nfree -m", 
            "title": "Ativando swap"
        }, 
        {
            "location": "/linux/#loop-com-arquivos-que-tem-espacos-no-nome", 
            "text": "Dicas extra\u00eddas  daqui  e  daqui .  find . -print0 | while read -d $'\\0' file; do cp -v  $file  /tmp; done  find . -type f -name '*.*' -printf '%p\\0' | tar --null -uf archive.tar -T -", 
            "title": "Loop com arquivos que t\u00eam espa\u00e7os no nome"
        }, 
        {
            "location": "/linux/#descobrindo-a-placa-de-video", 
            "text": "Para se decobrir qual placa de v\u00eddeo estamos usando podemos utilizar o  lspci  como descrito  aqui  e  aqui :  lspci -v", 
            "title": "Descobrindo a placa de v\u00eddeo"
        }, 
        {
            "location": "/linux/#copying", 
            "text": "", 
            "title": "Copying"
        }, 
        {
            "location": "/linux/#avoid-copy-if-files-exist-in-destination", 
            "text": "cp -R -u -p /source /destination  Due to these options:  -p                           same as --preserve=mode,ownership,timestamps\n    --preserve[=ATTR_LIST]   preserve the specified attributes (default:\n                            mode,ownership,timestamps), if possible\n                            additional attributes: context, links, xattr,\n                            all\n-R, -r, --recursive          copy directories recursively\n    --reflink[=WHEN]         control clone/CoW copies. See below\n    --remove-destination     remove each existing destination file before\n                            attempting to open it (contrast with --force)\n    --sparse=WHEN            control creation of sparse files. See below\n    --strip-trailing-slashes  remove any trailing slashes from each SOURCE\n                            argument\n-u, --update                 copy only when the SOURCE file is newer\n                            than the destination file or when the\n                            destination file is missing", 
            "title": "Avoid copy if files exist in destination"
        }, 
        {
            "location": "/linux/#displaying-todays-files-only", 
            "text": "find -maxdepth 1 -type f -mtime -1", 
            "title": "Displaying Today\u2019s Files Only"
        }, 
        {
            "location": "/linux/#how-to-zip-files-that-are-listed-in-a-text-file", 
            "text": "cat input.txt | zip filename.zip -@", 
            "title": "How to zip files that are listed in a text file"
        }, 
        {
            "location": "/linux/#desabilitando-um-usuario-mas-sem-apaga-lo", 
            "text": "usermod --expiredate 1 [LOGIN]\n\npasswd -l [LOGIN]", 
            "title": "Desabilitando um usu\u00e1rio, mas sem apag\u00e1-lo"
        }, 
        {
            "location": "/linux/#iptables-firewall", 
            "text": "Algumas dicas interessantes:   Apagando uma regra do firewall por linha  Um bom tutorial explicando como funciona  Um tutorial simples   Listando as regras, com portas e n\u00famero das linhas:  iptables -L -n --line-numbers  Apagando uma linha espec\u00edfica:  iptables -D INPUT [num]  Adicionando regra para novas conex\u00f5es:  iptables -A INPUT -m state --state NEW -p tcp --dport [porta] -j ACCEPT  Regra para se rejeitar demais conex\u00f5es:  iptables -A INPUT -j REJECT --reject-with icmp-host-prohibited\niptables -A INPUT -j DROP  Bloqueando acesso de sa\u00edda (upload) de um IP:  iptables -A OUTPUT -d [ip-address] -j DROP  Bloqueando sa\u00edda por porta:  iptables -A OUTPUT -p tcp --dport [port] -j DROP  To block tcp port for an IP address:  iptables -A OUTPUT -p tcp -d [ip address] --dport [port] -j DROP", 
            "title": "IPTables (Firewall)"
        }, 
        {
            "location": "/linux/#how-to-run-multiple-simultaneous-x-window-sessions", 
            "text": "From  Linux Commando   Switch to a virtual terminal  By default, six virtual text terminals are available to you (Ctrl+Alt+F1 to F6)  Press Control+Alt+F1 to go to virtual terminal 1    Login as her  Execute the following command\n     startx -- :1  This starts another X session using the first free graphical console.  By default, 6 X consoles are available (Ctrl+Alt+F7 to F12)  Your own existing X session is Ctrl+Alt+F7  The next free X console is therefore Ctrl+Alt+F8    To switch from her X session to yours, and vice versa, press Ctrl+Alt+F7 and Ctrl+Alt+F8 respectively.   You may use the above procedure to create up to 5 additional X sessions (Ctrl+Alt+F8 to Ctrl+Alt+F12).\nFor each additional X session, increment the console number in both step 1 and 3.\nFor instance, switch to virtual terminal 2 (Control+Alt+F2) to execute the command  startx -- :2 .", 
            "title": "How to run multiple simultaneous X Window sessions"
        }, 
        {
            "location": "/linux/#create-another-ssh-server", 
            "text": "Sometimes you need to debug your SSH connection, for those times you can open another SSH server and watch what is happening inside it.  /usr/sbin/sshd -d -p 2222  And when (from other machine) need to connect to it:  ssh -p 2222 user@machine", 
            "title": "Create another SSH server"
        }, 
        {
            "location": "/linux/#no-wired-connection-after-suspend", 
            "text": "(Not tested yet)  From  this Ubuntu Forum thread :   Get the Kernel module with  lspci -k | grep -iA3 NETWORK  or  lspci -k | grep -iA3 ethernet  Edit  /etc/pm/config.d/modules  Add  SUSPEND_MODULES=\" the_kernel_module_for_your_network_card \"     Or in one shot:  lspci -k | grep -iA3 ethernet | grep -i \"Kernel driver\" | awk '{print $NF}'  Knowing that your Kernel module is 8139:    Unload 8139:  sudo modprobe -r 8139    Suspend:  sudo pm-suspend    Resume the computer from suspend    Reload the module:  sudo modprobe 8139    Test the network connection.", 
            "title": "No wired connection after suspend"
        }, 
        {
            "location": "/linux/#validating-rsa-public-keys", 
            "text": "ssh-keygen -l -f key.pub  More info on  How do I validate a RSA ssh public key file (id_rsa.pub)? - Server Fault", 
            "title": "Validating RSA public keys"
        }, 
        {
            "location": "/linux/#getting-you-own-key-from-the-command-line", 
            "text": "To get your fingerprint  ssh-add -l  To get your public key  ssh-add -L  This is useful when you are inside a Docker container that has your keys forwarded to it using:  -v $(dirname $SSH_AUTH_SOCK):$(dirname $SSH_AUTH_SOCK)\n-e SSH_AUTH_SOCK=$SSH_AUTH_SOCK", 
            "title": "Getting you own key from the command line"
        }, 
        {
            "location": "/linux/#getting-home-directory-by-username", 
            "text": "eval echo ~$USER", 
            "title": "Getting home directory by username"
        }, 
        {
            "location": "/linux/#reduce-size-of-pdf-files", 
            "text": "compression - How can I reduce the file size of a scanned PDF file? - Ask Ubuntu  compression - How to reduce the size of a pdf file? - Ask Ubuntu  Reducing PDF file-size in Linux | The Road to Elysium  Bash Shell: Ignore Aliases and Functions When Running A Command   Low quality options:  gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -sOutputFile=new_file.pdf original_file.pdf\ngs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -sOutputFile=new_file.pdf original_file.pdf  The best balance was found in:  gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -sOutputFile=new_file.pdf original_file.pdf  Note:  You may need to issue the command with a backslash in front of it if you use 'gs' as an alias:  \\gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -sOutputFile=new_file.pdf original_file.pdf", 
            "title": "Reduce size of PDF files"
        }, 
        {
            "location": "/linux/#how-do-i-find-out-which-process-is-eating-up-my-bandwidth", 
            "text": "From  networking - How do I find out which process is eating up my bandwidth? - Ask Ubuntu :  sudo apt-get install -y nethogs\nsudo nethogs eth0  Another way:   Run  sudo iftop  Push  S  or  D  to display Source and Destination ports  Then use  netstat -tup  to discover the process", 
            "title": "How do I find out which process is eating up my bandwidth"
        }, 
        {
            "location": "/linux/#splitting-and-merging-pdf-files", 
            "text": "With hints from:   Linux Commando: Splitting up is easy for a PDF file  Linux Commando: How to split up PDF files - part 2   Linux Commando: How to merge or split pdf files using convert  sudo apt-get update   sudo apt-get install -y pdftk", 
            "title": "Splitting and merging PDF files"
        }, 
        {
            "location": "/linux/#splitting", 
            "text": "You can specify page ranges like this:  pdftk myoldfile.pdf cat 1-2 4-5 output mynewfile.pdf  pdftk has a few more tricks in its back pocket. For example, you can specify a burst operation to split each page in the input file into a separate output file.  pdftk myoldfile.pdf burst  By default, the output files are named pg_0001.pdf, pg_0002.pdf, etc.", 
            "title": "Splitting"
        }, 
        {
            "location": "/linux/#merging", 
            "text": "pdftk is also capable of merging multiple pdf files into one pdf.  pdftk pg_0001.pdf pg_0002.pdf pg_0004.pdf pg_0005.pdf output mynewfile.pdf  That would merge the files corresponding to the first, second, fourth and fifth pages into a single output pdf.", 
            "title": "Merging"
        }, 
        {
            "location": "/linux/#discovering-available-versions-of-a-package-to-install", 
            "text": "Discover which versions are available using one of the following commands:  apt-cache policy  package-name \napt-cache madison  package-name   Then, to install the chosen version:  sudo apt-get install package=version", 
            "title": "Discovering available versions of a package to install"
        }, 
        {
            "location": "/linux/#copying-text-from-the-command-line", 
            "text": "xclip -sel clip   ~/.ssh/id_rsa.pub", 
            "title": "Copying text from the command line"
        }, 
        {
            "location": "/linux/dropbox/", 
            "text": "How to use multiple dropbox accounts on the same computer\n\n\nFrom \nHow Can I Use Multiple Dropbox Accounts on the Same Computer? - The Unofficial Dropbox Wiki\n:\n\n\n\n\nFirst, create an alternate (hidden) directory for your second Dropbox account:\n\n\nmkdir ~/.dropbox-alt\n\n\n\nThen run the Dropbox installer in \u201cfirst use\u201d mode, specifying the alternate home directory as follows:\n\n\nHOME=~/.dropbox-alt dropbox start -i\n\n\n\nTo run the \u201calternate\u201d Dropbox manually for testing:\n\n\nHOME=~/.dropbox-alt ~/.dropbox-alt/.dropbox-dist/dropboxd\n\n\n\nCreate a shell script to start the alternate Dropbox daemon:\n\n\ncd ~/.dropbox-alt           # change to the \"alternate\" Dropbox directory\n                            # which was created above\ngedit dropbox-alt.sh        # create a new file with the 'gedit' text editor\n\n\n\nCopy and paste the following lines into the editor:\n\n\n#!/bin/bash\nHOME=$HOME/.dropbox-alt     # set the new home dir\ncd                          # to the \"new\" $HOME\n./.dropbox-dist/dropboxd \n  # and run dropboxd\n\n\n\nSet the dropbox-alt.sh script to auto-start on login!", 
            "title": "Dropxbox"
        }, 
        {
            "location": "/linux/dropbox/#how-to-use-multiple-dropbox-accounts-on-the-same-computer", 
            "text": "From  How Can I Use Multiple Dropbox Accounts on the Same Computer? - The Unofficial Dropbox Wiki :   First, create an alternate (hidden) directory for your second Dropbox account:  mkdir ~/.dropbox-alt  Then run the Dropbox installer in \u201cfirst use\u201d mode, specifying the alternate home directory as follows:  HOME=~/.dropbox-alt dropbox start -i  To run the \u201calternate\u201d Dropbox manually for testing:  HOME=~/.dropbox-alt ~/.dropbox-alt/.dropbox-dist/dropboxd  Create a shell script to start the alternate Dropbox daemon:  cd ~/.dropbox-alt           # change to the \"alternate\" Dropbox directory\n                            # which was created above\ngedit dropbox-alt.sh        # create a new file with the 'gedit' text editor  Copy and paste the following lines into the editor:  #!/bin/bash\nHOME=$HOME/.dropbox-alt     # set the new home dir\ncd                          # to the \"new\" $HOME\n./.dropbox-dist/dropboxd    # and run dropboxd  Set the dropbox-alt.sh script to auto-start on login!", 
            "title": "How to use multiple dropbox accounts on the same computer"
        }, 
        {
            "location": "/linux/file_handling/", 
            "text": "Find and Replace string in all files\n\n\nFrom \nFind and Replace string in all files recursive using grep and sed\n:\n\n\ngrep -rl $oldstring /path/to/folder | xargs sed -i s@$oldstring@$newstring@g", 
            "title": "File Handling"
        }, 
        {
            "location": "/linux/file_handling/#find-and-replace-string-in-all-files", 
            "text": "From  Find and Replace string in all files recursive using grep and sed :  grep -rl $oldstring /path/to/folder | xargs sed -i s@$oldstring@$newstring@g", 
            "title": "Find and Replace string in all files"
        }, 
        {
            "location": "/linux/format_conversions/", 
            "text": "How to convert between formats\n\n\nm4a to mp3\n\n\nffmpeg -i \nfile\n.m4a -acodec libmp3lame -ab 128k \nfile\n.mp3\n\n\n\nAutomatically\n\n\nfor file in *m4a; do echo ffmpeg -i $file -acodec libmp3lame -ab 128k ${file%.*}.mp3; done\n\n\n\nHow to remove accent characters\n\n\nWith the help of: http://www.linuxquestions.org/questions/linux-newbie-8/how-to-remove-accent-characters-4175431373/\n\n\nfind . -type f -iname \"*.py\" | while read file; do\n    iconv -f UTF-8 -t ASCII//TRANSLIT $file \n $file-tmp\n    mv $file-tmp $file\ndone", 
            "title": "Format Conversion"
        }, 
        {
            "location": "/linux/format_conversions/#how-to-convert-between-formats", 
            "text": "", 
            "title": "How to convert between formats"
        }, 
        {
            "location": "/linux/format_conversions/#m4a-to-mp3", 
            "text": "ffmpeg -i  file .m4a -acodec libmp3lame -ab 128k  file .mp3", 
            "title": "m4a to mp3"
        }, 
        {
            "location": "/linux/format_conversions/#automatically", 
            "text": "for file in *m4a; do echo ffmpeg -i $file -acodec libmp3lame -ab 128k ${file%.*}.mp3; done", 
            "title": "Automatically"
        }, 
        {
            "location": "/linux/format_conversions/#how-to-remove-accent-characters", 
            "text": "With the help of: http://www.linuxquestions.org/questions/linux-newbie-8/how-to-remove-accent-characters-4175431373/  find . -type f -iname \"*.py\" | while read file; do\n    iconv -f UTF-8 -t ASCII//TRANSLIT $file   $file-tmp\n    mv $file-tmp $file\ndone", 
            "title": "How to remove accent characters"
        }, 
        {
            "location": "/linux/logs/", 
            "text": "Onde logs est\u00e3o localizados no Linux\n\n\nLogs de ssh\n\n\n\n\n/var/log/auth.log\n\n\n/var/log/secure\n\n\njournalctl -u sshd | tail -100", 
            "title": "Logs"
        }, 
        {
            "location": "/linux/logs/#onde-logs-estao-localizados-no-linux", 
            "text": "", 
            "title": "Onde logs est\u00e3o localizados no Linux"
        }, 
        {
            "location": "/linux/logs/#logs-de-ssh", 
            "text": "/var/log/auth.log  /var/log/secure  journalctl -u sshd | tail -100", 
            "title": "Logs de ssh"
        }, 
        {
            "location": "/linux/tmux/", 
            "text": "Send command to all panes\n\n\nprefix :set-window-option synchronize-panes on|off\n\n\n\nOn a default configuration:\n\n\nctrl-b :set-window-option synchronize-panes on\n\n\n\nCredits to: \ntmux send command to all panes", 
            "title": "Tmux"
        }, 
        {
            "location": "/linux/tmux/#send-command-to-all-panes", 
            "text": "prefix :set-window-option synchronize-panes on|off  On a default configuration:  ctrl-b :set-window-option synchronize-panes on  Credits to:  tmux send command to all panes", 
            "title": "Send command to all panes"
        }, 
        {
            "location": "/linux/youtube/", 
            "text": "Download a video from youtube\n\n\nTo download a video from youtube:\n\n\nyoutube-dl --list-formats $youtube_link\n\n\n\nAfter seeing the list of options and formats\n\n\nyoutube-dl -f $format $youtube_link\n\n\n\ne.g. for download only the audio:\n\n\nyoutube-dl -f 140 $youtube_link\n\n\n\nConvert the downloaded audio\n\n\nWhen you download the audio it have an \nm4a\n extension, to convert to a \nmp3\n audio file:\n\n\nffmpeg -i $m4a_file -acodec libmp3lame -ab 128k ${m4a_file%.*}.mp3\n\n\n\nTo to a batch conversion, and have safe names:\n\n\nfor file in *m4a; do rename 's/ /_/g' $file; done \n for file in *m4a; do ffmpeg -i $file -acodec libmp3lame -ab 128k ${file%.*}.mp3; done", 
            "title": "Youtube"
        }, 
        {
            "location": "/linux/youtube/#download-a-video-from-youtube", 
            "text": "To download a video from youtube:  youtube-dl --list-formats $youtube_link  After seeing the list of options and formats  youtube-dl -f $format $youtube_link  e.g. for download only the audio:  youtube-dl -f 140 $youtube_link", 
            "title": "Download a video from youtube"
        }, 
        {
            "location": "/linux/youtube/#convert-the-downloaded-audio", 
            "text": "When you download the audio it have an  m4a  extension, to convert to a  mp3  audio file:  ffmpeg -i $m4a_file -acodec libmp3lame -ab 128k ${m4a_file%.*}.mp3  To to a batch conversion, and have safe names:  for file in *m4a; do rename 's/ /_/g' $file; done   for file in *m4a; do ffmpeg -i $file -acodec libmp3lame -ab 128k ${file%.*}.mp3; done", 
            "title": "Convert the downloaded audio"
        }, 
        {
            "location": "/python/", 
            "text": "Hints, tips and tricks in python\n\n\nLocating the line number of an exception\n\n\nFrom this \nanswer in StackOverflow\n:\n\n\nimport traceback\nimport sys\n\ntry:\n    raise Exception(\nfoo\n)\nexcept:\n    for frame in traceback.extract_tb(sys.exc_info()[2]):\n        fname,lineno,fn,text = frame\n        print \nError in %s on line %d\n % (fname, lineno)", 
            "title": "Python"
        }, 
        {
            "location": "/python/#hints-tips-and-tricks-in-python", 
            "text": "", 
            "title": "Hints, tips and tricks in python"
        }, 
        {
            "location": "/python/#locating-the-line-number-of-an-exception", 
            "text": "From this  answer in StackOverflow :  import traceback\nimport sys\n\ntry:\n    raise Exception( foo )\nexcept:\n    for frame in traceback.extract_tb(sys.exc_info()[2]):\n        fname,lineno,fn,text = frame\n        print  Error in %s on line %d  % (fname, lineno)", 
            "title": "Locating the line number of an exception"
        }, 
        {
            "location": "/perl/", 
            "text": "Como se instalar pacotes perl\n\n\nComo dito \naqui\n:\n\n\nsudo apt-get install build-essential\n\n\n\n\ncpan\ncpan\n make install\ncpan\n install Bundle::CPAN\n# Depois podemos instalar o m\u00f3dulo que quisermos com\ncpan\n install ...", 
            "title": "Perl"
        }, 
        {
            "location": "/perl/#como-se-instalar-pacotes-perl", 
            "text": "Como dito  aqui :  sudo apt-get install build-essential  cpan\ncpan  make install\ncpan  install Bundle::CPAN\n# Depois podemos instalar o m\u00f3dulo que quisermos com\ncpan  install ...", 
            "title": "Como se instalar pacotes perl"
        }, 
        {
            "location": "/ruby/", 
            "text": "Dicas de Ruby e/ou Rails\n\n\nExecutando um script em ruby\n\n\nPara se executar um script em ruby, podemos fazer:\n\n\nbundle exec rails runner \neval(File.read 'arquivo.rb')\n\n\n\n\n\nAnalisando logs de ambientes\n\n\ngem install request-log-analyzer\n\nrequest-log-analyzer -f rails3 --output html --file report.html production.log\n\n\n\nRefer\u00eancias:\n\n\n\n\nGet S3 request statistics in four simple steps - Jayway\n\n\nTeaser check failed \u00b7 Issue #181 \u00b7 wvanbergen/request-log-analyzer \u00b7 GitHub\n\n\n\n\nRunning Rspec tests automatically\n\n\nWith the use of the \nguard-rspec gem\n and the help of this \nStackOverflow question\n we configured the use of \nguard\n, to watch for modifications to our files and run \nrspec\n when something changes.\n\n\nTo use guard, simply run \nbundle exec guard\n inside the container, in the \n/app\n directory, and be happy!", 
            "title": "Ruby"
        }, 
        {
            "location": "/ruby/#dicas-de-ruby-eou-rails", 
            "text": "", 
            "title": "Dicas de Ruby e/ou Rails"
        }, 
        {
            "location": "/ruby/#executando-um-script-em-ruby", 
            "text": "Para se executar um script em ruby, podemos fazer:  bundle exec rails runner  eval(File.read 'arquivo.rb')", 
            "title": "Executando um script em ruby"
        }, 
        {
            "location": "/ruby/#analisando-logs-de-ambientes", 
            "text": "gem install request-log-analyzer\n\nrequest-log-analyzer -f rails3 --output html --file report.html production.log  Refer\u00eancias:   Get S3 request statistics in four simple steps - Jayway  Teaser check failed \u00b7 Issue #181 \u00b7 wvanbergen/request-log-analyzer \u00b7 GitHub", 
            "title": "Analisando logs de ambientes"
        }, 
        {
            "location": "/ruby/#running-rspec-tests-automatically", 
            "text": "With the use of the  guard-rspec gem  and the help of this  StackOverflow question  we configured the use of  guard , to watch for modifications to our files and run  rspec  when something changes.  To use guard, simply run  bundle exec guard  inside the container, in the  /app  directory, and be happy!", 
            "title": "Running Rspec tests automatically"
        }, 
        {
            "location": "/vim/", 
            "text": "Dicas gerais para vim\n\n\nVimdiff\n\n\nTwo commands can be used to jump to diffs:\n\n                            *[c*\n[c      Jump backwards to the previous start of a change.\n        When a count is used, do it that many times.\n                            *]c*\n]c      Jump forwards to the next start of a change.\n        When a count is used, do it that many times.\n\nThere are two commands to copy text from one buffer to another.  The result is\nthat the buffers will be equal within the specified range.\n\n                            *do*\ndo      Same as \":diffget\" without argument or range.  The \"o\" stands\n        for \"obtain\" (\"dg\" can't be used, it could be the start of\n        \"dgg\"!). Note: this doesn't work in Visual mode.\n\n                            *dp*\ndp      Same as \":diffput\" without argument or range.\n        Note: this doesn't work in Visual mode.\n\n\n\nScroll simult\u00e2neo\n\n\nset scrollbind   # Para ativar\nset noscrollbind # Para desativar\n\n\n\n\nAbrindo um arquivo em hexadecimal\n\n\nDepois de abrir o arquivo, para se ver o hex dump dele:\n\n\n:%!xxd\n\n\n\n\nDepois de editar o hexadecimal, para converter o arquivo devolta ao formato bin\u00e1rio:\n\n\n:%!xxd -r\n\n\n\n\nRepetindo macros\n\n\nExecute the macro stored in register a on lines 5 through 10.\n\n\n:5,10norm! @a\n\n\n\n\nExecute the macro stored in register a on all lines.\n\n\n:%norm! @a\n\n\n\n\nEditando macros\n\n\nDicas \ndesse site\n\n\nYanking into a register\n\n\n\"qp paste the contents of the register to the current cursor position\nI enter insert mode at the begging of the pasted line\n^ add the missing motion to return to the front of the line\n\nEscape\n return to visual mode\n\"qyy yank this new modified macro back into the q register\ndd delete the pasted register from the file your editing\n\n\n\nEditing the register visually\n\n\n:let @q=' open the q register\n\nCntl-r\nCntl-r\nq paste the contents of the q register into the buffer\n^ add the missing motion to return to the front of the line\n' add a closing quote\n\nEnter\n finish editing the macro\n\n\n\nCorre\u00e7\u00e3o ortogr\u00e1fica\n\n\nset spell spelllang=en_ca      # Ativando globalmente\nsetlocal spell spelllang=en_ca # Ativando localmente\nset nospell                    # Desativando\n\n]s                             # move the cursor to the next misspelled word\n[s                             # move the cursor back to previous misspelled words.\n\nz=                             # Vim will suggest a list of alternatives that it thinks may be correct\n\nzg                             # Vim will add the word to its dictionary\nzw                             # Mark word as incorrect\n\n\n\n\nSubstituindo ^M por quebras de linha\n\n\nWith help from \nhere\n:\n\n\n:%s/\nCtrl-V\nCtrl-M\n/\\r/g", 
            "title": "Vim"
        }, 
        {
            "location": "/vim/#dicas-gerais-para-vim", 
            "text": "", 
            "title": "Dicas gerais para vim"
        }, 
        {
            "location": "/vim/#vimdiff", 
            "text": "Two commands can be used to jump to diffs:\n\n                            *[c*\n[c      Jump backwards to the previous start of a change.\n        When a count is used, do it that many times.\n                            *]c*\n]c      Jump forwards to the next start of a change.\n        When a count is used, do it that many times.\n\nThere are two commands to copy text from one buffer to another.  The result is\nthat the buffers will be equal within the specified range.\n\n                            *do*\ndo      Same as \":diffget\" without argument or range.  The \"o\" stands\n        for \"obtain\" (\"dg\" can't be used, it could be the start of\n        \"dgg\"!). Note: this doesn't work in Visual mode.\n\n                            *dp*\ndp      Same as \":diffput\" without argument or range.\n        Note: this doesn't work in Visual mode.", 
            "title": "Vimdiff"
        }, 
        {
            "location": "/vim/#scroll-simultaneo", 
            "text": "set scrollbind   # Para ativar\nset noscrollbind # Para desativar", 
            "title": "Scroll simult\u00e2neo"
        }, 
        {
            "location": "/vim/#abrindo-um-arquivo-em-hexadecimal", 
            "text": "Depois de abrir o arquivo, para se ver o hex dump dele:  :%!xxd  Depois de editar o hexadecimal, para converter o arquivo devolta ao formato bin\u00e1rio:  :%!xxd -r", 
            "title": "Abrindo um arquivo em hexadecimal"
        }, 
        {
            "location": "/vim/#repetindo-macros", 
            "text": "Execute the macro stored in register a on lines 5 through 10.  :5,10norm! @a  Execute the macro stored in register a on all lines.  :%norm! @a", 
            "title": "Repetindo macros"
        }, 
        {
            "location": "/vim/#editando-macros", 
            "text": "Dicas  desse site  Yanking into a register  \"qp paste the contents of the register to the current cursor position\nI enter insert mode at the begging of the pasted line\n^ add the missing motion to return to the front of the line Escape  return to visual mode\n\"qyy yank this new modified macro back into the q register\ndd delete the pasted register from the file your editing  Editing the register visually  :let @q=' open the q register Cntl-r Cntl-r q paste the contents of the q register into the buffer\n^ add the missing motion to return to the front of the line\n' add a closing quote Enter  finish editing the macro", 
            "title": "Editando macros"
        }, 
        {
            "location": "/vim/#correcao-ortografica", 
            "text": "set spell spelllang=en_ca      # Ativando globalmente\nsetlocal spell spelllang=en_ca # Ativando localmente\nset nospell                    # Desativando\n\n]s                             # move the cursor to the next misspelled word\n[s                             # move the cursor back to previous misspelled words.\n\nz=                             # Vim will suggest a list of alternatives that it thinks may be correct\n\nzg                             # Vim will add the word to its dictionary\nzw                             # Mark word as incorrect", 
            "title": "Corre\u00e7\u00e3o ortogr\u00e1fica"
        }, 
        {
            "location": "/vim/#substituindo-m-por-quebras-de-linha", 
            "text": "With help from  here :  :%s/ Ctrl-V Ctrl-M /\\r/g", 
            "title": "Substituindo ^M por quebras de linha"
        }
    ]
}