{
    "content": "<h1 id=\"dicas-gerais-para-vim\">Dicas gerais para vim</h1>\n<h1 id=\"vimdiff\">Vimdiff</h1>\n<pre><code>Two commands can be used to jump to diffs:\n\n                            *[c*\n[c      Jump backwards to the previous start of a change.\n        When a count is used, do it that many times.\n                            *]c*\n]c      Jump forwards to the next start of a change.\n        When a count is used, do it that many times.\n\nThere are two commands to copy text from one buffer to another.  The result is\nthat the buffers will be equal within the specified range.\n\n                            *do*\ndo      Same as \":diffget\" without argument or range.  The \"o\" stands\n        for \"obtain\" (\"dg\" can't be used, it could be the start of\n        \"dgg\"!). Note: this doesn't work in Visual mode.\n\n                            *dp*\ndp      Same as \":diffput\" without argument or range.\n        Note: this doesn't work in Visual mode.\n</code></pre>\n<h2 id=\"scroll-simultaneo\">Scroll simult\u00e2neo</h2>\n<pre><code class=\"Bash\">set scrollbind   # Para ativar\nset noscrollbind # Para desativar\n</code></pre>\n\n<h1 id=\"abrindo-um-arquivo-em-hexadecimal\">Abrindo um arquivo em hexadecimal</h1>\n<p>Depois de abrir o arquivo, para se ver o hex dump dele:</p>\n<pre><code class=\"Bash\">:%!xxd\n</code></pre>\n\n<p>Depois de editar o hexadecimal, para converter o arquivo devolta ao formato bin\u00e1rio:</p>\n<pre><code class=\"Bash\">:%!xxd -r\n</code></pre>\n\n<h1 id=\"repetindo-macros\">Repetindo macros</h1>\n<p>Execute the macro stored in register a on lines 5 through 10.</p>\n<pre><code class=\"Bash\">:5,10norm! @a\n</code></pre>\n\n<p>Execute the macro stored in register a on all lines.</p>\n<pre><code class=\"Bash\">:%norm! @a\n</code></pre>\n\n<h1 id=\"editando-macros\">Editando macros</h1>\n<p>Dicas <a href=\"https://robots.thoughtbot.com/how-to-edit-an-existing-vim-macro\">desse site</a></p>\n<p>Yanking into a register</p>\n<pre><code>\"qp paste the contents of the register to the current cursor position\nI enter insert mode at the begging of the pasted line\n^ add the missing motion to return to the front of the line\n&lt;Escape&gt; return to visual mode\n\"qyy yank this new modified macro back into the q register\ndd delete the pasted register from the file your editing\n</code></pre>\n<p>Editing the register visually</p>\n<pre><code>:let @q=' open the q register\n&lt;Cntl-r&gt;&lt;Cntl-r&gt;q paste the contents of the q register into the buffer\n^ add the missing motion to return to the front of the line\n' add a closing quote\n&lt;Enter&gt; finish editing the macro\n</code></pre>\n<h1 id=\"correcao-ortografica\">Corre\u00e7\u00e3o ortogr\u00e1fica</h1>\n<pre><code class=\"Bash\">set spell spelllang=en_ca      # Ativando globalmente\nsetlocal spell spelllang=en_ca # Ativando localmente\nset nospell                    # Desativando\n\n]s                             # move the cursor to the next misspelled word\n[s                             # move the cursor back to previous misspelled words.\n\nz=                             # Vim will suggest a list of alternatives that it thinks may be correct\n\nzg                             # Vim will add the word to its dictionary\nzw                             # Mark word as incorrect\n</code></pre>\n\n<h1 id=\"substituindo-m-por-quebras-de-linha\">Substituindo ^M por quebras de linha</h1>\n<p>With help from <a href=\"http://stackoverflow.com/questions/811193/how-to-convert-the-m-linebreak-to-normal-linebreak-in-a-file-opened-in-vim\">here</a>:</p>\n<pre><code>:%s/&lt;Ctrl-V&gt;&lt;Ctrl-M&gt;/\\r/g\n</code></pre>", 
    "url": "/vim/", 
    "language": "en", 
    "title": "Vim"
}