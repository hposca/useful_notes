{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"amazon/","text":"Dicas para o AWSCLI Conjunto de dicas interessantes para se pegar informa\u00e7\u00f5es das m\u00e1quinas que est\u00e3o na Amazon. Pega todas as vari\u00e1veis de ambiente de um ambiente, de uma aplica\u00e7\u00e3o: application=\"safeguard\" environment=\"safeguard-staging5\" aws elasticbeanstalk describe-configuration-settings --application-name $application --environment-name $environment --query \"ConfigurationSettings[].OptionSettings[?OptionName=='EnvironmentVariables']\" Pega o nome de uma ou mais inst\u00e2ncias instances=\"i-12345678 i-09876543\" aws ec2 describe-instances --instance-ids $instances --query \"Reservations[].Instances[].Tags[?Key=='Name'].Value\" --output=text Pega informa\u00e7\u00f5es de qual AMI foi utilizada para se gerar as inst\u00e2ncias: aws ec2 describe-instances --query \"Reservations[].Instances[*].[ImageId,Tags[?Key=='Name']]\" S3 Discovering how much disk space a bucket is using From this answer in StackOverflow : aws s3 ls s3://<bucketname> --recursive | grep -v -E \"(Bucket: |Prefix: |LastWriteTime|^$|--)\" | awk 'BEGIN {total=0}{total+=$3}END{print total/1024/1024\" MB\"}' Copying the content between buckets First step, see what it will do: aws s3 sync s3://source-bucket s3://destination-bucket --dryrun If everything looks fine, execute it: aws s3 sync s3://source-bucket s3://destination-bucket","title":"Amazon"},{"location":"amazon/#dicas-para-o-awscli","text":"Conjunto de dicas interessantes para se pegar informa\u00e7\u00f5es das m\u00e1quinas que est\u00e3o na Amazon.","title":"Dicas para o AWSCLI"},{"location":"amazon/#pega-todas-as-variaveis-de-ambiente-de-um-ambiente-de-uma-aplicacao","text":"application=\"safeguard\" environment=\"safeguard-staging5\" aws elasticbeanstalk describe-configuration-settings --application-name $application --environment-name $environment --query \"ConfigurationSettings[].OptionSettings[?OptionName=='EnvironmentVariables']\"","title":"Pega todas as vari\u00e1veis de ambiente de um ambiente, de uma aplica\u00e7\u00e3o:"},{"location":"amazon/#pega-o-nome-de-uma-ou-mais-instancias","text":"instances=\"i-12345678 i-09876543\" aws ec2 describe-instances --instance-ids $instances --query \"Reservations[].Instances[].Tags[?Key=='Name'].Value\" --output=text","title":"Pega o nome de uma ou mais inst\u00e2ncias"},{"location":"amazon/#pega-informacoes-de-qual-ami-foi-utilizada-para-se-gerar-as-instancias","text":"aws ec2 describe-instances --query \"Reservations[].Instances[*].[ImageId,Tags[?Key=='Name']]\"","title":"Pega informa\u00e7\u00f5es de qual AMI foi utilizada para se gerar as inst\u00e2ncias:"},{"location":"amazon/#s3","text":"","title":"S3"},{"location":"amazon/#discovering-how-much-disk-space-a-bucket-is-using","text":"From this answer in StackOverflow : aws s3 ls s3://<bucketname> --recursive | grep -v -E \"(Bucket: |Prefix: |LastWriteTime|^$|--)\" | awk 'BEGIN {total=0}{total+=$3}END{print total/1024/1024\" MB\"}'","title":"Discovering how much disk space a bucket is using"},{"location":"amazon/#copying-the-content-between-buckets","text":"First step, see what it will do: aws s3 sync s3://source-bucket s3://destination-bucket --dryrun If everything looks fine, execute it: aws s3 sync s3://source-bucket s3://destination-bucket","title":"Copying the content between buckets"},{"location":"banco_de_dados/","text":"Anota\u00e7\u00f5es referentes a Bancos de Dados MySQL Primeiramente temos que ter o pacote mysql-client instalado. Tirando o dump mysqldump -u root --host=<HOST DO BANCO> --user='<username>' --password='<senha do banco>' database_name > /tmp/dump.sql Restaurando para uma base de dados rails rails db -p < dump.sql PostgreSQL + Amazon RDS Tirando um dump de um banco que est\u00e1 na Amazon RDS Para se facilitar o processo de se tirar o dump precisamos ter uma inst\u00e2ncia EC2 em p\u00e9, que servir\u00e1 apenas para se tirar o dump. Precisamos instalar os pacotes que cont\u00eam o pg_dump : sudo apt-get install -y postgresql-client-9.3 postgresql-client-common Depois, temos que configurar a vari\u00e1vel de ambiente que tem a senha do banco de dados: export PGPASSWORD=\"senha do banco\" Finalmente, come\u00e7amos a tirar o dump: pg_dump -Fc -h host_para_o_banco -U usuario nome_do_banco | gzip -9 > dump.sql.gz Restaurando o banco Ao final do processo acima temos um arquivo comprimido. Para restaurar o banco a partir deste arquivo podemos fazer algo como o seguinte: gunzip -c dump.sql.gz | pg_restore -U usuario -d nome_da_base","title":"Banco de dados"},{"location":"banco_de_dados/#anotacoes-referentes-a-bancos-de-dados","text":"","title":"Anota\u00e7\u00f5es referentes a Bancos de Dados"},{"location":"banco_de_dados/#mysql","text":"Primeiramente temos que ter o pacote mysql-client instalado.","title":"MySQL"},{"location":"banco_de_dados/#tirando-o-dump","text":"mysqldump -u root --host=<HOST DO BANCO> --user='<username>' --password='<senha do banco>' database_name > /tmp/dump.sql","title":"Tirando o dump"},{"location":"banco_de_dados/#restaurando-para-uma-base-de-dados-rails","text":"rails db -p < dump.sql","title":"Restaurando para uma base de dados rails"},{"location":"banco_de_dados/#postgresql-amazon-rds","text":"","title":"PostgreSQL + Amazon RDS"},{"location":"banco_de_dados/#tirando-um-dump-de-um-banco-que-esta-na-amazon-rds","text":"Para se facilitar o processo de se tirar o dump precisamos ter uma inst\u00e2ncia EC2 em p\u00e9, que servir\u00e1 apenas para se tirar o dump. Precisamos instalar os pacotes que cont\u00eam o pg_dump : sudo apt-get install -y postgresql-client-9.3 postgresql-client-common Depois, temos que configurar a vari\u00e1vel de ambiente que tem a senha do banco de dados: export PGPASSWORD=\"senha do banco\" Finalmente, come\u00e7amos a tirar o dump: pg_dump -Fc -h host_para_o_banco -U usuario nome_do_banco | gzip -9 > dump.sql.gz","title":"Tirando um dump de um banco que est\u00e1 na Amazon RDS"},{"location":"banco_de_dados/#restaurando-o-banco","text":"Ao final do processo acima temos um arquivo comprimido. Para restaurar o banco a partir deste arquivo podemos fazer algo como o seguinte: gunzip -c dump.sql.gz | pg_restore -U usuario -d nome_da_base","title":"Restaurando o banco"},{"location":"bash/","text":"Pegando nome e extens\u00e3o de um arquivo Para se pegar o nome de um arquivo: ${name%.*} Para se pegar a extens\u00e3o de um arquivo: ${name##*.} Exemplo: Renomear v\u00e1rios arquivos deixando-os com 3 digitos: for name in *.jpg; do echo mv $name $(printf %03d.%s ${name%.*} ${name##*.}) done Convertendo tabs para espa\u00e7os Misturando algumas respostas do StackOverflow conseguimos converter todos os tabs (iniciais) em espa\u00e7os: find . -type f -not -iwholename '*.git*' -exec bash -c 'expand -t 2 \"$0\" > /tmp/e && mv /tmp/e \"$0\"' {} \\; Ignorando um diret\u00f3rio: find . -type f -iname \"*.rb\" -not -path \"*/vendor/*\" -exec bash -c 'expand -t 2 \"$0\" > /tmp/e && mv /tmp/e \"$0\"' {} \\; Se estivermos em um reposit\u00f3rio git podemos garantir que n\u00e3o alteramos nada de verdade executando um: git diff --ignore-all-space Converting spaces in filenames to underlines for file in *pdf; do mv $file $(echo $file | tr -s ' ' '_'); done or for file in *pdf; do rename 's/ /_/g' $file; done Getting the exit status of a command even when using tee Even when using tee you can use the ${PIPESTATUS} variable to see what was the exit code of the executed command. It can be used to check if the status was 0 so you can continue your command chain: ./my_command.sh | tee -a /tmp/output.log ; test ${PIPESTATUS[0]} -eq 0 && ...","title":"Bash"},{"location":"bash/#pegando-nome-e-extensao-de-um-arquivo","text":"Para se pegar o nome de um arquivo: ${name%.*} Para se pegar a extens\u00e3o de um arquivo: ${name##*.} Exemplo: Renomear v\u00e1rios arquivos deixando-os com 3 digitos: for name in *.jpg; do echo mv $name $(printf %03d.%s ${name%.*} ${name##*.}) done","title":"Pegando nome e extens\u00e3o de um arquivo"},{"location":"bash/#convertendo-tabs-para-espacos","text":"Misturando algumas respostas do StackOverflow conseguimos converter todos os tabs (iniciais) em espa\u00e7os: find . -type f -not -iwholename '*.git*' -exec bash -c 'expand -t 2 \"$0\" > /tmp/e && mv /tmp/e \"$0\"' {} \\; Ignorando um diret\u00f3rio: find . -type f -iname \"*.rb\" -not -path \"*/vendor/*\" -exec bash -c 'expand -t 2 \"$0\" > /tmp/e && mv /tmp/e \"$0\"' {} \\; Se estivermos em um reposit\u00f3rio git podemos garantir que n\u00e3o alteramos nada de verdade executando um: git diff --ignore-all-space","title":"Convertendo tabs para espa\u00e7os"},{"location":"bash/#converting-spaces-in-filenames-to-underlines","text":"for file in *pdf; do mv $file $(echo $file | tr -s ' ' '_'); done or for file in *pdf; do rename 's/ /_/g' $file; done","title":"Converting spaces in filenames to underlines"},{"location":"bash/#getting-the-exit-status-of-a-command-even-when-using-tee","text":"Even when using tee you can use the ${PIPESTATUS} variable to see what was the exit code of the executed command. It can be used to check if the status was 0 so you can continue your command chain: ./my_command.sh | tee -a /tmp/output.log ; test ${PIPESTATUS[0]} -eq 0 && ...","title":"Getting the exit status of a command even when using tee"},{"location":"benchmarks/","text":"Utilizando o Apache Benchmark O ab ou Apache HTTP server benchmarking tool \"is a tool for benchmarking your Apache Hypertext Transfer Protocol (HTTP) server. It is designed to give you an impression of how your current Apache installation performs. This especially shows you how many requests per second your Apache installation is capable of serving\" . Para se instalar o ab basta executar um sudo apt-get install apache2-utils Exemplos Para se fazer 10000 requisi\u00e7\u00f5es, de 100 em 100 dizendo ser o firefox: ab -n 10000 -c 100 -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0\" http://45.55.95.61:3000/ Para saber todos os par\u00e2metros e op\u00e7\u00f5es pode-se ver a documenta\u00e7\u00e3o .","title":"Benchmarks"},{"location":"benchmarks/#utilizando-o-apache-benchmark","text":"O ab ou Apache HTTP server benchmarking tool \"is a tool for benchmarking your Apache Hypertext Transfer Protocol (HTTP) server. It is designed to give you an impression of how your current Apache installation performs. This especially shows you how many requests per second your Apache installation is capable of serving\" . Para se instalar o ab basta executar um sudo apt-get install apache2-utils","title":"Utilizando o Apache Benchmark"},{"location":"benchmarks/#exemplos","text":"Para se fazer 10000 requisi\u00e7\u00f5es, de 100 em 100 dizendo ser o firefox: ab -n 10000 -c 100 -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0\" http://45.55.95.61:3000/ Para saber todos os par\u00e2metros e op\u00e7\u00f5es pode-se ver a documenta\u00e7\u00e3o .","title":"Exemplos"},{"location":"docker/","text":"Dicas interessantes para docker Exposing a port on a live container From this Stack Overflow hint : Discover the IP of the machine: docker inspect container_name | grep -i IPAddress Create an IPTables rule (with root permissions): iptables -t nat -A DOCKER -p tcp --dport 8001 -j DNAT --to-destination container-ip:8000 Now you can access the container contents through the hostsIP:port Limpando o lixo deixado para tr\u00e1s From this site : Make sure that exited containers are deleted. docker rm -v $(docker ps -a -q -f status=exited) Remove unwanted \u2018dangling\u2019 images. docker rmi $(docker images -f \"dangling=true\" -q) Still not enough space? What is this \u2018vfs\u2019 directory? docker run -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker:/var/lib/docker --rm martin/docker-cleanup-volumes Acessing the container to use debugging tools In rails development sometimes we have to use pry via binding.pry to debug our code. As we need to be on the same terminal that is running the process we need to start our server manually: docker-compose run --service-ports <container-name-defined-in-the-docker-compose-file> /bin/bash rails s And then, when we hit the breakpoint ( binding.pry ) we can use pry normally. Checking environment variables on a live container With the help of 1 and 2 : docker inspect --format '{{ range $index, $value := .Config.Env }}{{ println $value }}{{ end }}' <container_id> Accessing a stopped container With the help of 1 and 2 : docker commit STOPPED_CONTAINER NEW_IMAGE_NAME docker run -ti NEW_IMAGE_NAME /bin/bash # or docker run -ti --entrypoint=/bin/sh NEW_IMAGE_NAME","title":"Docker"},{"location":"docker/#exposing-a-port-on-a-live-container","text":"From this Stack Overflow hint : Discover the IP of the machine: docker inspect container_name | grep -i IPAddress Create an IPTables rule (with root permissions): iptables -t nat -A DOCKER -p tcp --dport 8001 -j DNAT --to-destination container-ip:8000 Now you can access the container contents through the hostsIP:port","title":"Exposing a port on a live container"},{"location":"docker/#limpando-o-lixo-deixado-para-tras","text":"From this site : Make sure that exited containers are deleted. docker rm -v $(docker ps -a -q -f status=exited) Remove unwanted \u2018dangling\u2019 images. docker rmi $(docker images -f \"dangling=true\" -q) Still not enough space? What is this \u2018vfs\u2019 directory? docker run -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker:/var/lib/docker --rm martin/docker-cleanup-volumes","title":"Limpando o lixo deixado para tr\u00e1s"},{"location":"docker/#acessing-the-container-to-use-debugging-tools","text":"In rails development sometimes we have to use pry via binding.pry to debug our code. As we need to be on the same terminal that is running the process we need to start our server manually: docker-compose run --service-ports <container-name-defined-in-the-docker-compose-file> /bin/bash rails s And then, when we hit the breakpoint ( binding.pry ) we can use pry normally.","title":"Acessing the container to use debugging tools"},{"location":"docker/#checking-environment-variables-on-a-live-container","text":"With the help of 1 and 2 : docker inspect --format '{{ range $index, $value := .Config.Env }}{{ println $value }}{{ end }}' <container_id>","title":"Checking environment variables on a live container"},{"location":"docker/#accessing-a-stopped-container","text":"With the help of 1 and 2 : docker commit STOPPED_CONTAINER NEW_IMAGE_NAME docker run -ti NEW_IMAGE_NAME /bin/bash # or docker run -ti --entrypoint=/bin/sh NEW_IMAGE_NAME","title":"Accessing a stopped container"},{"location":"firefox/","text":"Firefox Allowing HD video on HTML5 Youtube video: With the help of this SuperUser question about:config things to set to true: media.mediasource.enabled media.mediasource.youtubeonly media.mediasource.mp4.enabled media.mediasource.webm.enabled media.fragmented-mp4.exposed media.fragmented-mp4.ffmpeg.enabled","title":"Firefox"},{"location":"firefox/#firefox","text":"","title":"Firefox"},{"location":"firefox/#allowing-hd-video-on-html5-youtube-video","text":"With the help of this SuperUser question about:config things to set to true: media.mediasource.enabled media.mediasource.youtubeonly media.mediasource.mp4.enabled media.mediasource.webm.enabled media.fragmented-mp4.exposed media.fragmented-mp4.ffmpeg.enabled","title":"Allowing HD video on HTML5 Youtube video:"},{"location":"latex/","text":"LaTeX Apresenta\u00e7\u00e3o em Beamer estilo Lousa Apresenta\u00e7\u00e3o em Beamer estilo Lousa [Como adicionar cores no LaTeX] Como adicionar cores no LaTeX","title":"Latex"},{"location":"latex/#latex","text":"","title":"LaTeX"},{"location":"latex/#apresentacao-em-beamer-estilo-lousa","text":"Apresenta\u00e7\u00e3o em Beamer estilo Lousa","title":"Apresenta\u00e7\u00e3o em Beamer estilo Lousa"},{"location":"latex/#como-adicionar-cores-no-latex","text":"Como adicionar cores no LaTeX","title":"[Como adicionar cores no LaTeX]"},{"location":"mercurial/","text":"Converting a Mercurial repo to a git repo Install the mercurial-git package: sudo apt-get install -y mercurial-git Add the following to your ~/.hgrc : [extensions] hgext.bookmarks = hgext.git = At the mercurial repo: hg bookmark -r default repo On another directory create your git repo: git init git_repo cd git_repo git config --bool core.bare true At the mercurial repo: hg push path/to/your/git_repo Now your git_repo directory is a git bare repository, you can clone from it","title":"Mercurial"},{"location":"mercurial/#converting-a-mercurial-repo-to-a-git-repo","text":"Install the mercurial-git package: sudo apt-get install -y mercurial-git Add the following to your ~/.hgrc : [extensions] hgext.bookmarks = hgext.git = At the mercurial repo: hg bookmark -r default repo On another directory create your git repo: git init git_repo cd git_repo git config --bool core.bare true At the mercurial repo: hg push path/to/your/git_repo Now your git_repo directory is a git bare repository, you can clone from it","title":"Converting a Mercurial repo to a git repo"},{"location":"perl/","text":"Como se instalar pacotes perl Como dito aqui : sudo apt-get install build-essential cpan cpan> make install cpan> install Bundle::CPAN # Depois podemos instalar o m\u00f3dulo que quisermos com cpan> install ...","title":"Perl"},{"location":"perl/#como-se-instalar-pacotes-perl","text":"Como dito aqui : sudo apt-get install build-essential cpan cpan> make install cpan> install Bundle::CPAN # Depois podemos instalar o m\u00f3dulo que quisermos com cpan> install ...","title":"Como se instalar pacotes perl"},{"location":"ruby/","text":"Dicas de Ruby e/ou Rails Executando um script em ruby Para se executar um script em ruby, podemos fazer: bundle exec rails runner \"eval(File.read 'arquivo.rb')\" Analisando logs de ambientes gem install request-log-analyzer request-log-analyzer -f rails3 --output html --file report.html production.log Refer\u00eancias: Get S3 request statistics in four simple steps - Jayway Teaser check failed \u00b7 Issue #181 \u00b7 wvanbergen/request-log-analyzer \u00b7 GitHub Running Rspec tests automatically With the use of the guard-rspec gem and the help of this StackOverflow question we configured the use of guard , to watch for modifications to our files and run rspec when something changes. To use guard, simply run bundle exec guard inside the container, in the /app directory, and be happy! Discovering the version of a gem while debugging puts Gem.loaded_specs[\"activesupport\"].version Help from rubygems - How do you check the Gem Version in Ruby at Runtime? - Stack Overflow","title":"Ruby"},{"location":"ruby/#dicas-de-ruby-eou-rails","text":"","title":"Dicas de Ruby e/ou Rails"},{"location":"ruby/#executando-um-script-em-ruby","text":"Para se executar um script em ruby, podemos fazer: bundle exec rails runner \"eval(File.read 'arquivo.rb')\"","title":"Executando um script em ruby"},{"location":"ruby/#analisando-logs-de-ambientes","text":"gem install request-log-analyzer request-log-analyzer -f rails3 --output html --file report.html production.log Refer\u00eancias: Get S3 request statistics in four simple steps - Jayway Teaser check failed \u00b7 Issue #181 \u00b7 wvanbergen/request-log-analyzer \u00b7 GitHub","title":"Analisando logs de ambientes"},{"location":"ruby/#running-rspec-tests-automatically","text":"With the use of the guard-rspec gem and the help of this StackOverflow question we configured the use of guard , to watch for modifications to our files and run rspec when something changes. To use guard, simply run bundle exec guard inside the container, in the /app directory, and be happy!","title":"Running Rspec tests automatically"},{"location":"ruby/#discovering-the-version-of-a-gem-while-debugging","text":"puts Gem.loaded_specs[\"activesupport\"].version Help from rubygems - How do you check the Gem Version in Ruby at Runtime? - Stack Overflow","title":"Discovering the version of a gem while debugging"},{"location":"vim/","text":"Dicas gerais para vim Vimdiff Two commands can be used to jump to diffs: *[c* [c Jump backwards to the previous start of a change. When a count is used, do it that many times. *]c* ]c Jump forwards to the next start of a change. When a count is used, do it that many times. There are two commands to copy text from one buffer to another. The result is that the buffers will be equal within the specified range. *do* do Same as \":diffget\" without argument or range. The \"o\" stands for \"obtain\" (\"dg\" can't be used, it could be the start of \"dgg\"!). Note: this doesn't work in Visual mode. *dp* dp Same as \":diffput\" without argument or range. Note: this doesn't work in Visual mode. Scroll simult\u00e2neo set scrollbind # Para ativar set noscrollbind # Para desativar Abrindo um arquivo em hexadecimal Depois de abrir o arquivo, para se ver o hex dump dele: :%!xxd Depois de editar o hexadecimal, para converter o arquivo devolta ao formato bin\u00e1rio: :%!xxd -r Repetindo macros Execute the macro stored in register a on lines 5 through 10. :5,10norm! @a Execute the macro stored in register a on all lines. :%norm! @a Editando macros Dicas desse site Yanking into a register \"qp paste the contents of the register to the current cursor position I enter insert mode at the begging of the pasted line ^ add the missing motion to return to the front of the line <Escape> return to visual mode \"qyy yank this new modified macro back into the q register dd delete the pasted register from the file your editing Editing the register visually :let @q=' open the q register <Cntl-r><Cntl-r>q paste the contents of the q register into the buffer ^ add the missing motion to return to the front of the line ' add a closing quote <Enter> finish editing the macro Corre\u00e7\u00e3o ortogr\u00e1fica set spell spelllang=en_ca # Ativando globalmente setlocal spell spelllang=en_ca # Ativando localmente set nospell # Desativando ]s # move the cursor to the next misspelled word [s # move the cursor back to previous misspelled words. z= # Vim will suggest a list of alternatives that it thinks may be correct zg # Vim will add the word to its dictionary zw # Mark word as incorrect Substituindo ^M por quebras de linha With help from here : :%s/<Ctrl-V><Ctrl-M>/\\r/g Copy the filename/full path of a file With this, it will copy the filename or full file path into the \" register, which is the vim's default clipboard. Filename: :let @\" = expand(\"%\") Full path: :let @\" = expand(\"%:p\") Thanks to clipboard - Yank file name / path of current buffer in Vim - Stack Overflow . And if you want to copy only the full-path of the directory: :let @\" = expand(\"%:p:h\") Thanks to How can I expand the full path of the current file to pass to a command in Vim? - Stack Overflow . More info can be found at :help filename-modifiers . Sorting IPs From this StackOverflow question : :%s/\\<\\d\\d\\?\\>/0&/g|%&&|sor r/\\(\\d\\{3}\\)\\%(\\.\\d\\{3}\\)\\{3}/|%s/\\<00\\?\\ze\\d//g Execute current line as Vim EX command From How can I execute the current line as Vim EX commands? - Stack Overflow yy:@\" Or Y:@\" Have to to begin the execution This was super useful when I had to execute many different substitutions on a list of files.","title":"Vim"},{"location":"vim/#dicas-gerais-para-vim","text":"","title":"Dicas gerais para vim"},{"location":"vim/#vimdiff","text":"Two commands can be used to jump to diffs: *[c* [c Jump backwards to the previous start of a change. When a count is used, do it that many times. *]c* ]c Jump forwards to the next start of a change. When a count is used, do it that many times. There are two commands to copy text from one buffer to another. The result is that the buffers will be equal within the specified range. *do* do Same as \":diffget\" without argument or range. The \"o\" stands for \"obtain\" (\"dg\" can't be used, it could be the start of \"dgg\"!). Note: this doesn't work in Visual mode. *dp* dp Same as \":diffput\" without argument or range. Note: this doesn't work in Visual mode.","title":"Vimdiff"},{"location":"vim/#scroll-simultaneo","text":"set scrollbind # Para ativar set noscrollbind # Para desativar","title":"Scroll simult\u00e2neo"},{"location":"vim/#abrindo-um-arquivo-em-hexadecimal","text":"Depois de abrir o arquivo, para se ver o hex dump dele: :%!xxd Depois de editar o hexadecimal, para converter o arquivo devolta ao formato bin\u00e1rio: :%!xxd -r","title":"Abrindo um arquivo em hexadecimal"},{"location":"vim/#repetindo-macros","text":"Execute the macro stored in register a on lines 5 through 10. :5,10norm! @a Execute the macro stored in register a on all lines. :%norm! @a","title":"Repetindo macros"},{"location":"vim/#editando-macros","text":"Dicas desse site Yanking into a register \"qp paste the contents of the register to the current cursor position I enter insert mode at the begging of the pasted line ^ add the missing motion to return to the front of the line <Escape> return to visual mode \"qyy yank this new modified macro back into the q register dd delete the pasted register from the file your editing Editing the register visually :let @q=' open the q register <Cntl-r><Cntl-r>q paste the contents of the q register into the buffer ^ add the missing motion to return to the front of the line ' add a closing quote <Enter> finish editing the macro","title":"Editando macros"},{"location":"vim/#correcao-ortografica","text":"set spell spelllang=en_ca # Ativando globalmente setlocal spell spelllang=en_ca # Ativando localmente set nospell # Desativando ]s # move the cursor to the next misspelled word [s # move the cursor back to previous misspelled words. z= # Vim will suggest a list of alternatives that it thinks may be correct zg # Vim will add the word to its dictionary zw # Mark word as incorrect","title":"Corre\u00e7\u00e3o ortogr\u00e1fica"},{"location":"vim/#substituindo-m-por-quebras-de-linha","text":"With help from here : :%s/<Ctrl-V><Ctrl-M>/\\r/g","title":"Substituindo ^M por quebras de linha"},{"location":"vim/#copy-the-filenamefull-path-of-a-file","text":"With this, it will copy the filename or full file path into the \" register, which is the vim's default clipboard. Filename: :let @\" = expand(\"%\") Full path: :let @\" = expand(\"%:p\") Thanks to clipboard - Yank file name / path of current buffer in Vim - Stack Overflow . And if you want to copy only the full-path of the directory: :let @\" = expand(\"%:p:h\") Thanks to How can I expand the full path of the current file to pass to a command in Vim? - Stack Overflow . More info can be found at :help filename-modifiers .","title":"Copy the filename/full path of a file"},{"location":"vim/#sorting-ips","text":"From this StackOverflow question : :%s/\\<\\d\\d\\?\\>/0&/g|%&&|sor r/\\(\\d\\{3}\\)\\%(\\.\\d\\{3}\\)\\{3}/|%s/\\<00\\?\\ze\\d//g","title":"Sorting IPs"},{"location":"vim/#execute-current-line-as-vim-ex-command","text":"From How can I execute the current line as Vim EX commands? - Stack Overflow yy:@\" Or Y:@\" Have to to begin the execution This was super useful when I had to execute many different substitutions on a list of files.","title":"Execute current line as Vim EX command"},{"location":"git/branches/","text":"Dicas de como se utilizar branches no git. Showing which files have changed between git branches From Showing which files have changed between git branches : git diff --name-status master..branchName Git rename local git branch From Git rename local git branch : git branch -m <oldname> <newname> # or, if you want to rename the current branch: git branch -m <newname> Pushing local branch to origin git push origin <branchName> Remove remote branches From Remove remote branches : git push origin --delete <branchName> # or git push origin :<branchName> Visualization Branches Hierarchy git log --oneline --decorate --color --graph --all --simplify-by-decoration # ou git log --graph --simplify-by-decoration --pretty=format:'%d' --all Git log all branches From Git log all branches : git log --oneline --graph --decorate --all Moving Move commits from one branch to another From Move commits from one branch to another : # This will move commits from master to the new branch git checkout -b some-feature git checkout master git reset --hard HEAD^ git checkout some-feature Movendo conte\u00fado de uma branch para outra De vez em quando n\u00e3o podemos simplesmente mergear uma branch com a outra, pois isso pode trazer algumas modifica\u00e7\u00f5es indesejadas. Uma coisa que podemos fazer \u00e9 crirar um conjunto de patches e transport\u00e1-los para a branch onde queremos aplicar as mudan\u00e7as que foram feitas na outra branch. Gerando os patches: git checkout <SHA-1 do commit que voc\u00ea quer considerar como \u00faltimo> git format-patch <SHA-1 do commit que voc\u00ea quer utilizar como primeiro> # Ser\u00e3o gerados v\u00e1rios arquivos .patch Aplicando os patches: # Primeiramente, mude seu workspace para a branch onde voc\u00ea quer aplicar as mudan\u00e7as # e.g.: git checkout production git am *.patch # No caso que enfrentei tinha alguns problemas de espa\u00e7o, final de linha, etc. ent\u00e3o utilizei: git am -3 --ignore-whitespace *.patch Caso algum dos patches falhe na sua aplica\u00e7\u00e3o basta editar o arquivo, adicion\u00e1-lo com git add e dar um git am --continue Move the most recent commit From Move the most recent commit(s) to a new branch with Git : git branch newbranch git reset --hard HEAD~3 # Go back 3 commits. You *will* lose uncommitted work. git checkout newbranch Movendo um diret\u00f3rio de um reposit\u00f3rio para outro, preservando o hist\u00f3rico! Quem nunca come\u00e7ou a mexer em um diret\u00f3rio e depois percebeu que ele precisava ficar em outro reposit\u00f3rio, ou at\u00e9 ser um reposit\u00f3rio separado (uma biblioteca, por exemplo)? Seus problemas se acabaram-se!! git filter-branch ao resgate! Para esta receita de bolo queremos: Mover um diret\u00f3rio de um reposit\u00f3rio A para um reposit\u00f3rio B E temos as seguintes condi\u00e7\u00f5es: O reposit\u00f3rio A cont\u00e9m outras coisas al\u00e9m do diret\u00f3rio que queremos mover Queremos preservar todo o hist\u00f3rico de commits que envolvam o diret\u00f3rio em quest\u00e3o (depois de fazer um backup do seu reposit\u00f3rio, utilizando sua forma favorita) Na raiz do \"reposit\u00f3rio A\": git filter-branch --subdirectory-filter [oDitoCujoDoDiretorioQueQueremosSeparar] -- --all If you want your code to be on another directory structure on repository B, execute the following commands still on Repository A: mkdir -p [new directory location] mv * [new directory location] git add . git commit Este lindo comando far\u00e1, segundo a documenta\u00e7\u00e3o, como se o reposit\u00f3rio fosse a ra\u00edz do reposit\u00f3rio e todo o resto, desconhecido. J\u00e1 no seu \"reposit\u00f3rio B\": git checkout -b new_branch git remote add branchA [caminhoParaORepositorioA] git pull branchA master --allow-unrelated-histories # Ao inv\u00e9s de master voc\u00ea pode colocar a branch que estava sendo utilizada no reposit\u00f3rio A git remote rm branchA git checkout master git merge --no-ff new_branch git branch -d new_branch Pronto! Agora em seu \"reposit\u00f3rio B\" voc\u00ea ter\u00e1 todo o conte\u00fado do diret\u00f3rio que estava no \"reposit\u00f3rio A\", e com o hist\u00f3rico preservado! E isto tudo s\u00f3 foi poss\u00edvel devido \u00e0s dicas deste site ! This gist has a very similar strategy based on the site above. A simple bash script with all the steps at once: #!/usr/bin/env bash GITHUB_USER=\"\" REPO_FROM=\"\" REPO_FROM_BRANCH=\"master\" DIRECTORY_FROM=\"a/b/c/\" REPO_TO=\"\" REPO_TO_NEW_BRANCH=\"moving\" DIRECTORY_TO=\"c/\" git clone git@github.com:${GITHUB_USER}/${REPO_FROM}.git git clone git@github.com:${GITHUB_USER}/${REPO_TO}.git cd ${REPO_FROM} git filter-branch --subdirectory-filter \"${DIRECTORY_FROM}\" -- --all mkdir -p \"${DIRECTORY_TO}\" mv * \"${DIRECTORY_TO}\" git add . git commit -m \"Moving files to new location\" cd ../${REPO_TO} git checkout -b \"${REPO_TO_NEW_BRANCH}\" git remote add repoFrom \"../${REPO_FROM}\" git pull repoFrom \"${REPO_FROM_BRANCH}\" --allow-unrelated-histories git remote rm repoFrom git checkout master git merge --no-ff \"${REPO_TO_NEW_BRANCH}\" # git branch -d \"${REPO_TO_NEW_BRANCH}\" How do you squash commits into one patch with git format-patch? With the help of StackOverflow . [(master)]$ git checkout -b tmpsquash Switched to a new branch \"tmpsquash\" [(tmpsquash)]$ git merge --squash newlines Updating 4d2de39..b6768b2 Fast forward Squash commit -- not updating HEAD test.txt | 2 ++ 1 files changed, 2 insertions(+), 0 deletions(-) [(tmpsquash)]$ git commit -a -m \"My squashed commits\" [tmpsquash]: created 75b0a89: \"My squashed commits\" 1 files changed, 2 insertions(+), 0 deletions(-) [(tmpsquash)]$ git format-patch master 0001-My-squashed-commits.patch Moving branch pointer without checkout As stated here we can use: git branch -f branch-name new-tip-commit Git patch in different directory As suggested in How to apply a Git patch to a file with a different name and path? - Stack Overflow : git format-patch --relative <commit> It can be something like: git format-patch --relative -10 HEAD Then apply pointing to the new directory: git am --directory the/directory/ 0001-patchfile.patch Merging two repositories How to merge a repository ( REPO_TO_DELETE ) into another ( REPO_TO_KEEP ): #!/usr/bin/env bash GITHUB_USER=\"\" REPO_TO_KEEP=\"\" REPO_TO_DELETE=\"\" git clone git@github.com:${GITHUB_USER}/${REPO_TO_KEEP}.git git clone git@github.com:${GITHUB_USER}/${REPO_TO_DELETE}.git cd ${REPO_TO_DELETE} mkdir ${REPO_TO_DELETE} mv * ${REPO_TO_DELETE} git add . git commit -a -m \"Moving ${REPO_TO_DELETE} project into its own directory So we can merge into the ${REPO_TO_KEEP} repository with less problems\" cd ../${REPO_TO_KEEP} git remote add ${REPO_TO_DELETE} ../${REPO_TO_DELETE} git fetch ${REPO_TO_DELETE} git checkout -b merging_${REPO_TO_DELETE}_repo git merge --allow-unrelated-histories ${REPO_TO_DELETE}/master # Solve any conflicts that appear # git commit","title":"Branches"},{"location":"git/branches/#showing-which-files-have-changed-between-git-branches","text":"From Showing which files have changed between git branches : git diff --name-status master..branchName","title":"Showing which files have changed between git branches"},{"location":"git/branches/#git-rename-local-git-branch","text":"From Git rename local git branch : git branch -m <oldname> <newname> # or, if you want to rename the current branch: git branch -m <newname>","title":"Git rename local git branch"},{"location":"git/branches/#pushing-local-branch-to-origin","text":"git push origin <branchName>","title":"Pushing local branch to origin"},{"location":"git/branches/#remove-remote-branches","text":"From Remove remote branches : git push origin --delete <branchName> # or git push origin :<branchName>","title":"Remove remote branches"},{"location":"git/branches/#visualization","text":"","title":"Visualization"},{"location":"git/branches/#branches-hierarchy","text":"git log --oneline --decorate --color --graph --all --simplify-by-decoration # ou git log --graph --simplify-by-decoration --pretty=format:'%d' --all","title":"Branches Hierarchy"},{"location":"git/branches/#git-log-all-branches","text":"From Git log all branches : git log --oneline --graph --decorate --all","title":"Git log all branches"},{"location":"git/branches/#moving","text":"","title":"Moving"},{"location":"git/branches/#move-commits-from-one-branch-to-another","text":"From Move commits from one branch to another : # This will move commits from master to the new branch git checkout -b some-feature git checkout master git reset --hard HEAD^ git checkout some-feature","title":"Move commits from one branch to another"},{"location":"git/branches/#movendo-conteudo-de-uma-branch-para-outra","text":"De vez em quando n\u00e3o podemos simplesmente mergear uma branch com a outra, pois isso pode trazer algumas modifica\u00e7\u00f5es indesejadas. Uma coisa que podemos fazer \u00e9 crirar um conjunto de patches e transport\u00e1-los para a branch onde queremos aplicar as mudan\u00e7as que foram feitas na outra branch. Gerando os patches: git checkout <SHA-1 do commit que voc\u00ea quer considerar como \u00faltimo> git format-patch <SHA-1 do commit que voc\u00ea quer utilizar como primeiro> # Ser\u00e3o gerados v\u00e1rios arquivos .patch Aplicando os patches: # Primeiramente, mude seu workspace para a branch onde voc\u00ea quer aplicar as mudan\u00e7as # e.g.: git checkout production git am *.patch # No caso que enfrentei tinha alguns problemas de espa\u00e7o, final de linha, etc. ent\u00e3o utilizei: git am -3 --ignore-whitespace *.patch Caso algum dos patches falhe na sua aplica\u00e7\u00e3o basta editar o arquivo, adicion\u00e1-lo com git add e dar um git am --continue","title":"Movendo conte\u00fado de uma branch para outra"},{"location":"git/branches/#move-the-most-recent-commit","text":"From Move the most recent commit(s) to a new branch with Git : git branch newbranch git reset --hard HEAD~3 # Go back 3 commits. You *will* lose uncommitted work. git checkout newbranch","title":"Move the most recent commit"},{"location":"git/branches/#movendo-um-diretorio-de-um-repositorio-para-outro-preservando-o-historico","text":"Quem nunca come\u00e7ou a mexer em um diret\u00f3rio e depois percebeu que ele precisava ficar em outro reposit\u00f3rio, ou at\u00e9 ser um reposit\u00f3rio separado (uma biblioteca, por exemplo)? Seus problemas se acabaram-se!! git filter-branch ao resgate! Para esta receita de bolo queremos: Mover um diret\u00f3rio de um reposit\u00f3rio A para um reposit\u00f3rio B E temos as seguintes condi\u00e7\u00f5es: O reposit\u00f3rio A cont\u00e9m outras coisas al\u00e9m do diret\u00f3rio que queremos mover Queremos preservar todo o hist\u00f3rico de commits que envolvam o diret\u00f3rio em quest\u00e3o (depois de fazer um backup do seu reposit\u00f3rio, utilizando sua forma favorita) Na raiz do \"reposit\u00f3rio A\": git filter-branch --subdirectory-filter [oDitoCujoDoDiretorioQueQueremosSeparar] -- --all If you want your code to be on another directory structure on repository B, execute the following commands still on Repository A: mkdir -p [new directory location] mv * [new directory location] git add . git commit Este lindo comando far\u00e1, segundo a documenta\u00e7\u00e3o, como se o reposit\u00f3rio fosse a ra\u00edz do reposit\u00f3rio e todo o resto, desconhecido. J\u00e1 no seu \"reposit\u00f3rio B\": git checkout -b new_branch git remote add branchA [caminhoParaORepositorioA] git pull branchA master --allow-unrelated-histories # Ao inv\u00e9s de master voc\u00ea pode colocar a branch que estava sendo utilizada no reposit\u00f3rio A git remote rm branchA git checkout master git merge --no-ff new_branch git branch -d new_branch Pronto! Agora em seu \"reposit\u00f3rio B\" voc\u00ea ter\u00e1 todo o conte\u00fado do diret\u00f3rio que estava no \"reposit\u00f3rio A\", e com o hist\u00f3rico preservado! E isto tudo s\u00f3 foi poss\u00edvel devido \u00e0s dicas deste site ! This gist has a very similar strategy based on the site above. A simple bash script with all the steps at once: #!/usr/bin/env bash GITHUB_USER=\"\" REPO_FROM=\"\" REPO_FROM_BRANCH=\"master\" DIRECTORY_FROM=\"a/b/c/\" REPO_TO=\"\" REPO_TO_NEW_BRANCH=\"moving\" DIRECTORY_TO=\"c/\" git clone git@github.com:${GITHUB_USER}/${REPO_FROM}.git git clone git@github.com:${GITHUB_USER}/${REPO_TO}.git cd ${REPO_FROM} git filter-branch --subdirectory-filter \"${DIRECTORY_FROM}\" -- --all mkdir -p \"${DIRECTORY_TO}\" mv * \"${DIRECTORY_TO}\" git add . git commit -m \"Moving files to new location\" cd ../${REPO_TO} git checkout -b \"${REPO_TO_NEW_BRANCH}\" git remote add repoFrom \"../${REPO_FROM}\" git pull repoFrom \"${REPO_FROM_BRANCH}\" --allow-unrelated-histories git remote rm repoFrom git checkout master git merge --no-ff \"${REPO_TO_NEW_BRANCH}\" # git branch -d \"${REPO_TO_NEW_BRANCH}\"","title":"Movendo um diret\u00f3rio de um reposit\u00f3rio para outro, preservando o hist\u00f3rico!"},{"location":"git/branches/#how-do-you-squash-commits-into-one-patch-with-git-format-patch","text":"With the help of StackOverflow . [(master)]$ git checkout -b tmpsquash Switched to a new branch \"tmpsquash\" [(tmpsquash)]$ git merge --squash newlines Updating 4d2de39..b6768b2 Fast forward Squash commit -- not updating HEAD test.txt | 2 ++ 1 files changed, 2 insertions(+), 0 deletions(-) [(tmpsquash)]$ git commit -a -m \"My squashed commits\" [tmpsquash]: created 75b0a89: \"My squashed commits\" 1 files changed, 2 insertions(+), 0 deletions(-) [(tmpsquash)]$ git format-patch master 0001-My-squashed-commits.patch","title":"How do you squash commits into one patch with git format-patch?"},{"location":"git/branches/#moving-branch-pointer-without-checkout","text":"As stated here we can use: git branch -f branch-name new-tip-commit","title":"Moving branch pointer without checkout"},{"location":"git/branches/#git-patch-in-different-directory","text":"As suggested in How to apply a Git patch to a file with a different name and path? - Stack Overflow : git format-patch --relative <commit> It can be something like: git format-patch --relative -10 HEAD Then apply pointing to the new directory: git am --directory the/directory/ 0001-patchfile.patch","title":"Git patch in different directory"},{"location":"git/branches/#merging-two-repositories","text":"How to merge a repository ( REPO_TO_DELETE ) into another ( REPO_TO_KEEP ): #!/usr/bin/env bash GITHUB_USER=\"\" REPO_TO_KEEP=\"\" REPO_TO_DELETE=\"\" git clone git@github.com:${GITHUB_USER}/${REPO_TO_KEEP}.git git clone git@github.com:${GITHUB_USER}/${REPO_TO_DELETE}.git cd ${REPO_TO_DELETE} mkdir ${REPO_TO_DELETE} mv * ${REPO_TO_DELETE} git add . git commit -a -m \"Moving ${REPO_TO_DELETE} project into its own directory So we can merge into the ${REPO_TO_KEEP} repository with less problems\" cd ../${REPO_TO_KEEP} git remote add ${REPO_TO_DELETE} ../${REPO_TO_DELETE} git fetch ${REPO_TO_DELETE} git checkout -b merging_${REPO_TO_DELETE}_repo git merge --allow-unrelated-histories ${REPO_TO_DELETE}/master # Solve any conflicts that appear # git commit","title":"Merging two repositories"},{"location":"git/cleaning/","text":"Deleting a git tag From: How to: Delete a remote Git tag - Nathan Hoad Delete your local tag: git tag -d 12345 Remove it from the remote: git push origin :refs/tags/12345 Deleting unused local branches git branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d Purging a file from your repository's history Instructions from Removing sensitive data from a repository - User Documentation Remove it from the history: git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA' --prune-empty --tag-name-filter cat -- --all Add it to gitignore: echo \"YOUR-FILE-WITH-SENSITIVE-DATA\" >> .gitignore git add .gitignore git commit -m \"Add YOUR-FILE-WITH-SENSITIVE-DATA to .gitignore\" Force push: git push origin --force --tags","title":"Cleaning"},{"location":"git/cleaning/#deleting-a-git-tag","text":"From: How to: Delete a remote Git tag - Nathan Hoad Delete your local tag: git tag -d 12345 Remove it from the remote: git push origin :refs/tags/12345","title":"Deleting a git tag"},{"location":"git/cleaning/#deleting-unused-local-branches","text":"git branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d","title":"Deleting unused local branches"},{"location":"git/cleaning/#purging-a-file-from-your-repositorys-history","text":"Instructions from Removing sensitive data from a repository - User Documentation Remove it from the history: git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA' --prune-empty --tag-name-filter cat -- --all Add it to gitignore: echo \"YOUR-FILE-WITH-SENSITIVE-DATA\" >> .gitignore git add .gitignore git commit -m \"Add YOUR-FILE-WITH-SENSITIVE-DATA to .gitignore\" Force push: git push origin --force --tags","title":"Purging a file from your repository's history"},{"location":"git/encrypting/","text":"How to work with a encrypted repository using git-crypt git-crypt repo Clone it git clone git@github.com:AGWA/git-crypt.git Install it make && make install Make sure that you have g++ installed To generate a key cd $(mktemp -d); git init; git-crypt init; git-crypt export-key ~/git-crypt.key; cd Don't forget to secure your key in a safe place. Configuring your repository to encrypt all files In a repository create and commit a .gitattributes file with this content: /** filter=git-crypt diff=git-crypt /public/** !filter !diff .gitattributes !filter !diff .gitmodules !filter !diff .git* !filter !diff After the .gitattributes file is commited, do the following steps: git-crypt unlock ~/git-crypt.key git-crypt status -f Then commit your changes. On all new clones of this repository you'll need to unlock it: git-crypt unlock ~/git-crypt.key ...do your stuff... git-crypt status # to check if all files are encrypted (-f to fix) git add . git commit git push CAUTION When backuping the repository do not copy it to another place, clone it. When git-crypt unlocks a repository it creates a git-crypt directory inside .git which contains your key. CAUTION References encryption - git encrypt/decrypt remote repository files while push/pull - Stack Overflow Storing sensitive data in a git repository using git-crypt | Technology | Blog | Twinbit Encrypting all by default, then exclude... \u00b7 Issue #76 \u00b7 AGWA/git-crypt \u00b7 GitHub","title":"Encrypting"},{"location":"git/encrypting/#how-to-work-with-a-encrypted-repository-using-git-crypt","text":"git-crypt repo Clone it git clone git@github.com:AGWA/git-crypt.git Install it make && make install Make sure that you have g++ installed","title":"How to work with a encrypted repository using git-crypt"},{"location":"git/encrypting/#to-generate-a-key","text":"cd $(mktemp -d); git init; git-crypt init; git-crypt export-key ~/git-crypt.key; cd Don't forget to secure your key in a safe place.","title":"To generate a key"},{"location":"git/encrypting/#configuring-your-repository-to-encrypt-all-files","text":"In a repository create and commit a .gitattributes file with this content: /** filter=git-crypt diff=git-crypt /public/** !filter !diff .gitattributes !filter !diff .gitmodules !filter !diff .git* !filter !diff After the .gitattributes file is commited, do the following steps: git-crypt unlock ~/git-crypt.key git-crypt status -f Then commit your changes. On all new clones of this repository you'll need to unlock it: git-crypt unlock ~/git-crypt.key ...do your stuff... git-crypt status # to check if all files are encrypted (-f to fix) git add . git commit git push CAUTION When backuping the repository do not copy it to another place, clone it. When git-crypt unlocks a repository it creates a git-crypt directory inside .git which contains your key. CAUTION","title":"Configuring your repository to encrypt all files"},{"location":"git/encrypting/#references","text":"encryption - git encrypt/decrypt remote repository files while push/pull - Stack Overflow Storing sensitive data in a git repository using git-crypt | Technology | Blog | Twinbit Encrypting all by default, then exclude... \u00b7 Issue #76 \u00b7 AGWA/git-crypt \u00b7 GitHub","title":"References"},{"location":"git/exporting/","text":"Exporting your repository To export your repository to another person you have two options: git archive and git bundle Git archive With git archive you export the repository but only the files on HEAD , without the history. At the repository's root: git archive -o ${PWD##*/}-$(date +%Y%m%d).zip HEAD Git bundle With git bundle you export the repository including the entire history. At the repository's root, create the bundle file: git bundle create ${PWD##*/}-$(date +%Y%m%d).bundle --all After sending this file to another person s/he can clone it and start analyzing it: git clone repositry.bundle","title":"Exporting"},{"location":"git/exporting/#exporting-your-repository","text":"To export your repository to another person you have two options: git archive and git bundle","title":"Exporting your repository"},{"location":"git/exporting/#git-archive","text":"With git archive you export the repository but only the files on HEAD , without the history. At the repository's root: git archive -o ${PWD##*/}-$(date +%Y%m%d).zip HEAD","title":"Git archive"},{"location":"git/exporting/#git-bundle","text":"With git bundle you export the repository including the entire history. At the repository's root, create the bundle file: git bundle create ${PWD##*/}-$(date +%Y%m%d).bundle --all After sending this file to another person s/he can clone it and start analyzing it: git clone repositry.bundle","title":"Git bundle"},{"location":"git/git/","text":"Dicas gerais sobre o git. How can I determine the url that a local git repo was originally cloned from? From How can I determine the url that a local git repo was originally cloned from? : # If referential integrity has been broken: git config --get remote.origin.url # If referential integrity is intact: git remote show origin Problema ao se fazer push para um reposit\u00f3rio \"non-bare\" $ git push Counting objects: 20, done. Delta compression using up to 8 threads. Compressing objects: 100% (17/17), done. Writing objects: 100% (18/18), 2.69 KiB | 0 bytes/s, done. Total 18 (delta 9), reused 0 (delta 0) remote: error: refusing to update checked out branch: refs/heads/master remote: error: By default, updating the current branch in a non-bare repository remote: error: is denied, because it will make the index and work tree inconsistent remote: error: with what you pushed, and will require 'git reset --hard' to match remote: error: the work tree to HEAD. remote: error: remote: error: You can set 'receive.denyCurrentBranch' configuration variable to remote: error: 'ignore' or 'warn' in the remote repository to allow pushing into remote: error: its current branch; however, this is not recommended unless you remote: error: arranged to update its work tree to match what you pushed in some remote: error: other way. remote: error: remote: error: To squelch this message and still keep the default behaviour, set remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'. To /home/hugo/Dropbox/workplace/eve_grabber ! [remote rejected] master -> master (branch is currently checked out) error: failed to push some refs to '/home/hugo/Dropbox/workplace/eve_grabber' Com a ajuda do stack overflow : At the remote repo: git config --bool core.bare true Then delete all the files except .git in that folder. And then you will be able to perform git push to the remote repository without any errors. Creating a bare repository from a normal one From version control - How to convert a normal Git repository to a bare one? - Stack Overflow : cd repo mv .git ../repo.git # renaming just for clarity cd .. rm -fr repo cd repo.git git config --bool core.bare true Gerando Patches Dica do How to create and apply a patch with Git : Para se gerar o patch: git format-patch against_branch_name --stdout > name_of.patch Outra forma de se gerar o patch \u00e9 com git diff : git diff sha1..sha2 > name_of.patch Para se aplicar o patch: git apply --stat name_of.patch Assim, ele s\u00f3 ir\u00e1 mostrar como ser\u00e1 a aplica\u00e7\u00e3o do patch, n\u00e3o aplicar\u00e1 de verdade. Para realmente se aplicar o patch devemos chamar git am name_of.patch Submodules Atualizando todos os submodules: git submodule update --init --recursive How to grep (search) committed code in the git history? git grep [regexp] $(git rev-list --all) or git log -S\"search term\" How to grep commit messages git log --grep \"search term\" On all branches git log --all --grep=\"search term\" Add only non-whitespace changes Suponha que o seu editor tenha feito mudan\u00e7as nos whitespaces/tabs, para apenas adicionar ao staging as mudan\u00e7as de verdade: git diff -w --no-color <arquivo> | git apply --cached --ignore-whitespace Temporarily stop watching a file git update-index --assume-unchanged <file> Now the file, even if modified, will not appear in a git status. To undo it: git update-index --no-assume-unchanged <file> To list all the files that are \"hidden\" in this way: git ls-files -v | grep '^h' With the help of StackOverflow Discovering when text was modified in a file With the help of StackOverflow : git log -c -S'missingtext' /path/to/file Pushing to a Remote Branch with a Different Name git push origin local-name:remote-name Tip from https://penandpants.com/2013/02/07/git-pushing-to-a-remote-branch-with-a-different-name/","title":"General"},{"location":"git/git/#how-can-i-determine-the-url-that-a-local-git-repo-was-originally-cloned-from","text":"From How can I determine the url that a local git repo was originally cloned from? : # If referential integrity has been broken: git config --get remote.origin.url # If referential integrity is intact: git remote show origin","title":"How can I determine the url that a local git repo was originally cloned from?"},{"location":"git/git/#problema-ao-se-fazer-push-para-um-repositorio-non-bare","text":"$ git push Counting objects: 20, done. Delta compression using up to 8 threads. Compressing objects: 100% (17/17), done. Writing objects: 100% (18/18), 2.69 KiB | 0 bytes/s, done. Total 18 (delta 9), reused 0 (delta 0) remote: error: refusing to update checked out branch: refs/heads/master remote: error: By default, updating the current branch in a non-bare repository remote: error: is denied, because it will make the index and work tree inconsistent remote: error: with what you pushed, and will require 'git reset --hard' to match remote: error: the work tree to HEAD. remote: error: remote: error: You can set 'receive.denyCurrentBranch' configuration variable to remote: error: 'ignore' or 'warn' in the remote repository to allow pushing into remote: error: its current branch; however, this is not recommended unless you remote: error: arranged to update its work tree to match what you pushed in some remote: error: other way. remote: error: remote: error: To squelch this message and still keep the default behaviour, set remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'. To /home/hugo/Dropbox/workplace/eve_grabber ! [remote rejected] master -> master (branch is currently checked out) error: failed to push some refs to '/home/hugo/Dropbox/workplace/eve_grabber' Com a ajuda do stack overflow : At the remote repo: git config --bool core.bare true Then delete all the files except .git in that folder. And then you will be able to perform git push to the remote repository without any errors.","title":"Problema ao se fazer push para um reposit\u00f3rio \"non-bare\""},{"location":"git/git/#creating-a-bare-repository-from-a-normal-one","text":"From version control - How to convert a normal Git repository to a bare one? - Stack Overflow : cd repo mv .git ../repo.git # renaming just for clarity cd .. rm -fr repo cd repo.git git config --bool core.bare true","title":"Creating a bare repository from a normal one"},{"location":"git/git/#gerando-patches","text":"Dica do How to create and apply a patch with Git :","title":"Gerando Patches"},{"location":"git/git/#para-se-gerar-o-patch","text":"git format-patch against_branch_name --stdout > name_of.patch Outra forma de se gerar o patch \u00e9 com git diff : git diff sha1..sha2 > name_of.patch","title":"Para se gerar o patch:"},{"location":"git/git/#para-se-aplicar-o-patch","text":"git apply --stat name_of.patch Assim, ele s\u00f3 ir\u00e1 mostrar como ser\u00e1 a aplica\u00e7\u00e3o do patch, n\u00e3o aplicar\u00e1 de verdade. Para realmente se aplicar o patch devemos chamar git am name_of.patch","title":"Para se aplicar o patch:"},{"location":"git/git/#submodules","text":"Atualizando todos os submodules: git submodule update --init --recursive","title":"Submodules"},{"location":"git/git/#how-to-grep-search-committed-code-in-the-git-history","text":"git grep [regexp] $(git rev-list --all) or git log -S\"search term\"","title":"How to grep (search) committed code in the git history?"},{"location":"git/git/#how-to-grep-commit-messages","text":"git log --grep \"search term\" On all branches git log --all --grep=\"search term\"","title":"How to grep commit messages"},{"location":"git/git/#add-only-non-whitespace-changes","text":"Suponha que o seu editor tenha feito mudan\u00e7as nos whitespaces/tabs, para apenas adicionar ao staging as mudan\u00e7as de verdade: git diff -w --no-color <arquivo> | git apply --cached --ignore-whitespace","title":"Add only non-whitespace changes"},{"location":"git/git/#temporarily-stop-watching-a-file","text":"git update-index --assume-unchanged <file> Now the file, even if modified, will not appear in a git status. To undo it: git update-index --no-assume-unchanged <file> To list all the files that are \"hidden\" in this way: git ls-files -v | grep '^h' With the help of StackOverflow","title":"Temporarily stop watching a file"},{"location":"git/git/#discovering-when-text-was-modified-in-a-file","text":"With the help of StackOverflow : git log -c -S'missingtext' /path/to/file","title":"Discovering when text was modified in a file"},{"location":"git/git/#pushing-to-a-remote-branch-with-a-different-name","text":"git push origin local-name:remote-name Tip from https://penandpants.com/2013/02/07/git-pushing-to-a-remote-branch-with-a-different-name/","title":"Pushing to a Remote Branch with a Different Name"},{"location":"git/history/","text":"Analisando a hist\u00f3ria Mudan\u00e7as entre dois changests Apenas os arquivos que foram mudados: git diff --name-only sha1..sha2 # ou git diff --name-only HEAD~10..HEAD~5 O conte\u00fado do que foi mudado: git diff sha1..sha2 # ou git diff HEAD~10..HEAD~5 Get all files that have been modified between two git branches From Get all files that have been modified in git branch - Stack Overflow : git diff --name-only <notMainDev> $(git merge-base <notMainDev> <mainDev>) An example if you are on a branch and want to compare with master: git diff --name-only HEAD $(git merge-base master HEAD) Branches and commits between two commits All commits between two commits (only the direct path) git log --ancestry-path .. Current branches that are children of another git branch --contains Revert a commit alredy pushed to a remote repository From this blog entry there are two good ways: git push origin +commit_sha^:master or (The one I used): git reset HEAD^ --hard git push origin -f Making git \u201cforget\u201d about a file that was tracked but is now in .gitignore .gitignore will prevent untracked files from being added (without an add -f) to the set of files tracked by git, however git will continue to track any files that are already being tracked. To stop tracking a file you need to remove it from the index. This can be achieved with this command. git rm --cached <file> The removal of the file from the head revision will happen on the next commit. Edit an incorrect commit message in Git With hints from StackOverflow : If the commit you want to fix isn\u2019t the most recent one: If you want to fix several flawed commits, pass the parent of the oldest one of them. git rebase --interactive $parent_of_flawed_commit An editor will come up, with a list of all commits since the one you gave. Change pick to reword (or on old versions of Git, to edit ) in front of any commits you want to fix. Once you save, Git will replay the listed commits. For each commit you want to reword , Git will drop you back into your editor. For each commit you want to edit, Git drops you into the shell. If you\u2019re in the shell: Change the commit in any way you like. git commit --amend git rebase --continue Most of this sequence will be explained to you by the output of the various commands as you go. It\u2019s very easy, you don\u2019t need to memorise it \u2013 just remember that git rebase --interactive lets you correct commits no matter how long ago they were. Changing the whole history You may want to rebase from the beginning of your repository. For doing that the --root flag is very useful: git rebase -i --root Re-creating the first commit git checkout -b new-master git reset --hard <First commit SHA> git update-ref -d HEAD # Now remove all files from stage git commit --allow-empty git merge --no-ff <other branch> Using the help from How to revert initial git commit? - Stack Overflow","title":"History"},{"location":"git/history/#analisando-a-historia","text":"","title":"Analisando a hist\u00f3ria"},{"location":"git/history/#mudancas-entre-dois-changests","text":"Apenas os arquivos que foram mudados: git diff --name-only sha1..sha2 # ou git diff --name-only HEAD~10..HEAD~5 O conte\u00fado do que foi mudado: git diff sha1..sha2 # ou git diff HEAD~10..HEAD~5","title":"Mudan\u00e7as entre dois changests"},{"location":"git/history/#get-all-files-that-have-been-modified-between-two-git-branches","text":"From Get all files that have been modified in git branch - Stack Overflow : git diff --name-only <notMainDev> $(git merge-base <notMainDev> <mainDev>) An example if you are on a branch and want to compare with master: git diff --name-only HEAD $(git merge-base master HEAD)","title":"Get all files that have been modified between two git branches"},{"location":"git/history/#branches-and-commits-between-two-commits","text":"All commits between two commits (only the direct path) git log --ancestry-path .. Current branches that are children of another git branch --contains","title":"Branches and commits between two commits"},{"location":"git/history/#revert-a-commit-alredy-pushed-to-a-remote-repository","text":"From this blog entry there are two good ways: git push origin +commit_sha^:master or (The one I used): git reset HEAD^ --hard git push origin -f","title":"Revert a commit alredy pushed to a remote repository"},{"location":"git/history/#making-git-forget-about-a-file-that-was-tracked-but-is-now-in-gitignore","text":".gitignore will prevent untracked files from being added (without an add -f) to the set of files tracked by git, however git will continue to track any files that are already being tracked. To stop tracking a file you need to remove it from the index. This can be achieved with this command. git rm --cached <file> The removal of the file from the head revision will happen on the next commit.","title":"Making git \u201cforget\u201d about a file that was tracked but is now in .gitignore"},{"location":"git/history/#edit-an-incorrect-commit-message-in-git","text":"With hints from StackOverflow : If the commit you want to fix isn\u2019t the most recent one: If you want to fix several flawed commits, pass the parent of the oldest one of them. git rebase --interactive $parent_of_flawed_commit An editor will come up, with a list of all commits since the one you gave. Change pick to reword (or on old versions of Git, to edit ) in front of any commits you want to fix. Once you save, Git will replay the listed commits. For each commit you want to reword , Git will drop you back into your editor. For each commit you want to edit, Git drops you into the shell. If you\u2019re in the shell: Change the commit in any way you like. git commit --amend git rebase --continue Most of this sequence will be explained to you by the output of the various commands as you go. It\u2019s very easy, you don\u2019t need to memorise it \u2013 just remember that git rebase --interactive lets you correct commits no matter how long ago they were.","title":"Edit an incorrect commit message in Git"},{"location":"git/history/#changing-the-whole-history","text":"You may want to rebase from the beginning of your repository. For doing that the --root flag is very useful: git rebase -i --root","title":"Changing the whole history"},{"location":"git/history/#re-creating-the-first-commit","text":"git checkout -b new-master git reset --hard <First commit SHA> git update-ref -d HEAD # Now remove all files from stage git commit --allow-empty git merge --no-ff <other branch> Using the help from How to revert initial git commit? - Stack Overflow","title":"Re-creating the first commit"},{"location":"git/releasing/","text":"Changelog of what has been added to your project since your last release It\u2019s time to email your mailing list of people who want to know what\u2019s happening in your project. $ git shortlog --no-merges base...latest More info at The Shortlog .","title":"Releasing"},{"location":"git/releasing/#changelog-of-what-has-been-added-to-your-project-since-your-last-release","text":"It\u2019s time to email your mailing list of people who want to know what\u2019s happening in your project. $ git shortlog --no-merges base...latest More info at The Shortlog .","title":"Changelog of what has been added to your project since your last release"},{"location":"git/submodules/","text":"Getting all submodules recursively git submodule foreach --recursive git submodule update --init","title":"Submodules"},{"location":"git/submodules/#getting-all-submodules-recursively","text":"git submodule foreach --recursive git submodule update --init","title":"Getting all submodules recursively"},{"location":"git/undoing/","text":"Undoing mistakes Find and restore a deleted file With the help of StackOverflow : Find the last commit that affected the given path. As the file isn't in the HEAD commit, this commit must have deleted it. git rev-list -n 1 HEAD -- <file_path> Then checkout the version at the commit before, using the caret (^) symbol: git checkout <deleting_commit>^ -- <file_path> Or in one command, if $file is the file in question. git checkout $(git rev-list -n 1 HEAD -- \"$file\")^ -- \"$file\" HINT: Use git log --diff-filter=D --summary to get all the commits which have deleted files and the files deleted; HINT 2: from here How to search the contents of deleted files Lets say I don\u2019t remember the filename of that file I deleted in a fit of cleanup passion. I do remember the name of one of the functions in it though. Here is how to deal with that. Search the contents of all files that have ever existed in git for a string: git log --summary -S<string> [<path/to/file>] [--since=2009.1.1] [--until=2010.1.1] Another way to do this: git rev-list --all | xargs git grep 'string' Undoing a git rebase Sometimes we want to undo a bad git rebase , hints from StackOverflow : First, we have to discover where is the head commit of the branch as it was immediately before the rebase started in the reflog: git reflog or git log -g Then, reset the current branch to it (with the usual caveats about being absolutely sure before reseting with the --hard option): # Suppose the old commit was HEAD@{5} in the ref log git reset --hard HEAD@{5} HINT: Just in case, make a backup first: git tag BACKUP . You can return to it if something goes wrong: git reset --hard BACKUP Desfazendo o \u00faltimo commit git reset --soft HEAD~1 Desfazendo o primeiro commit de um reposit\u00f3rio git update-ref -d HEAD Undo a git merge From Undo a git merge : git reset --hard commit_sha # ou git reset --hard HEAD~5 #will get you back 5 commits. # ou git reset --merge ORIG_HEAD How to revert a merge that is already pushed to remote? From this StackOverflow hint : git revert merge_sha -m [1,2] To discover if you have to use 1 or 2 do a git log on the merge_sha, then 1 will represent the left SHA and 2 the right SHA that appear in the 'Merge' line. Removing sensitive files from old commits From Remove sensitive data - User Documentation : git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA' --prune-empty --tag-name-filter cat -- --all Then, to remove the newly generated 'refs/original' reference and clear the reflog and do a garbage collect: git for-each-ref --format='delete %(refname)' refs/original | git update-ref --stdin git reflog expire --expire=now --all git gc --prune=now Going way back to the origin of time git checkout --orphan branch_name","title":"Undoing Mistakes"},{"location":"git/undoing/#find-and-restore-a-deleted-file","text":"With the help of StackOverflow : Find the last commit that affected the given path. As the file isn't in the HEAD commit, this commit must have deleted it. git rev-list -n 1 HEAD -- <file_path> Then checkout the version at the commit before, using the caret (^) symbol: git checkout <deleting_commit>^ -- <file_path> Or in one command, if $file is the file in question. git checkout $(git rev-list -n 1 HEAD -- \"$file\")^ -- \"$file\" HINT: Use git log --diff-filter=D --summary to get all the commits which have deleted files and the files deleted; HINT 2: from here How to search the contents of deleted files Lets say I don\u2019t remember the filename of that file I deleted in a fit of cleanup passion. I do remember the name of one of the functions in it though. Here is how to deal with that. Search the contents of all files that have ever existed in git for a string: git log --summary -S<string> [<path/to/file>] [--since=2009.1.1] [--until=2010.1.1] Another way to do this: git rev-list --all | xargs git grep 'string'","title":"Find and restore a deleted file"},{"location":"git/undoing/#undoing-a-git-rebase","text":"Sometimes we want to undo a bad git rebase , hints from StackOverflow : First, we have to discover where is the head commit of the branch as it was immediately before the rebase started in the reflog: git reflog or git log -g Then, reset the current branch to it (with the usual caveats about being absolutely sure before reseting with the --hard option): # Suppose the old commit was HEAD@{5} in the ref log git reset --hard HEAD@{5} HINT: Just in case, make a backup first: git tag BACKUP . You can return to it if something goes wrong: git reset --hard BACKUP","title":"Undoing a git rebase"},{"location":"git/undoing/#desfazendo-o-ultimo-commit","text":"git reset --soft HEAD~1","title":"Desfazendo o \u00faltimo commit"},{"location":"git/undoing/#desfazendo-o-primeiro-commit-de-um-repositorio","text":"git update-ref -d HEAD","title":"Desfazendo o primeiro commit de um reposit\u00f3rio"},{"location":"git/undoing/#undo-a-git-merge","text":"From Undo a git merge : git reset --hard commit_sha # ou git reset --hard HEAD~5 #will get you back 5 commits. # ou git reset --merge ORIG_HEAD","title":"Undo a git merge"},{"location":"git/undoing/#how-to-revert-a-merge-that-is-already-pushed-to-remote","text":"From this StackOverflow hint : git revert merge_sha -m [1,2] To discover if you have to use 1 or 2 do a git log on the merge_sha, then 1 will represent the left SHA and 2 the right SHA that appear in the 'Merge' line.","title":"How to revert a merge that is already pushed to remote?"},{"location":"git/undoing/#removing-sensitive-files-from-old-commits","text":"From Remove sensitive data - User Documentation : git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA' --prune-empty --tag-name-filter cat -- --all Then, to remove the newly generated 'refs/original' reference and clear the reflog and do a garbage collect: git for-each-ref --format='delete %(refname)' refs/original | git update-ref --stdin git reflog expire --expire=now --all git gc --prune=now","title":"Removing sensitive files from old commits"},{"location":"git/undoing/#going-way-back-to-the-origin-of-time","text":"git checkout --orphan branch_name","title":"Going way back to the origin of time"},{"location":"html/hints/","text":"Draw boxes around elements From: outline | CSS-Tricks *{ outline: 1px solid red; } It is often used for accessibility reasons, to emphasize a link when tabbed to without affecting positioning and in a differnet way than hover. Or, to see/debug how your boxes are positioned.","title":"Hints"},{"location":"html/hints/#draw-boxes-around-elements","text":"From: outline | CSS-Tricks *{ outline: 1px solid red; } It is often used for accessibility reasons, to emphasize a link when tabbed to without affecting positioning and in a differnet way than hover. Or, to see/debug how your boxes are positioned.","title":"Draw boxes around elements"},{"location":"linux/","text":"Dicas Linux How do I list all cron jobs for all users? From How do I list all cron jobs for all users? : # As root: for user in $(cut -f1 -d: /etc/passwd); do echo $user; crontab -u $user -l; done How to create a CPU spike with a bash command From How to create a CPU spike with a bash command : dd if=/dev/zero of=/dev/null To run more of those to put load on more cores, try to fork it: fulload() { dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null & }; fulload; read; killall dd Repeat the command in the curly brackets as many times as the number of threads you want to produce (here 4 threads). Simple enter hit will stop it (just make sure no other dd is running on this user or you kill it too). Rsync Pegando e enviando arquivos para a Amazon rsync -avz --progress -e \"ssh -i chave.pem\" ubuntu@ip:arquivo . Apenas arquivos novos Dicas aqui rsync --update -raz --progress <origem> <destino> How to gzip a directory, transfer via scp, and decompress in one command? rsync -az --progress source_dir/* remote_host:/destination_dir # Show progress bar #or: tar -zc path/to/source | ssh user@remote tar -zxC path/to/destination # Doesn't show progress bar Encontrando arquivos com setuid ativado Com ajuda , conseguimos encontrar todos os arquivos que est\u00e3o com setuid ativado. Isso foi \u00fatil para resolver um problema que estava dando no SAS devido ao fato dos bin n\u00e3o estarem setados com ele: find . -xdev \\( -perm -4000 \\) -type f -print0 | xargs -0 ls -l Para se setar o setuid basta se adicionar qual bit ser\u00e1 ser\u00e1 setado como steuid (u,g,o): chmod 4444 arquivo # ou chmod 2444 arquivo # ou chmod 1444 arquivo Mouse Quando o touchpad parar de funcionar basta executar estes dois comandos: # Como root: modprobe -r psmouse modprobe psmouse Sort Sort com delimitador diferente de espa\u00e7os sort -t: myFile Sort n-\u00e9sima coluna sort -k3,3 myFile Sort com ordena\u00e7\u00e3o num\u00e9rica de verdade ( 9 < 100 ) sort -n myFile Ativando swap Ativando swap, seguindo o tutorial da DigitalOcean : #!/usr/bin/env bash if [ $(id -u) -ne 0 ]; then echo \"Run as root\"; exit 1; fi free -m fallocate -l 4G /swapfile chmod 600 /swapfile mkswap /swapfile swapon /swapfile swapon -s free -m Loop com arquivos que t\u00eam espa\u00e7os no nome Dicas extra\u00eddas daqui e daqui . find . -print0 | while read -d $'\\0' file; do cp -v \"$file\" /tmp; done find . -type f -name '*.*' -printf '%p\\0' | tar --null -uf archive.tar -T - Descobrindo a placa de v\u00eddeo Para se decobrir qual placa de v\u00eddeo estamos usando podemos utilizar o lspci como descrito aqui e aqui : lspci -v Copying Avoid copy if files exist in destination cp -R -u -p /source /destination Due to these options: -p same as --preserve=mode,ownership,timestamps --preserve[=ATTR_LIST] preserve the specified attributes (default: mode,ownership,timestamps), if possible additional attributes: context, links, xattr, all -R, -r, --recursive copy directories recursively --reflink[=WHEN] control clone/CoW copies. See below --remove-destination remove each existing destination file before attempting to open it (contrast with --force) --sparse=WHEN control creation of sparse files. See below --strip-trailing-slashes remove any trailing slashes from each SOURCE argument -u, --update copy only when the SOURCE file is newer than the destination file or when the destination file is missing Displaying Today\u2019s Files Only find -maxdepth 1 -type f -mtime -1 How to zip files that are listed in a text file cat input.txt | zip filename.zip -@ Desabilitando um usu\u00e1rio, mas sem apag\u00e1-lo usermod --expiredate 1 [LOGIN] passwd -l [LOGIN] IPTables (Firewall) Algumas dicas interessantes: Apagando uma regra do firewall por linha Um bom tutorial explicando como funciona Um tutorial simples Listando as regras, com portas e n\u00famero das linhas: iptables -L -n --line-numbers Apagando uma linha espec\u00edfica: iptables -D INPUT [num] Adicionando regra para novas conex\u00f5es: iptables -A INPUT -m state --state NEW -p tcp --dport [porta] -j ACCEPT Regra para se rejeitar demais conex\u00f5es: iptables -A INPUT -j REJECT --reject-with icmp-host-prohibited iptables -A INPUT -j DROP Bloqueando acesso de sa\u00edda (upload) de um IP: iptables -A OUTPUT -d [ip-address] -j DROP Bloqueando sa\u00edda por porta: iptables -A OUTPUT -p tcp --dport [port] -j DROP To block tcp port for an IP address: iptables -A OUTPUT -p tcp -d [ip address] --dport [port] -j DROP How to run multiple simultaneous X Window sessions From Linux Commando Switch to a virtual terminal By default, six virtual text terminals are available to you (Ctrl+Alt+F1 to F6) Press Control+Alt+F1 to go to virtual terminal 1 Login as her Execute the following command startx -- :1 This starts another X session using the first free graphical console. By default, 6 X consoles are available (Ctrl+Alt+F7 to F12) Your own existing X session is Ctrl+Alt+F7 The next free X console is therefore Ctrl+Alt+F8 To switch from her X session to yours, and vice versa, press Ctrl+Alt+F7 and Ctrl+Alt+F8 respectively. You may use the above procedure to create up to 5 additional X sessions (Ctrl+Alt+F8 to Ctrl+Alt+F12). For each additional X session, increment the console number in both step 1 and 3. For instance, switch to virtual terminal 2 (Control+Alt+F2) to execute the command startx -- :2 . Create another SSH server Sometimes you need to debug your SSH connection, for those times you can open another SSH server and watch what is happening inside it. /usr/sbin/sshd -d -p 2222 And when (from other machine) need to connect to it: ssh -p 2222 user@machine No wired connection after suspend (Not tested yet) From this Ubuntu Forum thread : Get the Kernel module with lspci -k | grep -iA3 NETWORK or lspci -k | grep -iA3 ethernet Edit /etc/pm/config.d/modules Add SUSPEND_MODULES=\"<the_kernel_module_for_your_network_card>\" Or in one shot: lspci -k | grep -iA3 ethernet | grep -i \"Kernel driver\" | awk '{print $NF}' Knowing that your Kernel module is 8139: Unload 8139: sudo modprobe -r 8139 Suspend: sudo pm-suspend Resume the computer from suspend Reload the module: sudo modprobe 8139 Test the network connection. Validating RSA public keys ssh-keygen -l -f key.pub More info on How do I validate a RSA ssh public key file (id_rsa.pub)? - Server Fault Getting you own key from the command line To get your fingerprint ssh-add -l To get your public key ssh-add -L This is useful when you are inside a Docker container that has your keys forwarded to it using: -v $(dirname $SSH_AUTH_SOCK):$(dirname $SSH_AUTH_SOCK) -e SSH_AUTH_SOCK=$SSH_AUTH_SOCK Getting home directory by username eval echo ~$USER How do I find out which process is eating up my bandwidth From networking - How do I find out which process is eating up my bandwidth? - Ask Ubuntu : sudo apt-get install -y nethogs sudo nethogs eth0 Another way: Run sudo iftop Push S or D to display Source and Destination ports Then use netstat -tup to discover the process Discovering available versions of a package to install Discover which versions are available using one of the following commands: apt-cache policy <package-name> apt-cache madison <package-name> Then, to install the chosen version: sudo apt-get install package=version Copying text from the command line xclip -sel clip < ~/.ssh/id_rsa.pub Which package an executable came from? With the help of apt - How can I tell which package an executable came from? - Ask Ubuntu there are two alternatives: sudo apt-get install apt-file # It takes a bit of time sudo apt-file update apt-file search filename OR dpkg-query -S [executable] Finding the size of files older than X days With the great help of StackOverflow : find . -mtime +180 -exec ls -lrt {} \\; | awk '{ total += $5}; END { print total }' It will give the total size of files, in bytes. But if you want to see the sizes in a more human readable way: find . -mtime +180 -exec ls -lrt {} \\; | awk '{ total += $5}; END { print total }' | awk '{ split( \"KB MB GB\" , v ); s=0; while( $1>1024 ){ $1/=1024; s++ } print int($1) v[s] }'","title":"General"},{"location":"linux/#dicas-linux","text":"","title":"Dicas Linux"},{"location":"linux/#how-do-i-list-all-cron-jobs-for-all-users","text":"From How do I list all cron jobs for all users? : # As root: for user in $(cut -f1 -d: /etc/passwd); do echo $user; crontab -u $user -l; done","title":"How do I list all cron jobs for all users?"},{"location":"linux/#how-to-create-a-cpu-spike-with-a-bash-command","text":"From How to create a CPU spike with a bash command : dd if=/dev/zero of=/dev/null To run more of those to put load on more cores, try to fork it: fulload() { dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null & }; fulload; read; killall dd Repeat the command in the curly brackets as many times as the number of threads you want to produce (here 4 threads). Simple enter hit will stop it (just make sure no other dd is running on this user or you kill it too).","title":"How to create a CPU spike with a bash command"},{"location":"linux/#rsync","text":"","title":"Rsync"},{"location":"linux/#pegando-e-enviando-arquivos-para-a-amazon","text":"rsync -avz --progress -e \"ssh -i chave.pem\" ubuntu@ip:arquivo .","title":"Pegando e enviando arquivos para a Amazon"},{"location":"linux/#apenas-arquivos-novos","text":"Dicas aqui rsync --update -raz --progress <origem> <destino>","title":"Apenas arquivos novos"},{"location":"linux/#how-to-gzip-a-directory-transfer-via-scp-and-decompress-in-one-command","text":"rsync -az --progress source_dir/* remote_host:/destination_dir # Show progress bar #or: tar -zc path/to/source | ssh user@remote tar -zxC path/to/destination # Doesn't show progress bar","title":"How to gzip a directory, transfer via scp, and decompress in one command?"},{"location":"linux/#encontrando-arquivos-com-setuid-ativado","text":"Com ajuda , conseguimos encontrar todos os arquivos que est\u00e3o com setuid ativado. Isso foi \u00fatil para resolver um problema que estava dando no SAS devido ao fato dos bin n\u00e3o estarem setados com ele: find . -xdev \\( -perm -4000 \\) -type f -print0 | xargs -0 ls -l Para se setar o setuid basta se adicionar qual bit ser\u00e1 ser\u00e1 setado como steuid (u,g,o): chmod 4444 arquivo # ou chmod 2444 arquivo # ou chmod 1444 arquivo","title":"Encontrando arquivos com setuid ativado"},{"location":"linux/#mouse","text":"Quando o touchpad parar de funcionar basta executar estes dois comandos: # Como root: modprobe -r psmouse modprobe psmouse","title":"Mouse"},{"location":"linux/#sort","text":"","title":"Sort"},{"location":"linux/#sort-com-delimitador-diferente-de-espacos","text":"sort -t: myFile","title":"Sort com delimitador diferente de espa\u00e7os"},{"location":"linux/#sort-n-esima-coluna","text":"sort -k3,3 myFile","title":"Sort n-\u00e9sima coluna"},{"location":"linux/#sort-com-ordenacao-numerica-de-verdade-9-100","text":"sort -n myFile","title":"Sort com ordena\u00e7\u00e3o num\u00e9rica de verdade ( 9 &lt; 100 )"},{"location":"linux/#ativando-swap","text":"Ativando swap, seguindo o tutorial da DigitalOcean : #!/usr/bin/env bash if [ $(id -u) -ne 0 ]; then echo \"Run as root\"; exit 1; fi free -m fallocate -l 4G /swapfile chmod 600 /swapfile mkswap /swapfile swapon /swapfile swapon -s free -m","title":"Ativando swap"},{"location":"linux/#loop-com-arquivos-que-tem-espacos-no-nome","text":"Dicas extra\u00eddas daqui e daqui . find . -print0 | while read -d $'\\0' file; do cp -v \"$file\" /tmp; done find . -type f -name '*.*' -printf '%p\\0' | tar --null -uf archive.tar -T -","title":"Loop com arquivos que t\u00eam espa\u00e7os no nome"},{"location":"linux/#descobrindo-a-placa-de-video","text":"Para se decobrir qual placa de v\u00eddeo estamos usando podemos utilizar o lspci como descrito aqui e aqui : lspci -v","title":"Descobrindo a placa de v\u00eddeo"},{"location":"linux/#copying","text":"","title":"Copying"},{"location":"linux/#avoid-copy-if-files-exist-in-destination","text":"cp -R -u -p /source /destination Due to these options: -p same as --preserve=mode,ownership,timestamps --preserve[=ATTR_LIST] preserve the specified attributes (default: mode,ownership,timestamps), if possible additional attributes: context, links, xattr, all -R, -r, --recursive copy directories recursively --reflink[=WHEN] control clone/CoW copies. See below --remove-destination remove each existing destination file before attempting to open it (contrast with --force) --sparse=WHEN control creation of sparse files. See below --strip-trailing-slashes remove any trailing slashes from each SOURCE argument -u, --update copy only when the SOURCE file is newer than the destination file or when the destination file is missing","title":"Avoid copy if files exist in destination"},{"location":"linux/#displaying-todays-files-only","text":"find -maxdepth 1 -type f -mtime -1","title":"Displaying Today\u2019s Files Only"},{"location":"linux/#how-to-zip-files-that-are-listed-in-a-text-file","text":"cat input.txt | zip filename.zip -@","title":"How to zip files that are listed in a text file"},{"location":"linux/#desabilitando-um-usuario-mas-sem-apaga-lo","text":"usermod --expiredate 1 [LOGIN] passwd -l [LOGIN]","title":"Desabilitando um usu\u00e1rio, mas sem apag\u00e1-lo"},{"location":"linux/#iptables-firewall","text":"Algumas dicas interessantes: Apagando uma regra do firewall por linha Um bom tutorial explicando como funciona Um tutorial simples Listando as regras, com portas e n\u00famero das linhas: iptables -L -n --line-numbers Apagando uma linha espec\u00edfica: iptables -D INPUT [num] Adicionando regra para novas conex\u00f5es: iptables -A INPUT -m state --state NEW -p tcp --dport [porta] -j ACCEPT Regra para se rejeitar demais conex\u00f5es: iptables -A INPUT -j REJECT --reject-with icmp-host-prohibited iptables -A INPUT -j DROP Bloqueando acesso de sa\u00edda (upload) de um IP: iptables -A OUTPUT -d [ip-address] -j DROP Bloqueando sa\u00edda por porta: iptables -A OUTPUT -p tcp --dport [port] -j DROP To block tcp port for an IP address: iptables -A OUTPUT -p tcp -d [ip address] --dport [port] -j DROP","title":"IPTables (Firewall)"},{"location":"linux/#how-to-run-multiple-simultaneous-x-window-sessions","text":"From Linux Commando Switch to a virtual terminal By default, six virtual text terminals are available to you (Ctrl+Alt+F1 to F6) Press Control+Alt+F1 to go to virtual terminal 1 Login as her Execute the following command startx -- :1 This starts another X session using the first free graphical console. By default, 6 X consoles are available (Ctrl+Alt+F7 to F12) Your own existing X session is Ctrl+Alt+F7 The next free X console is therefore Ctrl+Alt+F8 To switch from her X session to yours, and vice versa, press Ctrl+Alt+F7 and Ctrl+Alt+F8 respectively. You may use the above procedure to create up to 5 additional X sessions (Ctrl+Alt+F8 to Ctrl+Alt+F12). For each additional X session, increment the console number in both step 1 and 3. For instance, switch to virtual terminal 2 (Control+Alt+F2) to execute the command startx -- :2 .","title":"How to run multiple simultaneous X Window sessions"},{"location":"linux/#create-another-ssh-server","text":"Sometimes you need to debug your SSH connection, for those times you can open another SSH server and watch what is happening inside it. /usr/sbin/sshd -d -p 2222 And when (from other machine) need to connect to it: ssh -p 2222 user@machine","title":"Create another SSH server"},{"location":"linux/#no-wired-connection-after-suspend","text":"(Not tested yet) From this Ubuntu Forum thread : Get the Kernel module with lspci -k | grep -iA3 NETWORK or lspci -k | grep -iA3 ethernet Edit /etc/pm/config.d/modules Add SUSPEND_MODULES=\"<the_kernel_module_for_your_network_card>\" Or in one shot: lspci -k | grep -iA3 ethernet | grep -i \"Kernel driver\" | awk '{print $NF}' Knowing that your Kernel module is 8139: Unload 8139: sudo modprobe -r 8139 Suspend: sudo pm-suspend Resume the computer from suspend Reload the module: sudo modprobe 8139 Test the network connection.","title":"No wired connection after suspend"},{"location":"linux/#validating-rsa-public-keys","text":"ssh-keygen -l -f key.pub More info on How do I validate a RSA ssh public key file (id_rsa.pub)? - Server Fault","title":"Validating RSA public keys"},{"location":"linux/#getting-you-own-key-from-the-command-line","text":"To get your fingerprint ssh-add -l To get your public key ssh-add -L This is useful when you are inside a Docker container that has your keys forwarded to it using: -v $(dirname $SSH_AUTH_SOCK):$(dirname $SSH_AUTH_SOCK) -e SSH_AUTH_SOCK=$SSH_AUTH_SOCK","title":"Getting you own key from the command line"},{"location":"linux/#getting-home-directory-by-username","text":"eval echo ~$USER","title":"Getting home directory by username"},{"location":"linux/#how-do-i-find-out-which-process-is-eating-up-my-bandwidth","text":"From networking - How do I find out which process is eating up my bandwidth? - Ask Ubuntu : sudo apt-get install -y nethogs sudo nethogs eth0 Another way: Run sudo iftop Push S or D to display Source and Destination ports Then use netstat -tup to discover the process","title":"How do I find out which process is eating up my bandwidth"},{"location":"linux/#discovering-available-versions-of-a-package-to-install","text":"Discover which versions are available using one of the following commands: apt-cache policy <package-name> apt-cache madison <package-name> Then, to install the chosen version: sudo apt-get install package=version","title":"Discovering available versions of a package to install"},{"location":"linux/#copying-text-from-the-command-line","text":"xclip -sel clip < ~/.ssh/id_rsa.pub","title":"Copying text from the command line"},{"location":"linux/#which-package-an-executable-came-from","text":"With the help of apt - How can I tell which package an executable came from? - Ask Ubuntu there are two alternatives: sudo apt-get install apt-file # It takes a bit of time sudo apt-file update apt-file search filename OR dpkg-query -S [executable]","title":"Which package an executable came from?"},{"location":"linux/#finding-the-size-of-files-older-than-x-days","text":"With the great help of StackOverflow : find . -mtime +180 -exec ls -lrt {} \\; | awk '{ total += $5}; END { print total }' It will give the total size of files, in bytes. But if you want to see the sizes in a more human readable way: find . -mtime +180 -exec ls -lrt {} \\; | awk '{ total += $5}; END { print total }' | awk '{ split( \"KB MB GB\" , v ); s=0; while( $1>1024 ){ $1/=1024; s++ } print int($1) v[s] }'","title":"Finding the size of files older than X days"},{"location":"linux/awk/","text":"Print n-th column to last column From this StackOverflow thread , this is how you can print from the n-th column to the last column of a line, using awk. e.g. form the third column: awk '{ print substr($0, index($0,$3)) }' Use cases This is useful with you want to analyse your own command's history, like: history | awk '{print substr($0, index($0,$2))}'","title":"awk"},{"location":"linux/awk/#print-n-th-column-to-last-column","text":"From this StackOverflow thread , this is how you can print from the n-th column to the last column of a line, using awk. e.g. form the third column: awk '{ print substr($0, index($0,$3)) }'","title":"Print n-th column to last column"},{"location":"linux/awk/#use-cases","text":"This is useful with you want to analyse your own command's history, like: history | awk '{print substr($0, index($0,$2))}'","title":"Use cases"},{"location":"linux/deleting/","text":"Wiping a file #!/usr/bin/env bash set -euo pipefail IFS=$'\\n\\t' if [[ \"$#\" -ne 1 ]]; then echo \"Please use this command with the filename you want to wipe. Like:\" echo \"$0 file.txt\" exit 1 fi _file=\"${1}\" _times=8 filesize=$(stat -c %s \"${_file}\") # Zeroes dd if=/dev/zero of=\"${_file}\" bs=\"${filesize}\" count=1 conv=notrunc # Ones dd if=<(yes $'\\xFF' | tr -d '\\n') of=\"${_file}\" bs=\"${filesize}\" count=1 conv=notrunc # Random stuff for (( i = 0; i < _times; i++ )); do dd if=/dev/urandom of=\"${_file}\" bs=\"${filesize}\" count=1 conv=notrunc done Made possible with the help of Securely Wipe a File with DD and How do I get an equivalent of /dev/one in Linux","title":"Deleting"},{"location":"linux/deleting/#wiping-a-file","text":"#!/usr/bin/env bash set -euo pipefail IFS=$'\\n\\t' if [[ \"$#\" -ne 1 ]]; then echo \"Please use this command with the filename you want to wipe. Like:\" echo \"$0 file.txt\" exit 1 fi _file=\"${1}\" _times=8 filesize=$(stat -c %s \"${_file}\") # Zeroes dd if=/dev/zero of=\"${_file}\" bs=\"${filesize}\" count=1 conv=notrunc # Ones dd if=<(yes $'\\xFF' | tr -d '\\n') of=\"${_file}\" bs=\"${filesize}\" count=1 conv=notrunc # Random stuff for (( i = 0; i < _times; i++ )); do dd if=/dev/urandom of=\"${_file}\" bs=\"${filesize}\" count=1 conv=notrunc done Made possible with the help of Securely Wipe a File with DD and How do I get an equivalent of /dev/one in Linux","title":"Wiping a file"},{"location":"linux/dropbox/","text":"How to use multiple dropbox accounts on the same computer From How Can I Use Multiple Dropbox Accounts on the Same Computer? - The Unofficial Dropbox Wiki : First, create an alternate (hidden) directory for your second Dropbox account: mkdir ~/.dropbox-alt Then run the Dropbox installer in \u201cfirst use\u201d mode, specifying the alternate home directory as follows: HOME=~/.dropbox-alt dropbox start -i To run the \u201calternate\u201d Dropbox manually for testing: HOME=~/.dropbox-alt ~/.dropbox-alt/.dropbox-dist/dropboxd Create a shell script to start the alternate Dropbox daemon: cd ~/.dropbox-alt # change to the \"alternate\" Dropbox directory # which was created above gedit dropbox-alt.sh # create a new file with the 'gedit' text editor Copy and paste the following lines into the editor: #!/bin/bash HOME=$HOME/.dropbox-alt # set the new home dir cd # to the \"new\" $HOME ./.dropbox-dist/dropboxd & # and run dropboxd Set the dropbox-alt.sh script to auto-start on login!","title":"Dropxbox"},{"location":"linux/dropbox/#how-to-use-multiple-dropbox-accounts-on-the-same-computer","text":"From How Can I Use Multiple Dropbox Accounts on the Same Computer? - The Unofficial Dropbox Wiki : First, create an alternate (hidden) directory for your second Dropbox account: mkdir ~/.dropbox-alt Then run the Dropbox installer in \u201cfirst use\u201d mode, specifying the alternate home directory as follows: HOME=~/.dropbox-alt dropbox start -i To run the \u201calternate\u201d Dropbox manually for testing: HOME=~/.dropbox-alt ~/.dropbox-alt/.dropbox-dist/dropboxd Create a shell script to start the alternate Dropbox daemon: cd ~/.dropbox-alt # change to the \"alternate\" Dropbox directory # which was created above gedit dropbox-alt.sh # create a new file with the 'gedit' text editor Copy and paste the following lines into the editor: #!/bin/bash HOME=$HOME/.dropbox-alt # set the new home dir cd # to the \"new\" $HOME ./.dropbox-dist/dropboxd & # and run dropboxd Set the dropbox-alt.sh script to auto-start on login!","title":"How to use multiple dropbox accounts on the same computer"},{"location":"linux/file_handling/","text":"Find and Replace string in all files From Find and Replace string in all files recursive using grep and sed : grep -rl $oldstring /path/to/folder | xargs sed -i s@$oldstring@$newstring@g","title":"File Handling"},{"location":"linux/file_handling/#find-and-replace-string-in-all-files","text":"From Find and Replace string in all files recursive using grep and sed : grep -rl $oldstring /path/to/folder | xargs sed -i s@$oldstring@$newstring@g","title":"Find and Replace string in all files"},{"location":"linux/format_conversions/","text":"How to convert between formats m4a to mp3 ffmpeg -i <file>.m4a -acodec libmp3lame -ab 128k <file>.mp3 Automatically for file in *m4a; do echo ffmpeg -i $file -acodec libmp3lame -ab 128k ${file%.*}.mp3; done How to remove accent characters With the help of: http://www.linuxquestions.org/questions/linux-newbie-8/how-to-remove-accent-characters-4175431373/ find . -type f -iname \"*.py\" | while read file; do iconv -f UTF-8 -t ASCII//TRANSLIT $file > $file-tmp mv $file-tmp $file done","title":"Format Conversion"},{"location":"linux/format_conversions/#how-to-convert-between-formats","text":"","title":"How to convert between formats"},{"location":"linux/format_conversions/#m4a-to-mp3","text":"ffmpeg -i <file>.m4a -acodec libmp3lame -ab 128k <file>.mp3","title":"m4a to mp3"},{"location":"linux/format_conversions/#automatically","text":"for file in *m4a; do echo ffmpeg -i $file -acodec libmp3lame -ab 128k ${file%.*}.mp3; done","title":"Automatically"},{"location":"linux/format_conversions/#how-to-remove-accent-characters","text":"With the help of: http://www.linuxquestions.org/questions/linux-newbie-8/how-to-remove-accent-characters-4175431373/ find . -type f -iname \"*.py\" | while read file; do iconv -f UTF-8 -t ASCII//TRANSLIT $file > $file-tmp mv $file-tmp $file done","title":"How to remove accent characters"},{"location":"linux/hardware/","text":"Finding Hardware Information on Linux From How to find information about hardware? - Linux Mint Forums A more human readable output: inxi -Fx This one was super useful in discovering the name of the Motherboard I was using. For more detailed info: lshw","title":"Finding Hardware Information on Linux"},{"location":"linux/hardware/#finding-hardware-information-on-linux","text":"From How to find information about hardware? - Linux Mint Forums A more human readable output: inxi -Fx This one was super useful in discovering the name of the Motherboard I was using. For more detailed info: lshw","title":"Finding Hardware Information on Linux"},{"location":"linux/hibernation/","text":"Hibernation Problems After installing Linux Mint 20 Hibernation didn't work. To make it work I followed this post on how to update grub and merging this post's Action s of the com.ubuntu.enable-hibernate.pkla file. And creating the service to disable devices to wake up from hibernation as this SO guide , in my case I wanted to disable the keyboard from waking up the computer.","title":"Hibernation Problems"},{"location":"linux/hibernation/#hibernation-problems","text":"After installing Linux Mint 20 Hibernation didn't work. To make it work I followed this post on how to update grub and merging this post's Action s of the com.ubuntu.enable-hibernate.pkla file. And creating the service to disable devices to wake up from hibernation as this SO guide , in my case I wanted to disable the keyboard from waking up the computer.","title":"Hibernation Problems"},{"location":"linux/images/","text":"Merge/Join images on command line Requires ImageMagick: Vertical sprite: convert image1.png image2.png image3.png -append result/result-sprite.png Horizontal sprite: convert image1.png image2.png image3.png +append result/result-sprite.png","title":"Images"},{"location":"linux/images/#mergejoin-images-on-command-line","text":"Requires ImageMagick: Vertical sprite: convert image1.png image2.png image3.png -append result/result-sprite.png Horizontal sprite: convert image1.png image2.png image3.png +append result/result-sprite.png","title":"Merge/Join images on command line"},{"location":"linux/jq/","text":"Group AWS ECR images With the help of https://github.com/stedolan/jq/issues/274#issuecomment-64925860 aws ecr list-images --repository-name ${repository_name} | jq '.[] | group_by(.imageDigest) | map({\"digest\": .[0].imageDigest, \"tags\": map(.imageTag)})' This will display all the tags associated with the image digest.","title":"Jq"},{"location":"linux/jq/#group-aws-ecr-images","text":"With the help of https://github.com/stedolan/jq/issues/274#issuecomment-64925860 aws ecr list-images --repository-name ${repository_name} | jq '.[] | group_by(.imageDigest) | map({\"digest\": .[0].imageDigest, \"tags\": map(.imageTag)})' This will display all the tags associated with the image digest.","title":"Group AWS ECR images"},{"location":"linux/logs/","text":"Onde logs est\u00e3o localizados no Linux Logs de ssh /var/log/auth.log /var/log/secure journalctl -u sshd | tail -100","title":"Logs"},{"location":"linux/logs/#onde-logs-estao-localizados-no-linux","text":"","title":"Onde logs est\u00e3o localizados no Linux"},{"location":"linux/logs/#logs-de-ssh","text":"/var/log/auth.log /var/log/secure journalctl -u sshd | tail -100","title":"Logs de ssh"},{"location":"linux/monitoring/","text":"Simple monitoring with gkrellm On the remote (to be monitored computer): sudo sh -c 'apt-get update && apt-get install -y gkrellmd' On your local machine, create an SSH tunnel to the remote machine: ssh -N -f -L 19151:127.0.0.1:19150 user@remote_machine_ip Open gkrellm on your machine listening to the local port that will receive information: gkrellm -s 127.0.0.1 -P 19151 Help from https://totallynoob.com/server-monitoring-remote-monitor-a-server-with-gkrellm-via-ssh-tunnel/","title":"Monitoring"},{"location":"linux/monitoring/#simple-monitoring-with-gkrellm","text":"On the remote (to be monitored computer): sudo sh -c 'apt-get update && apt-get install -y gkrellmd' On your local machine, create an SSH tunnel to the remote machine: ssh -N -f -L 19151:127.0.0.1:19150 user@remote_machine_ip Open gkrellm on your machine listening to the local port that will receive information: gkrellm -s 127.0.0.1 -P 19151 Help from https://totallynoob.com/server-monitoring-remote-monitor-a-server-with-gkrellm-via-ssh-tunnel/","title":"Simple monitoring with gkrellm"},{"location":"linux/network/","text":"Limiting the bandwith for a program trickle -s -d 100 -u 100 <program> Uses trickle to limit the bandwith that will be used by a program. Discover other machines on your network Grab your IP with a ifconfig then later use a nmap to scan your network, something like: sudo nmap -sP 10.253.0.0/16 Updating the DNS being used Check which DNS you are using: nslookup google.com It is using the IPs that appear on Server and Address . To change it: Add nameserver 8.8.8.8 nameserver 1.1.1.1 to /etc/resolvconf/resolv.conf.d/head and sudo resolvconf -u Validate that the DNS has been updated: nslookup google.com Thanks to https://www.linuxquestions.org/questions/linux-networking-3/how-to-change-the-dns-server-in-linux-mint-and-should-i-4175597949/#post5658301","title":"Network"},{"location":"linux/network/#limiting-the-bandwith-for-a-program","text":"trickle -s -d 100 -u 100 <program> Uses trickle to limit the bandwith that will be used by a program.","title":"Limiting the bandwith for a program"},{"location":"linux/network/#discover-other-machines-on-your-network","text":"Grab your IP with a ifconfig then later use a nmap to scan your network, something like: sudo nmap -sP 10.253.0.0/16","title":"Discover other machines on your network"},{"location":"linux/network/#updating-the-dns-being-used","text":"Check which DNS you are using: nslookup google.com It is using the IPs that appear on Server and Address . To change it: Add nameserver 8.8.8.8 nameserver 1.1.1.1 to /etc/resolvconf/resolv.conf.d/head and sudo resolvconf -u Validate that the DNS has been updated: nslookup google.com Thanks to https://www.linuxquestions.org/questions/linux-networking-3/how-to-change-the-dns-server-in-linux-mint-and-should-i-4175597949/#post5658301","title":"Updating the DNS being used"},{"location":"linux/pass/","text":"Installing sudo apt-get install -y pass Do not forget to configure the completion for your preferred shell. Before using it Before using pass we need to have a key generated by GnuPG with: gpg2 --gen-key As it may take a lot of time, specially for it to gather enough entropy, one can use this solution from StackOverflow : Anytime I've seen it (gpg --gen-key) hang like this, I log in to another shell and start a \"dd if=/dev/sda of=/dev/zero\" and it takes off after a few seconds / minutes. By my experience, even using this method it still took around 10 minutes for the key generation. Exporting Keys If you need to export your keys to another machine one can follow the commands that are described in this StackOverflow question . $ gpg --export-secret-keys > keyfile $ gpg2 --import keyfile Here they explicitly use different versions of GnuPG as the new versions of pass use gpg2 . Setting up According to the official site tutorial and the extended git example we can start using it like this: List your current available keys gpg2 --list-key And use one of those keys with pass pass init key@mail pass git init All files will be saved on ~/.password-store directory If you have somewhere to push your passwords pass git remote add origin the-place-you-will-push-to:branch Start inserting or generating your passwords pass generate A/B/mail@place.com 21 pass insert A/B/mail@place.com When you are finished saving your passwords push them pass git push -u --all More information on how to use pass can be found on its page and reading the man page . Reaffirming trust If you receive some error like this one after reimporting your key gpg: <KEY>: There is no assurance this key belongs to the named user gpg: [stdin]: encryption failed: Unusable public key you can do as suggest on this StackOverflow thread and do a gpg2 --edit-key <KEY> gpg> trust # Answer that you trust ultimately (5) # Answer yes","title":"Pass"},{"location":"linux/pass/#installing","text":"sudo apt-get install -y pass Do not forget to configure the completion for your preferred shell.","title":"Installing"},{"location":"linux/pass/#before-using-it","text":"Before using pass we need to have a key generated by GnuPG with: gpg2 --gen-key As it may take a lot of time, specially for it to gather enough entropy, one can use this solution from StackOverflow : Anytime I've seen it (gpg --gen-key) hang like this, I log in to another shell and start a \"dd if=/dev/sda of=/dev/zero\" and it takes off after a few seconds / minutes. By my experience, even using this method it still took around 10 minutes for the key generation.","title":"Before using it"},{"location":"linux/pass/#exporting-keys","text":"If you need to export your keys to another machine one can follow the commands that are described in this StackOverflow question . $ gpg --export-secret-keys > keyfile $ gpg2 --import keyfile Here they explicitly use different versions of GnuPG as the new versions of pass use gpg2 .","title":"Exporting Keys"},{"location":"linux/pass/#setting-up","text":"According to the official site tutorial and the extended git example we can start using it like this: List your current available keys gpg2 --list-key And use one of those keys with pass pass init key@mail pass git init All files will be saved on ~/.password-store directory If you have somewhere to push your passwords pass git remote add origin the-place-you-will-push-to:branch Start inserting or generating your passwords pass generate A/B/mail@place.com 21 pass insert A/B/mail@place.com When you are finished saving your passwords push them pass git push -u --all More information on how to use pass can be found on its page and reading the man page .","title":"Setting up"},{"location":"linux/pass/#reaffirming-trust","text":"If you receive some error like this one after reimporting your key gpg: <KEY>: There is no assurance this key belongs to the named user gpg: [stdin]: encryption failed: Unusable public key you can do as suggest on this StackOverflow thread and do a gpg2 --edit-key <KEY> gpg> trust # Answer that you trust ultimately (5) # Answer yes","title":"Reaffirming trust"},{"location":"linux/pdf/","text":"Reduce size of PDF files compression - How can I reduce the file size of a scanned PDF file? - Ask Ubuntu compression - How to reduce the size of a pdf file? - Ask Ubuntu Reducing PDF file-size in Linux | The Road to Elysium Bash Shell: Ignore Aliases and Functions When Running A Command Low quality options: gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -sOutputFile=new_file.pdf original_file.pdf gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -sOutputFile=new_file.pdf original_file.pdf The best balance was found in: gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -sOutputFile=new_file.pdf original_file.pdf Note: You may need to issue the command with a backslash in front of it if you use 'gs' as an alias: \\gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -sOutputFile=new_file.pdf original_file.pdf Splitting and merging PDF files With hints from: Linux Commando: Splitting up is easy for a PDF file Linux Commando: How to split up PDF files - part 2 Linux Commando: How to merge or split pdf files using convert sudo apt-get update && sudo apt-get install -y pdftk Splitting You can specify page ranges like this: pdftk myoldfile.pdf cat 1-2 4-5 output mynewfile.pdf pdftk has a few more tricks in its back pocket. For example, you can specify a burst operation to split each page in the input file into a separate output file. pdftk myoldfile.pdf burst By default, the output files are named pg_0001.pdf, pg_0002.pdf, etc. Merging pdftk is also capable of merging multiple pdf files into one pdf. pdftk pg_0001.pdf pg_0002.pdf pg_0004.pdf pg_0005.pdf output mynewfile.pdf That would merge the files corresponding to the first, second, fourth and fifth pages into a single output pdf. Joining/merging pdf pages/files into a single one Install pdfjam : sudo apt-get install -y pdfjam (Maybe, there is the need to install texlive-latex-recommended too) Merge files with: pdfjam Page1.pdf Page2.pdf --nup 2x1 --landscape --outfile Page1_2.pdf Merge pages from the same file: pdfjam file.pdf --nup 2x1 --landscape --outfile together.pdf All this was possible with the help of https://superuser.com/questions/366490/how-to-merge-multiple-pdf-files-onto-one-page-with-pdftk/750293#750293 Join png files into single PDF pdfjoin --a4paper --fitpaper false --rotateoversize false *.png Or convert *.png -compress jpeg -quality 50 result.pdf Thanks to: https://stackoverflow.com/questions/4778635/merging-png-images-into-one-pdf-file Convert PDFs into JPEGs All pages into the same file for i in *.pdf; do convert -density 600 -append $i ${i%.*}.jpg; done With the help of linux - How to merge images in command line? - Stack Overflow","title":"PDF"},{"location":"linux/pdf/#reduce-size-of-pdf-files","text":"compression - How can I reduce the file size of a scanned PDF file? - Ask Ubuntu compression - How to reduce the size of a pdf file? - Ask Ubuntu Reducing PDF file-size in Linux | The Road to Elysium Bash Shell: Ignore Aliases and Functions When Running A Command Low quality options: gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -sOutputFile=new_file.pdf original_file.pdf gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -sOutputFile=new_file.pdf original_file.pdf The best balance was found in: gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -sOutputFile=new_file.pdf original_file.pdf Note: You may need to issue the command with a backslash in front of it if you use 'gs' as an alias: \\gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -sOutputFile=new_file.pdf original_file.pdf","title":"Reduce size of PDF files"},{"location":"linux/pdf/#splitting-and-merging-pdf-files","text":"With hints from: Linux Commando: Splitting up is easy for a PDF file Linux Commando: How to split up PDF files - part 2 Linux Commando: How to merge or split pdf files using convert sudo apt-get update && sudo apt-get install -y pdftk","title":"Splitting and merging PDF files"},{"location":"linux/pdf/#splitting","text":"You can specify page ranges like this: pdftk myoldfile.pdf cat 1-2 4-5 output mynewfile.pdf pdftk has a few more tricks in its back pocket. For example, you can specify a burst operation to split each page in the input file into a separate output file. pdftk myoldfile.pdf burst By default, the output files are named pg_0001.pdf, pg_0002.pdf, etc.","title":"Splitting"},{"location":"linux/pdf/#merging","text":"pdftk is also capable of merging multiple pdf files into one pdf. pdftk pg_0001.pdf pg_0002.pdf pg_0004.pdf pg_0005.pdf output mynewfile.pdf That would merge the files corresponding to the first, second, fourth and fifth pages into a single output pdf.","title":"Merging"},{"location":"linux/pdf/#joiningmerging-pdf-pagesfiles-into-a-single-one","text":"Install pdfjam : sudo apt-get install -y pdfjam (Maybe, there is the need to install texlive-latex-recommended too) Merge files with: pdfjam Page1.pdf Page2.pdf --nup 2x1 --landscape --outfile Page1_2.pdf Merge pages from the same file: pdfjam file.pdf --nup 2x1 --landscape --outfile together.pdf All this was possible with the help of https://superuser.com/questions/366490/how-to-merge-multiple-pdf-files-onto-one-page-with-pdftk/750293#750293","title":"Joining/merging pdf pages/files into a single one"},{"location":"linux/pdf/#join-png-files-into-single-pdf","text":"pdfjoin --a4paper --fitpaper false --rotateoversize false *.png Or convert *.png -compress jpeg -quality 50 result.pdf Thanks to: https://stackoverflow.com/questions/4778635/merging-png-images-into-one-pdf-file","title":"Join png files into single PDF"},{"location":"linux/pdf/#convert-pdfs-into-jpegs","text":"","title":"Convert PDFs into JPEGs"},{"location":"linux/pdf/#all-pages-into-the-same-file","text":"for i in *.pdf; do convert -density 600 -append $i ${i%.*}.jpg; done With the help of linux - How to merge images in command line? - Stack Overflow","title":"All pages into the same file"},{"location":"linux/printer/","text":"Printers Adventures on Linux To make the Brother MFC-L2730DW work (I was only able to make it work on a LinuxMint 18.3 Virtual Machine, couldn't make it work on 20) Basically you have to download the drivers only the \"Driver install tool is enough\" and follow the recommendations from How to Make a Brother Printer and Scanner Work in Ubuntu and update the /lib/udev/rules.d/60-libsane1.rules file with: ATTRS{idVendor}==\"04f9\", ATTRS{idProduct}==\"0439\", ENV{libsane_matched}=\"yes\" Copy Paste of How to Make a Brother Printer and Scanner Work in Ubuntu : EDIT 2020-06-19 Long time no edit! My instructions below still mostly work it seems (which is bad on Brother for not making this more simple \u2013 fail, fail fail) I wanted to add a quick note for 18.04 generation Ubuntu friends to consider as you are working through my nasty old messy post below: First, if you are installing a network scanner / printer and you get the question \u201cSelect the number of destination Device URI\u201d question, I just type the number 14 (A): Auto. option at the bottom. Seems to work\u2026 Then, be ready to provide your printers IP address. If you didn\u2019t know you can usually grab this from your router admin settings (I find this easier) or you can find it by pushing some buttons on the printer itself but I recall this was annoying\u2026 in either case you will need to punch in the ip address of the printer during setup so have it ready. For the \u2018libsane udev\u2019 stuff below, the file has seemingly changed in recent ubuntu. It now seems to be 60-libsane1.rules Hope these updates help! \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013 *THIS WILL UNDERGO SOME EDITS BETWEEN OCT 31st and Nov 4th, 2016. If you can get some answers below, great, but hopefully next week it will be more clear and helpful to more models of printers. *Make sure to read my edits below this before starting as some things have changed\u2026 *many edits below! don\u2019t start till you\u2019ve skimmed them all *PRE-note: if you can buy HP it\u2019s probably better for you. If you like pain like me, or already have pain, read on. For some reason Brother printers are kind of hard to make work in Ubuntu for me. Especially the scanner part. They claim to support \u2018linux\u2019 but it\u2019s not typically plug in play for me. However, they are ghetto cheap so I buy them and pay for the savings in set up pain. Oh well. But this time I\u2019m wising up and I\u2019m blogging this for myself (and mom) so that we can get it set up quicker when we do upgrades or machine changes. The main issue always seems to be this: Install the drivers with the command line as per the \u2018pretty decent\u2019 generic software from Brother found here: LINK TO UBUNTU BROTHER PRINTER DRIVERS select \u2018linux\u2019select \u2018Linux (deb\u2019)\u2019Choose \u2018driver install tool\u2019 if you can which gets both the printer and the scanner going.\u2019Agree to the EULA and Download\u2019 save file. it will go to your \u2018downloads\u2019 folder if you have not told your browser to download it somewhere else. You will need to know this for the next part so take a moment after the download to confirm it downloaded and you know where it is. follow instructions that appear on brother site right after downloading drivers, but here they are as of today (make sure on their site it\u2019s up to date and don\u2019t fully trust mine).Step1. Download the tool.(linux-brprinter-installer-*.*.*-*.gz)The tool will be downloaded into the default \u201cDownload\u201d directory. (The directory location varies depending on your Linux distribution.) e.g. /home/(LoginName)/Download Step2. Open a terminal window and go to the directory you downloaded the file to in the last step. Step3. Enter this command to extract the downloaded file: Command: gunzip linux-brprinter-installer-*.*.*-*.gz Step4. Get superuser authorization with the \u201csu\u201d command or \u201csudo su\u201d command. Step5. Run the tool: Command: bash linux-brprinter-installer-*.*.*-* Brother machine name Step6. The driver installation will start. Follow the installation screen directions. When you see the message \u201cWill you specify the DeviceURI ?\u201d, For USB Users: Choose N(No) For Network Users: Choose Y(Yes) and DeviceURI. The install process may take some time. Please wait until it is complete. Do this: 1. Open \u201c/lib/udev/rules.d/40-libsane.rules\u201d file with \u2018sudo nano\u2019 command 2. Add the following two lines to the end of the device list. (Before the line \u201c# The following rule will disable \u2026\u201d): Copy to your computer memory this: # Brother scanners ATTRS{idVendor}==\u201d04f9\u2033, ENV{libsane_matched}=\u201dyes\u201d <\u2013Paste it in with the special \u2018control+shift+v\u2019 (don\u2019t use just regular control+v) feature in terminal Reboot the machine (you can just type sudo reboot if you are still in terminal and want it done fast\u2026) open simple scan software from dash and try a test scan For me, without doing step #2 above the printer will usually work but not the scanner. Which makes me wonder if there is really any Ubuntu support at all\u2026 But my ghetto printer/scanner is doing its job so oh well. Hope this helps! Downloads | MFC-L2730DW | Canada | Brother How to Make a Brother Printer and Scanner Work in Ubuntu \u2013 Wayne Out There [SOLVED] Brother MFC-L2730DW - Scanner Segfault (24-bit Mode Only) - Linux Mint Forums printing - How do I diagnose Brother MFC scanner issues on Ubuntu Linux? - Ask Ubuntu Utilities | Downloads | MFC-L2730DW | Canada | Brother Printer Brother MFC-L2730DW / MFC-L2732DW Driver Linux Mint 19 How to Download and Install | tutorialforlinux.com MFC-L2730DW FAQ Categories | Brother Support CUPS/Printer-specific problems - ArchWiki virtualbox - How Can I connect USB Printer in Virtual Box OSE Win XP - Ask Ubuntu How to enable USB in VirtualBox - TechRepublic Downloads \u2013 Oracle VM VirtualBox Download_Old_Builds_6_1 \u2013 Oracle VM VirtualBox","title":"Printers Adventures on Linux"},{"location":"linux/printer/#printers-adventures-on-linux","text":"To make the Brother MFC-L2730DW work (I was only able to make it work on a LinuxMint 18.3 Virtual Machine, couldn't make it work on 20) Basically you have to download the drivers only the \"Driver install tool is enough\" and follow the recommendations from How to Make a Brother Printer and Scanner Work in Ubuntu and update the /lib/udev/rules.d/60-libsane1.rules file with: ATTRS{idVendor}==\"04f9\", ATTRS{idProduct}==\"0439\", ENV{libsane_matched}=\"yes\" Copy Paste of How to Make a Brother Printer and Scanner Work in Ubuntu : EDIT 2020-06-19 Long time no edit! My instructions below still mostly work it seems (which is bad on Brother for not making this more simple \u2013 fail, fail fail) I wanted to add a quick note for 18.04 generation Ubuntu friends to consider as you are working through my nasty old messy post below: First, if you are installing a network scanner / printer and you get the question \u201cSelect the number of destination Device URI\u201d question, I just type the number 14 (A): Auto. option at the bottom. Seems to work\u2026 Then, be ready to provide your printers IP address. If you didn\u2019t know you can usually grab this from your router admin settings (I find this easier) or you can find it by pushing some buttons on the printer itself but I recall this was annoying\u2026 in either case you will need to punch in the ip address of the printer during setup so have it ready. For the \u2018libsane udev\u2019 stuff below, the file has seemingly changed in recent ubuntu. It now seems to be 60-libsane1.rules Hope these updates help! \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013 *THIS WILL UNDERGO SOME EDITS BETWEEN OCT 31st and Nov 4th, 2016. If you can get some answers below, great, but hopefully next week it will be more clear and helpful to more models of printers. *Make sure to read my edits below this before starting as some things have changed\u2026 *many edits below! don\u2019t start till you\u2019ve skimmed them all *PRE-note: if you can buy HP it\u2019s probably better for you. If you like pain like me, or already have pain, read on. For some reason Brother printers are kind of hard to make work in Ubuntu for me. Especially the scanner part. They claim to support \u2018linux\u2019 but it\u2019s not typically plug in play for me. However, they are ghetto cheap so I buy them and pay for the savings in set up pain. Oh well. But this time I\u2019m wising up and I\u2019m blogging this for myself (and mom) so that we can get it set up quicker when we do upgrades or machine changes. The main issue always seems to be this: Install the drivers with the command line as per the \u2018pretty decent\u2019 generic software from Brother found here: LINK TO UBUNTU BROTHER PRINTER DRIVERS select \u2018linux\u2019select \u2018Linux (deb\u2019)\u2019Choose \u2018driver install tool\u2019 if you can which gets both the printer and the scanner going.\u2019Agree to the EULA and Download\u2019 save file. it will go to your \u2018downloads\u2019 folder if you have not told your browser to download it somewhere else. You will need to know this for the next part so take a moment after the download to confirm it downloaded and you know where it is. follow instructions that appear on brother site right after downloading drivers, but here they are as of today (make sure on their site it\u2019s up to date and don\u2019t fully trust mine).Step1. Download the tool.(linux-brprinter-installer-*.*.*-*.gz)The tool will be downloaded into the default \u201cDownload\u201d directory. (The directory location varies depending on your Linux distribution.) e.g. /home/(LoginName)/Download Step2. Open a terminal window and go to the directory you downloaded the file to in the last step. Step3. Enter this command to extract the downloaded file: Command: gunzip linux-brprinter-installer-*.*.*-*.gz Step4. Get superuser authorization with the \u201csu\u201d command or \u201csudo su\u201d command. Step5. Run the tool: Command: bash linux-brprinter-installer-*.*.*-* Brother machine name Step6. The driver installation will start. Follow the installation screen directions. When you see the message \u201cWill you specify the DeviceURI ?\u201d, For USB Users: Choose N(No) For Network Users: Choose Y(Yes) and DeviceURI. The install process may take some time. Please wait until it is complete. Do this: 1. Open \u201c/lib/udev/rules.d/40-libsane.rules\u201d file with \u2018sudo nano\u2019 command 2. Add the following two lines to the end of the device list. (Before the line \u201c# The following rule will disable \u2026\u201d): Copy to your computer memory this: # Brother scanners ATTRS{idVendor}==\u201d04f9\u2033, ENV{libsane_matched}=\u201dyes\u201d <\u2013Paste it in with the special \u2018control+shift+v\u2019 (don\u2019t use just regular control+v) feature in terminal Reboot the machine (you can just type sudo reboot if you are still in terminal and want it done fast\u2026) open simple scan software from dash and try a test scan For me, without doing step #2 above the printer will usually work but not the scanner. Which makes me wonder if there is really any Ubuntu support at all\u2026 But my ghetto printer/scanner is doing its job so oh well. Hope this helps! Downloads | MFC-L2730DW | Canada | Brother How to Make a Brother Printer and Scanner Work in Ubuntu \u2013 Wayne Out There [SOLVED] Brother MFC-L2730DW - Scanner Segfault (24-bit Mode Only) - Linux Mint Forums printing - How do I diagnose Brother MFC scanner issues on Ubuntu Linux? - Ask Ubuntu Utilities | Downloads | MFC-L2730DW | Canada | Brother Printer Brother MFC-L2730DW / MFC-L2732DW Driver Linux Mint 19 How to Download and Install | tutorialforlinux.com MFC-L2730DW FAQ Categories | Brother Support CUPS/Printer-specific problems - ArchWiki virtualbox - How Can I connect USB Printer in Virtual Box OSE Win XP - Ask Ubuntu How to enable USB in VirtualBox - TechRepublic Downloads \u2013 Oracle VM VirtualBox Download_Old_Builds_6_1 \u2013 Oracle VM VirtualBox","title":"Printers Adventures on Linux"},{"location":"linux/terminal/","text":"Displaying a function definition If you have a bash defined funcion, e.g. foobar, and want to display its definition you can: type foobar To discover its location declare -f foobar To display its definition Found this info at Can bash show a function's definition? - Stack Overflow . Bang commands Description !! Will execute the last command. Same as !-1 or \"up-arrow + return\". The most common use is sudo !! when issued command failed due to insufficient privileges. !n Will execute the line n of the history record. In most cases using mouse is a better deal !-n Will execute the command n lines back. You usually remember the last three-four command you issues so !-2 and !-3 speed things up. !gzip will re-execute the most recent gzip command (history is searched in reverse order). String specified is considered to be the prefix of the command. !?etc.gz same as above but the unique string doesn't have to be at the start of the command. That means that you can identify command by a unique string appearing anywhere in the command (might be faster then Ctrl-R mechanism) !!:1 designates the first argument of the last command. This can be shortened to !1. !!:$ designates the last argument of the preceding command. This may be shortened to !$. I think you need you need to know five major bang commands (!!, !!:h, !!:f, !$, !1) Useful idioms Description sudo !! reexecute the last command with prefix sudo. cd !$ cd to the directory which is the last argument of the previous command. Retrieving previous command arguments Description !:0 is the previous command name !^, !:2, !:3, \u2026, !$ are the arguments of the previous command !* is all the arguments !$ is the last argument. You can also use $_ to get the last argument of the previous command. Lines in history Description !-1 previous command !-2, !-3, ... are earlier commands and arguments can be extracted from earlier commands too !-2^, !-2:2, !-2$, !-2* you can extract particular arguments as well. Word designators Generally a colon (:) separates the event designator and the word designator, but it can be omitted, if the word designator begins with $, %, ^, *, or - . As well for for command line arguments from 1 to 9 ($1-$9) Description 0 the zero\u2019th word (command name) n word n \u02c6 the first argument, i.e., word one (usually first argument of the command) $ the last argument % the word matched by the most recent !? str ? search of str x-y words x through y . \u2212y is short for 0\u2212y * words 1 through the last (like 1\u2212$ ) (all arguments) n* words n through the last (like n\u2212$ ) Modifiers: Description h remove the part of a filename after last \"/\", leaving the path t remove all but the part of the filename after the last slash. for example for \"/etc/resolv.conf\" it will be resolv.conf r remove the last suffix of a filename (extension of the file). For example /etc/resolv e remove all but the last suffix of a filename (extension) g make changes globally, use with s modifier, below p print the command but do not execute it q quote the generated text s/old/new/ substitute new for old in the text. Any delimiter may be used. An & in the argument means the value of old. With empty old , use last old , or the most recent !? str ? search if there was no previous old x quote the generated text, but break into words at blanks and newline & repeat the last substitution Example: echo this is a phrase !:s/this/that<tab> Bash history reuse and bang commands Bash Bang (!) Commands - Linux - SS64.com Unix history and bang commands - Jack Hsu","title":"Terminal"},{"location":"linux/terminal/#displaying-a-function-definition","text":"If you have a bash defined funcion, e.g. foobar, and want to display its definition you can: type foobar To discover its location declare -f foobar To display its definition Found this info at Can bash show a function's definition? - Stack Overflow .","title":"Displaying a function definition"},{"location":"linux/terminal/#bang-commands","text":"Description !! Will execute the last command. Same as !-1 or \"up-arrow + return\". The most common use is sudo !! when issued command failed due to insufficient privileges. !n Will execute the line n of the history record. In most cases using mouse is a better deal !-n Will execute the command n lines back. You usually remember the last three-four command you issues so !-2 and !-3 speed things up. !gzip will re-execute the most recent gzip command (history is searched in reverse order). String specified is considered to be the prefix of the command. !?etc.gz same as above but the unique string doesn't have to be at the start of the command. That means that you can identify command by a unique string appearing anywhere in the command (might be faster then Ctrl-R mechanism) !!:1 designates the first argument of the last command. This can be shortened to !1. !!:$ designates the last argument of the preceding command. This may be shortened to !$. I think you need you need to know five major bang commands (!!, !!:h, !!:f, !$, !1)","title":"Bang commands"},{"location":"linux/terminal/#useful-idioms","text":"Description sudo !! reexecute the last command with prefix sudo. cd !$ cd to the directory which is the last argument of the previous command.","title":"Useful idioms"},{"location":"linux/terminal/#retrieving-previous-command-arguments","text":"Description !:0 is the previous command name !^, !:2, !:3, \u2026, !$ are the arguments of the previous command !* is all the arguments !$ is the last argument. You can also use $_ to get the last argument of the previous command.","title":"Retrieving previous command arguments"},{"location":"linux/terminal/#lines-in-history","text":"Description !-1 previous command !-2, !-3, ... are earlier commands and arguments can be extracted from earlier commands too !-2^, !-2:2, !-2$, !-2* you can extract particular arguments as well.","title":"Lines in history"},{"location":"linux/terminal/#word-designators","text":"Generally a colon (:) separates the event designator and the word designator, but it can be omitted, if the word designator begins with $, %, ^, *, or - . As well for for command line arguments from 1 to 9 ($1-$9) Description 0 the zero\u2019th word (command name) n word n \u02c6 the first argument, i.e., word one (usually first argument of the command) $ the last argument % the word matched by the most recent !? str ? search of str x-y words x through y . \u2212y is short for 0\u2212y * words 1 through the last (like 1\u2212$ ) (all arguments) n* words n through the last (like n\u2212$ )","title":"Word designators"},{"location":"linux/terminal/#modifiers","text":"Description h remove the part of a filename after last \"/\", leaving the path t remove all but the part of the filename after the last slash. for example for \"/etc/resolv.conf\" it will be resolv.conf r remove the last suffix of a filename (extension of the file). For example /etc/resolv e remove all but the last suffix of a filename (extension) g make changes globally, use with s modifier, below p print the command but do not execute it q quote the generated text s/old/new/ substitute new for old in the text. Any delimiter may be used. An & in the argument means the value of old. With empty old , use last old , or the most recent !? str ? search if there was no previous old x quote the generated text, but break into words at blanks and newline & repeat the last substitution Example: echo this is a phrase !:s/this/that<tab> Bash history reuse and bang commands Bash Bang (!) Commands - Linux - SS64.com Unix history and bang commands - Jack Hsu","title":"Modifiers:"},{"location":"linux/tmux/","text":"Send command to all panes prefix :set-window-option synchronize-panes on|off On a default configuration: ctrl-b :set-window-option synchronize-panes on Credits to: tmux send command to all panes","title":"Tmux"},{"location":"linux/tmux/#send-command-to-all-panes","text":"prefix :set-window-option synchronize-panes on|off On a default configuration: ctrl-b :set-window-option synchronize-panes on Credits to: tmux send command to all panes","title":"Send command to all panes"},{"location":"linux/upgrading_python/","text":"How to upgrade python version This is one way of compiling Python code and have it working on your system (Debian based) Always visit Download Python | Python.org to check the newest releases of Python. #!/usr/bin/env bash python_version=3.7.2 sudo apt-get update sudo apt-get -y install \\ build-essential \\ checkinstall \\ libbz2-dev \\ libc6-dev \\ libffi-dev \\ libgdbm-dev \\ libncursesw5-dev \\ libreadline-gplv2-dev \\ libsqlite3-dev \\ libssl-dev \\ tk-dev cd /usr/src sudo wget https://www.python.org/ftp/python/${python_version}/Python-${python_version}.tgz sudo tar xzf Python-${python_version}.tgz cd Python-${python_version} sudo ./configure --enable-optimizations sudo make -j 4 altinstall cd ~/ # Just being sure that the new version is installed python3.7 -V # If we check the current alternatives it will break # update-alternatives --list python3 # One can always add other alternatives sudo update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.7 1 # Just showing off that things are working now namei \"$(which python3)\" python3 -V /usr/bin/env python3 -V After executing this process, pip failed because it could not find lsb_release , creating a symbolic link solved this issue: sudo ln -s /usr/share/pyshared/lsb_release.py /usr/local/lib/python3.7/site-packages/lsb_release.py Possible with the help of: Python 3.6 - install latest version into Linux Mint How To Install Python 3.7.0 on Ubuntu, Debian & LinuxMint - TecAdmin python3 - No module named 'lsb_release' after install Python 3.6.3 from source - Ask Ubuntu","title":"Upgrading Python"},{"location":"linux/upgrading_python/#how-to-upgrade-python-version","text":"This is one way of compiling Python code and have it working on your system (Debian based) Always visit Download Python | Python.org to check the newest releases of Python. #!/usr/bin/env bash python_version=3.7.2 sudo apt-get update sudo apt-get -y install \\ build-essential \\ checkinstall \\ libbz2-dev \\ libc6-dev \\ libffi-dev \\ libgdbm-dev \\ libncursesw5-dev \\ libreadline-gplv2-dev \\ libsqlite3-dev \\ libssl-dev \\ tk-dev cd /usr/src sudo wget https://www.python.org/ftp/python/${python_version}/Python-${python_version}.tgz sudo tar xzf Python-${python_version}.tgz cd Python-${python_version} sudo ./configure --enable-optimizations sudo make -j 4 altinstall cd ~/ # Just being sure that the new version is installed python3.7 -V # If we check the current alternatives it will break # update-alternatives --list python3 # One can always add other alternatives sudo update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.7 1 # Just showing off that things are working now namei \"$(which python3)\" python3 -V /usr/bin/env python3 -V After executing this process, pip failed because it could not find lsb_release , creating a symbolic link solved this issue: sudo ln -s /usr/share/pyshared/lsb_release.py /usr/local/lib/python3.7/site-packages/lsb_release.py Possible with the help of: Python 3.6 - install latest version into Linux Mint How To Install Python 3.7.0 on Ubuntu, Debian & LinuxMint - TecAdmin python3 - No module named 'lsb_release' after install Python 3.6.3 from source - Ask Ubuntu","title":"How to upgrade python version"},{"location":"linux/wifi/","text":"Wifi after hibernation Change /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf to be: [connection] wifi.powersave = 2 Don't know if it really helped anything, but at least now I know that I have wifi after hibernation.","title":"Wifi"},{"location":"linux/wifi/#wifi-after-hibernation","text":"Change /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf to be: [connection] wifi.powersave = 2 Don't know if it really helped anything, but at least now I know that I have wifi after hibernation.","title":"Wifi after hibernation"},{"location":"linux/youtube/","text":"Download a video from youtube To download a video from youtube: youtube-dl --list-formats $youtube_link After seeing the list of options and formats youtube-dl -f $format $youtube_link e.g. for download only the audio: youtube-dl -f 140 $youtube_link Convert the downloaded audio When you download the audio it have an m4a extension, to convert to a mp3 audio file: ffmpeg -i $m4a_file -acodec libmp3lame -ab 128k ${m4a_file%.*}.mp3 To to a batch conversion, and have safe names: for file in *m4a; do rename 's/ /_/g' $file; done && for file in *m4a; do ffmpeg -i $file -acodec libmp3lame -ab 128k ${file%.*}.mp3; done","title":"Youtube"},{"location":"linux/youtube/#download-a-video-from-youtube","text":"To download a video from youtube: youtube-dl --list-formats $youtube_link After seeing the list of options and formats youtube-dl -f $format $youtube_link e.g. for download only the audio: youtube-dl -f 140 $youtube_link","title":"Download a video from youtube"},{"location":"linux/youtube/#convert-the-downloaded-audio","text":"When you download the audio it have an m4a extension, to convert to a mp3 audio file: ffmpeg -i $m4a_file -acodec libmp3lame -ab 128k ${m4a_file%.*}.mp3 To to a batch conversion, and have safe names: for file in *m4a; do rename 's/ /_/g' $file; done && for file in *m4a; do ffmpeg -i $file -acodec libmp3lame -ab 128k ${file%.*}.mp3; done","title":"Convert the downloaded audio"},{"location":"python/","text":"Hints, tips and tricks in python Creating a simple webserver To create a simple webserver: Python 2: python -m SimpleHTTPServer 7777 Python 3: python -m http.server 7777 Vendo os atributos de um objeto Seguindo a dica do StackOverflow conseguimos ver os atributos e respectivos valores de qualquer obejto em python: for attr, value in objeto.__dict__.iteritems(): print attr, value Solving AttributeError: 'module' object has no attribute 'packaging' To the \"AttributeError: 'module' object has no attribute 'packaging'\" error I did as stated here : Start a python session, import pkg_resources, and view the file from which it is loaded: In [1]: import pkg_resources In [2]: pkg_resources. file Out[2]: '/usr/lib/python2.7/dist-packages/pkg_resources.pyc' Remove this file (and the associated *.py file): $ sudo rm /usr/lib/python2.7/dist-packages/pkg_resources.py* Locating the line number of an exception From this answer in StackOverflow : import traceback import sys try: raise Exception(\"foo\") except: for frame in traceback.extract_tb(sys.exc_info()[2]): fname,lineno,fn,text = frame print \"Error in %s on line %d\" % (fname, lineno)","title":"General"},{"location":"python/#hints-tips-and-tricks-in-python","text":"","title":"Hints, tips and tricks in python"},{"location":"python/#creating-a-simple-webserver","text":"To create a simple webserver: Python 2: python -m SimpleHTTPServer 7777 Python 3: python -m http.server 7777","title":"Creating a simple webserver"},{"location":"python/#vendo-os-atributos-de-um-objeto","text":"Seguindo a dica do StackOverflow conseguimos ver os atributos e respectivos valores de qualquer obejto em python: for attr, value in objeto.__dict__.iteritems(): print attr, value","title":"Vendo os atributos de um objeto"},{"location":"python/#solving-attributeerror-module-object-has-no-attribute-packaging","text":"To the \"AttributeError: 'module' object has no attribute 'packaging'\" error I did as stated here : Start a python session, import pkg_resources, and view the file from which it is loaded: In [1]: import pkg_resources In [2]: pkg_resources. file Out[2]: '/usr/lib/python2.7/dist-packages/pkg_resources.pyc' Remove this file (and the associated *.py file): $ sudo rm /usr/lib/python2.7/dist-packages/pkg_resources.py*","title":"Solving AttributeError: 'module' object has no attribute 'packaging'"},{"location":"python/#locating-the-line-number-of-an-exception","text":"From this answer in StackOverflow : import traceback import sys try: raise Exception(\"foo\") except: for frame in traceback.extract_tb(sys.exc_info()[2]): fname,lineno,fn,text = frame print \"Error in %s on line %d\" % (fname, lineno)","title":"Locating the line number of an exception"},{"location":"python/virtualenv/","text":"Working with VirtualEnv Withe the help of Virtual Environments \u2014 The Hitchhiker's Guide to Python : Install virtualenv first with: sudo pip install virtualenv Then create and use a virtual environment for the project: cd project virtualenv venv source venv/bin/activate pip install -r requirements.txt # Do what you have to do deactivate","title":"Virtual Environment"},{"location":"python/virtualenv/#working-with-virtualenv","text":"Withe the help of Virtual Environments \u2014 The Hitchhiker's Guide to Python : Install virtualenv first with: sudo pip install virtualenv Then create and use a virtual environment for the project: cd project virtualenv venv source venv/bin/activate pip install -r requirements.txt # Do what you have to do deactivate","title":"Working with VirtualEnv"}]}