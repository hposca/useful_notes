{
    "content": "<p>\ufeff</p>\n<h1 id=\"dicas-linux\">Dicas Linux</h1>\n<h2 id=\"how-do-i-list-all-cron-jobs-for-all-users\">How do I list all cron jobs for all users?</h2>\n<p>From <a href=\"http://stackoverflow.com/questions/134906/how-do-i-list-all-cron-jobs-for-all-users\">How do I list all cron jobs for all users?</a> :</p>\n<pre><code class=\"Bash\"># As root:\nfor user in $(cut -f1 -d: /etc/passwd); do echo $user; crontab -u $user -l; done\n</code></pre>\n\n<h2 id=\"how-to-create-a-cpu-spike-with-a-bash-command\">How to create a CPU spike with a bash command</h2>\n<p>From <a href=\"http://stackoverflow.com/questions/2925606/how-to-create-a-cpu-spike-with-a-bash-command\">How to create a CPU spike with a bash command</a> :</p>\n<pre><code class=\"Bash\">dd if=/dev/zero of=/dev/null\n</code></pre>\n\n<p>To run more of those to put load on more cores, try to fork it:</p>\n<pre><code class=\"Bash\">fulload() { dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null | dd if=/dev/zero of=/dev/null &amp; }; fulload; read; killall dd\n</code></pre>\n\n<p>Repeat the command in the curly brackets as many times as the number of threads you want to produce (here 4 threads). Simple enter hit will stop it (just make sure no other dd is running on this user or you kill it too).</p>\n<h1 id=\"rsync\">Rsync</h1>\n<h2 id=\"pegando-e-enviando-arquivos-para-a-amazon\">Pegando e enviando arquivos para a Amazon</h2>\n<pre><code class=\"Bash\">rsync -avz --progress -e &quot;ssh -i chave.pem&quot; ubuntu@ip:arquivo .\n</code></pre>\n\n<h2 id=\"apenas-arquivos-novos\">Apenas arquivos novos</h2>\n<p>Dicas <a href=\"http://www.electrictoolbox.com/rsync-ignore-existing-update-newer/\">aqui</a></p>\n<pre><code class=\"Bash\">rsync --update -raz --progress &lt;origem&gt; &lt;destino&gt;\n</code></pre>\n\n<h2 id=\"how-to-gzip-a-directory-transfer-via-scp-and-decompress-in-one-command\">How to gzip a directory, transfer via scp, and decompress in one command?</h2>\n<pre><code class=\"Bash\">rsync -az --progress source_dir/* remote_host:/destination_dir # Show progress bar\n#or:\ntar -zc path/to/source | ssh user@remote tar -zxC path/to/destination # Doesn't show progress bar\n</code></pre>\n\n<h1 id=\"encontrando-arquivos-com-setuid-ativado\">Encontrando arquivos com setuid ativado</h1>\n<p>Com <a href=\"http://www.cyberciti.biz/faq/unix-bsd-linux-setuid-file/\">ajuda</a>, conseguimos encontrar todos os arquivos que est\u00e3o com setuid ativado. Isso foi \u00fatil para resolver um problema que estava dando no SAS devido ao fato dos bin n\u00e3o estarem setados com ele:</p>\n<pre><code class=\"Bash\">find . -xdev \\( -perm -4000 \\) -type f -print0 | xargs -0 ls -l\n</code></pre>\n\n<p>Para se setar o setuid basta se adicionar qual bit ser\u00e1 ser\u00e1 setado como steuid (u,g,o):</p>\n<pre><code class=\"Bash\">chmod 4444 arquivo\n# ou\nchmod 2444 arquivo\n# ou\nchmod 1444 arquivo\n</code></pre>\n\n<h1 id=\"mouse\">Mouse</h1>\n<p>Quando o touchpad parar de funcionar basta executar estes dois comandos:</p>\n<pre><code class=\"Bash\"># Como root:\nmodprobe -r psmouse\nmodprobe psmouse\n</code></pre>\n\n<h1 id=\"sort\">Sort</h1>\n<h3 id=\"sort-com-delimitador-diferente-de-espacos\">Sort com delimitador diferente de espa\u00e7os</h3>\n<pre><code class=\"Bash\">sort -t: myFile\n</code></pre>\n\n<h3 id=\"sort-n-esima-coluna\">Sort n-\u00e9sima coluna</h3>\n<pre><code class=\"Bash\">sort -k3,3 myFile\n</code></pre>\n\n<h3 id=\"sort-com-ordenacao-numerica-de-verdade-9-100\">Sort com ordena\u00e7\u00e3o num\u00e9rica de verdade ( 9 &lt; 100 )</h3>\n<pre><code class=\"Bash\">sort -n myFile\n</code></pre>\n\n<h2 id=\"ativando-swap\">Ativando swap</h2>\n<p>Ativando swap, seguindo o <a href=\"https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04\">tutorial da DigitalOcean</a>:</p>\n<pre><code>#!/usr/bin/env bash\nif [ $(id -u) -ne 0 ]; then echo &quot;Run as root&quot;; exit 1; fi\nfree -m\nfallocate -l 4G /swapfile\nchmod 600 /swapfile\nmkswap /swapfile\nswapon /swapfile\nswapon -s\nfree -m\n</code></pre>\n\n<h1 id=\"loop-com-arquivos-que-tem-espacos-no-nome\">Loop com arquivos que t\u00eam espa\u00e7os no nome</h1>\n<p>Dicas extra\u00eddas <a href=\"http://askubuntu.com/questions/343727/filenames-with-spaces-breaking-for-loop-find-command\">daqui</a> e <a href=\"http://www.cyberciti.biz/tips/handling-filenames-with-spaces-in-bash.html\">daqui</a>.</p>\n<pre><code class=\"Bash\">find . -print0 | while read -d $'\\0' file; do cp -v &quot;$file&quot; /tmp; done\n</code></pre>\n\n<pre><code class=\"Bash\">find . -type f -name '*.*' -printf '%p\\0' | tar --null -uf archive.tar -T -\n</code></pre>\n\n<h1 id=\"descobrindo-a-placa-de-video\">Descobrindo a placa de v\u00eddeo</h1>\n<p>Para se decobrir qual placa de v\u00eddeo estamos usando podemos utilizar o <code>lspci</code> como descrito <a href=\"http://www.binarytides.com/linux-get-gpu-information/\">aqui</a> e <a href=\"http://www.cyberciti.biz/faq/linux-tell-which-graphics-vga-card-installed/\">aqui</a>:</p>\n<pre><code class=\"Bash\">lspci -v\n</code></pre>\n\n<h1 id=\"copying\">Copying</h1>\n<h2 id=\"avoid-copy-if-files-exist-in-destination\">Avoid copy if files exist in destination</h2>\n<pre><code>cp -R -u -p /source /destination\n</code></pre>\n<p>Due to these options:</p>\n<pre><code>-p                           same as --preserve=mode,ownership,timestamps\n    --preserve[=ATTR_LIST]   preserve the specified attributes (default:\n                            mode,ownership,timestamps), if possible\n                            additional attributes: context, links, xattr,\n                            all\n-R, -r, --recursive          copy directories recursively\n    --reflink[=WHEN]         control clone/CoW copies. See below\n    --remove-destination     remove each existing destination file before\n                            attempting to open it (contrast with --force)\n    --sparse=WHEN            control creation of sparse files. See below\n    --strip-trailing-slashes  remove any trailing slashes from each SOURCE\n                            argument\n-u, --update                 copy only when the SOURCE file is newer\n                            than the destination file or when the\n                            destination file is missing\n</code></pre>\n<h1 id=\"displaying-todays-files-only\">Displaying Today\u2019s Files Only</h1>\n<pre><code>find -maxdepth 1 -type f -mtime -1\n</code></pre>\n<h1 id=\"how-to-zip-files-that-are-listed-in-a-text-file\">How to zip files that are listed in a text file</h1>\n<pre><code>cat input.txt | zip filename.zip -@\n</code></pre>\n<h1 id=\"desabilitando-um-usuario-mas-sem-apaga-lo\">Desabilitando um usu\u00e1rio, mas sem apag\u00e1-lo</h1>\n<pre><code>usermod --expiredate 1 [LOGIN]\n\npasswd -l [LOGIN]\n</code></pre>\n<h1 id=\"iptables-firewall\">IPTables (Firewall)</h1>\n<p>Algumas dicas interessantes:</p>\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/10197405/iptables-remove-specific-rules\">Apagando uma regra do firewall por linha</a></li>\n<li><a href=\"http://www.thegeekstuff.com/2011/02/iptables-add-rule/\">Um bom tutorial explicando como funciona</a></li>\n<li><a href=\"https://wiki.centos.org/HowTos/Network/IPTables\">Um tutorial simples</a></li>\n</ul>\n<p>Listando as regras, com portas e n\u00famero das linhas:</p>\n<pre><code>iptables -L -n --line-numbers\n</code></pre>\n<p>Apagando uma linha espec\u00edfica:</p>\n<pre><code>iptables -D INPUT [num]\n</code></pre>\n<p>Adicionando regra para novas conex\u00f5es:</p>\n<pre><code>iptables -A INPUT -m state --state NEW -p tcp --dport [porta] -j ACCEPT\n</code></pre>\n<p>Regra para se rejeitar demais conex\u00f5es:</p>\n<pre><code>iptables -A INPUT -j REJECT --reject-with icmp-host-prohibited\niptables -A INPUT -j DROP\n</code></pre>\n<p>Bloqueando acesso de sa\u00edda (upload) de um IP:</p>\n<pre><code>iptables -A OUTPUT -d [ip-address] -j DROP\n</code></pre>\n<p>Bloqueando sa\u00edda por porta:</p>\n<pre><code>iptables -A OUTPUT -p tcp --dport [port] -j DROP\n</code></pre>\n<p>To block tcp port for an IP address:</p>\n<pre><code>iptables -A OUTPUT -p tcp -d [ip address] --dport [port] -j DROP\n</code></pre>\n<h1 id=\"how-to-run-multiple-simultaneous-x-window-sessions\">How to run multiple simultaneous X Window sessions</h1>\n<p>From <a href=\"http://linuxcommando.blogspot.com.br/2015/02/how-to-run-multiple-simultaneous-x.html\">Linux Commando</a></p>\n<ul>\n<li>Switch to a virtual terminal<ul>\n<li>By default, six virtual text terminals are available to you (Ctrl+Alt+F1 to F6)</li>\n<li>Press Control+Alt+F1 to go to virtual terminal 1</li>\n</ul>\n</li>\n<li>Login as her</li>\n<li>Execute the following command\n    <code>startx -- :1</code></li>\n<li>This starts another X session using the first free graphical console.<ul>\n<li>By default, 6 X consoles are available (Ctrl+Alt+F7 to F12)</li>\n<li>Your own existing X session is Ctrl+Alt+F7</li>\n<li>The next free X console is therefore Ctrl+Alt+F8</li>\n</ul>\n</li>\n<li>To switch from her X session to yours, and vice versa, press Ctrl+Alt+F7 and Ctrl+Alt+F8 respectively.</li>\n</ul>\n<p>You may use the above procedure to create up to 5 additional X sessions (Ctrl+Alt+F8 to Ctrl+Alt+F12).\nFor each additional X session, increment the console number in both step 1 and 3.\nFor instance, switch to virtual terminal 2 (Control+Alt+F2) to execute the command <code>startx -- :2</code>.</p>\n<h1 id=\"create-another-ssh-server\">Create another SSH server</h1>\n<p>Sometimes you need to debug your SSH connection, for those times you can open another SSH server and watch what is happening inside it.</p>\n<pre><code>/usr/sbin/sshd -d -p 2222\n</code></pre>\n<p>And when (from other machine) need to connect to it:</p>\n<pre><code>ssh -p 2222 user@machine\n</code></pre>\n<h1 id=\"no-wired-connection-after-suspend\">No wired connection after suspend</h1>\n<p><strong>(Not tested yet)</strong></p>\n<p>From <a href=\"http://ubuntuforums.org/showthread.php?t=2179603\">this Ubuntu Forum thread</a>:</p>\n<ul>\n<li>Get the Kernel module with <code>lspci -k | grep -iA3 NETWORK</code> or <code>lspci -k | grep -iA3 ethernet</code></li>\n<li>Edit <code>/etc/pm/config.d/modules</code><ul>\n<li>Add <code>SUSPEND_MODULES=\"&lt;the_kernel_module_for_your_network_card&gt;\"</code></li>\n</ul>\n</li>\n</ul>\n<p>Or in one shot:</p>\n<pre><code>lspci -k | grep -iA3 ethernet | grep -i \"Kernel driver\" | awk '{print $NF}'\n</code></pre>\n<p>Knowing that your Kernel module is 8139:</p>\n<ol>\n<li>\n<p>Unload 8139:</p>\n<p>sudo modprobe -r 8139</p>\n</li>\n<li>\n<p>Suspend:</p>\n<p>sudo pm-suspend</p>\n</li>\n<li>\n<p>Resume the computer from suspend</p>\n</li>\n<li>\n<p>Reload the module:</p>\n<p>sudo modprobe 8139</p>\n</li>\n<li>\n<p>Test the network connection.</p>\n</li>\n</ol>\n<h1 id=\"validating-rsa-public-keys\">Validating RSA public keys</h1>\n<pre><code>ssh-keygen -l -f key.pub\n</code></pre>\n<p>More info on <a href=\"http://serverfault.com/questions/453296/how-do-i-validate-a-rsa-ssh-public-key-file-id-rsa-pub\">How do I validate a RSA ssh public key file (id_rsa.pub)? - Server Fault</a></p>\n<h1 id=\"getting-you-own-key-from-the-command-line\">Getting you own key from the command line</h1>\n<p>To get your fingerprint</p>\n<pre><code>ssh-add -l\n</code></pre>\n<p>To get your public key</p>\n<pre><code>ssh-add -L\n</code></pre>\n<p>This is useful when you are inside a Docker container that has your keys forwarded to it using:</p>\n<pre><code>-v $(dirname $SSH_AUTH_SOCK):$(dirname $SSH_AUTH_SOCK)\n-e SSH_AUTH_SOCK=$SSH_AUTH_SOCK\n</code></pre>\n<h1 id=\"getting-home-directory-by-username\">Getting home directory by username</h1>\n<pre><code>eval echo ~$USER\n</code></pre>\n<h1 id=\"reduce-size-of-pdf-files\">Reduce size of PDF files</h1>\n<ul>\n<li><a href=\"http://askubuntu.com/questions/113544/how-can-i-reduce-the-file-size-of-a-scanned-pdf-file\">compression - How can I reduce the file size of a scanned PDF file? - Ask Ubuntu</a></li>\n<li><a href=\"http://askubuntu.com/questions/207447/how-to-reduce-the-size-of-a-pdf-file\">compression - How to reduce the size of a pdf file? - Ask Ubuntu</a></li>\n<li><a href=\"http://jorge.fbarr.net/2012/11/29/reducing-pdf-file-size-in-linux/\">Reducing PDF file-size in Linux | The Road to Elysium</a></li>\n<li><a href=\"http://www.cyberciti.biz/faq/ignore-shell-aliases-functions-when-running-command/\">Bash Shell: Ignore Aliases and Functions When Running A Command</a></li>\n</ul>\n<p>Low quality options:</p>\n<pre><code>gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -sOutputFile=new_file.pdf original_file.pdf\ngs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -sOutputFile=new_file.pdf original_file.pdf\n</code></pre>\n<p>The best balance was found in:</p>\n<pre><code>gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -sOutputFile=new_file.pdf original_file.pdf\n</code></pre>\n<p><strong>Note:</strong> You may need to issue the command with a backslash in front of it if you use 'gs' as an alias:</p>\n<pre><code>\\gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -sOutputFile=new_file.pdf original_file.pdf\n</code></pre>\n<h1 id=\"how-do-i-find-out-which-process-is-eating-up-my-bandwidth\">How do I find out which process is eating up my bandwidth</h1>\n<p>From <a href=\"http://askubuntu.com/questions/2411/how-do-i-find-out-which-process-is-eating-up-my-bandwidth\">networking - How do I find out which process is eating up my bandwidth? - Ask Ubuntu</a>:</p>\n<pre><code>sudo apt-get install -y nethogs\nsudo nethogs eth0\n</code></pre>\n<p>Another way:</p>\n<ul>\n<li>Run <code>sudo iftop</code></li>\n<li>Push <code>S</code> or <code>D</code> to display Source and Destination ports</li>\n<li>Then use <code>netstat -tup</code> to discover the process</li>\n</ul>\n<h1 id=\"splitting-and-merging-pdf-files\">Splitting and merging PDF files</h1>\n<p>With hints from:</p>\n<ul>\n<li><a href=\"http://linuxcommando.blogspot.com.br/2013/02/splitting-up-is-easy-for-pdf-file.html\">Linux Commando: Splitting up is easy for a PDF file</a></li>\n<li><a href=\"http://linuxcommando.blogspot.com.br/2014/01/how-to-split-up-pdf-files-part-2.html\">Linux Commando: How to split up PDF files - part 2</a></li>\n<li>\n<p><a href=\"http://linuxcommando.blogspot.com.br/2015/03/how-to-merge-or-split-pdf-files-using.html\">Linux Commando: How to merge or split pdf files using convert</a></p>\n<p>sudo apt-get update &amp;&amp; sudo apt-get install -y pdftk</p>\n</li>\n</ul>\n<h2 id=\"splitting\">Splitting</h2>\n<p>You can specify page ranges like this:</p>\n<pre><code>pdftk myoldfile.pdf cat 1-2 4-5 output mynewfile.pdf\n</code></pre>\n<p>pdftk has a few more tricks in its back pocket. For example, you can specify a burst operation to split each page in the input file into a separate output file.</p>\n<pre><code>pdftk myoldfile.pdf burst\n</code></pre>\n<p>By default, the output files are named pg_0001.pdf, pg_0002.pdf, etc.</p>\n<h2 id=\"merging\">Merging</h2>\n<p>pdftk is also capable of merging multiple pdf files into one pdf.</p>\n<pre><code>pdftk pg_0001.pdf pg_0002.pdf pg_0004.pdf pg_0005.pdf output mynewfile.pdf\n</code></pre>\n<p>That would merge the files corresponding to the first, second, fourth and fifth pages into a single output pdf.</p>\n<h1 id=\"discovering-available-versions-of-a-package-to-install\">Discovering available versions of a package to install</h1>\n<p>Discover which versions are available using one of the following commands:</p>\n<pre><code>apt-cache policy &lt;package-name&gt;\napt-cache madison &lt;package-name&gt;\n</code></pre>\n<p>Then, to install the chosen version:</p>\n<pre><code>sudo apt-get install package=version\n</code></pre>\n<h1 id=\"copying-text-from-the-command-line\">Copying text from the command line</h1>\n<pre><code>xclip -sel clip &lt; ~/.ssh/id_rsa.pub\n</code></pre>", 
    "url": "/linux/", 
    "language": "en", 
    "title": "General"
}